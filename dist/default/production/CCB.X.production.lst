

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Wed Jul 19 10:35:37 2017

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    15                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1
    84                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    85                           	psect	text67,global,reloc=2,class=CODE,delta=1
    86                           	psect	text68,global,reloc=2,class=CODE,delta=1
    87                           	psect	text69,global,reloc=2,class=CODE,delta=1
    88                           	psect	text70,global,reloc=2,class=CODE,delta=1
    89                           	psect	text71,global,reloc=2,class=CODE,delta=1
    90                           	psect	text72,global,reloc=2,class=CODE,delta=1
    91                           	psect	text73,global,reloc=2,class=CODE,delta=1
    92                           	psect	text74,global,reloc=2,class=CODE,delta=1
    93                           	psect	text75,global,reloc=2,class=CODE,delta=1
    94                           	psect	text76,global,reloc=2,class=CODE,delta=1
    95                           	psect	text77,global,reloc=2,class=CODE,delta=1
    96                           	psect	text78,global,reloc=2,class=CODE,delta=1
    97                           	psect	text79,global,reloc=2,class=CODE,delta=1
    98                           	psect	text80,global,reloc=2,class=CODE,delta=1
    99                           	psect	text81,global,reloc=2,class=CODE,delta=1
   100                           	psect	text82,global,reloc=2,class=CODE,delta=1
   101                           	psect	text83,global,reloc=2,class=CODE,delta=1
   102                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   103                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   104                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   105  0000                     
   106                           	psect	idataCOMRAM
   107  002E46                     __pidataCOMRAM:
   108                           	opt stack 0
   109                           
   110                           ;initializer for _PacketForPiIdentifier
   111  002E46  FF                 	db	255
   112  0000                     _ANSELAbits	set	3896
   113  0000                     _ANSELBbits	set	3897
   114  0000                     _ANSELCbits	set	3898
   115  0000                     _PMD0bits	set	3903
   116  0000                     _ADRES	set	4035
   117  0000                     _ADCON0bits	set	4034
   118  0000                     _ADCON1bits	set	4033
   119  0000                     _ADCON2bits	set	4032
   120  0000                     _BAUDCONbits	set	4024
   121  0000                     _EEADR	set	4009
   122  0000                     _EECON1bits	set	4006
   123  0000                     _EECON2	set	4007
   124  0000                     _EEDATA	set	4008
   125  0000                     _INTCONbits	set	4082
   126  0000                     _IOCBbits	set	3938
   127  0000                     _IPR1bits	set	3999
   128  0000                     _LATAbits	set	3977
   129  0000                     _LATBbits	set	3978
   130  0000                     _LATCbits	set	3979
   131  0000                     _OSCCONbits	set	4051
   132  0000                     _OSCTUNEbits	set	3995
   133  0000                     _PIE1bits	set	3997
   134  0000                     _PIE3bits	set	4003
   135  0000                     _PIR1bits	set	3998
   136  0000                     _PIR3bits	set	4004
   137  0000                     _PORTAbits	set	3968
   138  0000                     _PORTBbits	set	3969
   139  0000                     _PORTCbits	set	3970
   140  0000                     _PR2	set	4027
   141  0000                     _RCREG1	set	4014
   142  0000                     _RCSTA1bits	set	4011
   143  0000                     _SPBRG1	set	4015
   144  0000                     _SSP1BUF	set	4041
   145  0000                     _SSP2BUF	set	3951
   146  0000                     _SSP2CON1bits	set	3948
   147  0000                     _SSP2STATbits	set	3949
   148  0000                     _T2CONbits	set	4026
   149  0000                     _TMR2	set	4028
   150  0000                     _TRISAbits	set	3986
   151  0000                     _TRISBbits	set	3987
   152  0000                     _TRISCbits	set	3988
   153  0000                     _TXREG1	set	4013
   154  0000                     _TXSTA1bits	set	4012
   155  0000                     _WDTCONbits	set	4049
   156                           
   157                           	psect	smallconst
   158  000636                     __psmallconst:
   159                           	opt stack 0
   160  000636  00                 	db	0
   161  000637                     STR_1:
   162  000637  00                 	db	0
   163  0000                     
   164                           ; #config settings
   165  000638  00                 	db	0	; dummy byte at the end
   166  0000                     
   167                           	psect	cinit
   168  00260C                     __pcinit:
   169                           	opt stack 0
   170  00260C                     start_initialization:
   171                           	opt stack 0
   172  00260C                     __initialization:
   173                           	opt stack 0
   174                           
   175                           ; Clear objects allocated to BIGRAM (360 bytes)
   176  00260C  EE04  F047         	lfsr	0,__pbssBIGRAM
   177  002610  EE11 F068          	lfsr	1,360
   178  002614                     clear_0:
   179  002614  6AEE               	clrf	postinc0,c
   180  002616  50E5               	movf	postdec1,w,c
   181  002618  50E1               	movf	fsr1l,w,c
   182  00261A  E1FC               	bnz	clear_0
   183  00261C  50E2               	movf	fsr1h,w,c
   184  00261E  E1FA               	bnz	clear_0
   185                           
   186                           ; Clear objects allocated to BANK4 (71 bytes)
   187  002620  EE04  F000         	lfsr	0,__pbssBANK4
   188  002624  0E47               	movlw	71
   189  002626                     clear_1:
   190  002626  6AEE               	clrf	postinc0,c
   191  002628  06E8               	decf	wreg,f,c
   192  00262A  E1FD               	bnz	clear_1
   193                           
   194                           ; Clear objects allocated to BANK3 (251 bytes)
   195  00262C  EE03  F000         	lfsr	0,__pbssBANK3
   196  002630  0EFB               	movlw	251
   197  002632                     clear_2:
   198  002632  6AEE               	clrf	postinc0,c
   199  002634  06E8               	decf	wreg,f,c
   200  002636  E1FD               	bnz	clear_2
   201                           
   202                           ; Clear objects allocated to BANK2 (240 bytes)
   203  002638  EE02  F000         	lfsr	0,__pbssBANK2
   204  00263C  0EF0               	movlw	240
   205  00263E                     clear_3:
   206  00263E  6AEE               	clrf	postinc0,c
   207  002640  06E8               	decf	wreg,f,c
   208  002642  E1FD               	bnz	clear_3
   209                           
   210                           ; Clear objects allocated to BANK1 (234 bytes)
   211  002644  EE01  F000         	lfsr	0,__pbssBANK1
   212  002648  0EEA               	movlw	234
   213  00264A                     clear_4:
   214  00264A  6AEE               	clrf	postinc0,c
   215  00264C  06E8               	decf	wreg,f,c
   216  00264E  E1FD               	bnz	clear_4
   217                           
   218                           ; Clear objects allocated to BANK0 (98 bytes)
   219  002650  EE00  F060         	lfsr	0,__pbssBANK0
   220  002654  0E62               	movlw	98
   221  002656                     clear_5:
   222  002656  6AEE               	clrf	postinc0,c
   223  002658  06E8               	decf	wreg,f,c
   224  00265A  E1FD               	bnz	clear_5
   225                           
   226                           ; Clear objects allocated to COMRAM (31 bytes)
   227  00265C  EE00  F03E         	lfsr	0,__pbssCOMRAM
   228  002660  0E1F               	movlw	31
   229  002662                     clear_6:
   230  002662  6AEE               	clrf	postinc0,c
   231  002664  06E8               	decf	wreg,f,c
   232  002666  E1FD               	bnz	clear_6
   233                           
   234                           ; Initialize objects allocated to COMRAM (1 bytes)
   235                           ; load TBLPTR registers with __pidataCOMRAM
   236  002668  0E46               	movlw	low __pidataCOMRAM
   237  00266A  6EF6               	movwf	tblptrl,c
   238  00266C  0E2E               	movlw	high __pidataCOMRAM
   239  00266E  6EF7               	movwf	tblptrh,c
   240  002670  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   241  002672  6EF8               	movwf	tblptru,c
   242  002674  0009               	tblrd		*+	;fetch initializer
   243  002676  CFF5 F05D          	movff	tablat,__pdataCOMRAM
   244  00267A                     end_of_initialization:
   245                           	opt stack 0
   246  00267A                     __end_of__initialization:
   247                           	opt stack 0
   248  00267A  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   249  00267C  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   250  00267E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   251  002680  6EF8               	movwf	tblptru,c
   252  002682  0100               	movlb	0
   253  002684  EFE8  F004         	goto	_main	;jump to C main() function
   254                           tblptru	equ	0xFF8
   255                           tblptrh	equ	0xFF7
   256                           tblptrl	equ	0xFF6
   257                           tablat	equ	0xFF5
   258                           postinc0	equ	0xFEE
   259                           wreg	equ	0xFE8
   260                           postdec1	equ	0xFE5
   261                           fsr1h	equ	0xFE2
   262                           fsr1l	equ	0xFE1
   263                           
   264                           	psect	bssCOMRAM
   265  00003E                     __pbssCOMRAM:
   266                           	opt stack 0
   267  00003E                     _BTEnabled:
   268                           	opt stack 0
   269  00003E                     	ds	1
   270  00003F                     _BroadcastCheckUC:
   271                           	opt stack 0
   272  00003F                     	ds	1
   273  000040                     _CFLEDFlashEnable:
   274                           	opt stack 0
   275  000040                     	ds	1
   276  000041                     _CFLEDFlashState:
   277                           	opt stack 0
   278  000041                     	ds	1
   279  000042                     _DeArmTickCG:
   280                           	opt stack 0
   281  000042                     	ds	1
   282  000043                     _DeArmTimerEnabled:
   283                           	opt stack 0
   284  000043                     	ds	1
   285  000044                     _Discovered_New_ISC:
   286                           	opt stack 0
   287  000044                     	ds	1
   288  000045                     _HalfCycleCounterCG:
   289                           	opt stack 0
   290  000045                     	ds	1
   291  000046                     _ISC_SN_ArrayIndexUCG:
   292                           	opt stack 0
   293  000046                     	ds	1
   294  000047                     _ISC_SN_Array_MissingUCG:
   295                           	opt stack 0
   296  000047                     	ds	1
   297  000048                     _LowSpeedTickBTCG:
   298                           	opt stack 0
   299  000048                     	ds	1
   300  000049                     _LowSpeedTickCG:
   301                           	opt stack 0
   302  000049                     	ds	1
   303  00004A                     _LowSpeedTickPATCG:
   304                           	opt stack 0
   305  00004A                     	ds	1
   306  00004B                     _LowSpeedTickPBTCG:
   307                           	opt stack 0
   308  00004B                     	ds	1
   309  00004C                     _MissingPulseCounterCG:
   310                           	opt stack 0
   311  00004C                     	ds	1
   312  00004D                     _ModeCG:
   313                           	opt stack 0
   314  00004D                     	ds	1
   315  00004E                     _New_ISC_SN:
   316                           	opt stack 0
   317  00004E                     	ds	1
   318  00004F                     _PATEnabled:
   319                           	opt stack 0
   320  00004F                     	ds	1
   321  000050                     _PBTEnabled:
   322                           	opt stack 0
   323  000050                     	ds	1
   324  000051                     _PiBufferRXNEXTUCA:
   325                           	opt stack 0
   326  000051                     	ds	1
   327  000052                     _PiBufferTXNEXTUCA:
   328                           	opt stack 0
   329  000052                     	ds	1
   330  000053                     _Show_Missing_ISC:
   331                           	opt stack 0
   332  000053                     	ds	1
   333  000054                     _ToggleRelay:
   334                           	opt stack 0
   335  000054                     	ds	1
   336  000055                     _bufferRXLenUCA:
   337                           	opt stack 0
   338  000055                     	ds	1
   339  000056                     _bufferRXNextUCA:
   340                           	opt stack 0
   341  000056                     	ds	1
   342  000057                     _bufferTXLenUCA:
   343                           	opt stack 0
   344  000057                     	ds	1
   345  000058                     _bufferTXNextUCA:
   346                           	opt stack 0
   347  000058                     	ds	1
   348  000059                     _flagST7540:
   349                           	opt stack 0
   350  000059                     	ds	1
   351  00005A                     _flagUART:
   352                           	opt stack 0
   353  00005A                     	ds	1
   354  00005B                     _flagUARTRead:
   355                           	opt stack 0
   356  00005B                     	ds	1
   357  00005C                     _test:
   358                           	opt stack 0
   359  00005C                     	ds	1
   360                           tblptru	equ	0xFF8
   361                           tblptrh	equ	0xFF7
   362                           tblptrl	equ	0xFF6
   363                           tablat	equ	0xFF5
   364                           postinc0	equ	0xFEE
   365                           wreg	equ	0xFE8
   366                           postdec1	equ	0xFE5
   367                           fsr1h	equ	0xFE2
   368                           fsr1l	equ	0xFE1
   369                           
   370                           	psect	dataCOMRAM
   371  00005D                     __pdataCOMRAM:
   372                           	opt stack 0
   373  00005D                     _PacketForPiIdentifier:
   374                           	opt stack 0
   375  00005D                     	ds	1
   376                           tblptru	equ	0xFF8
   377                           tblptrh	equ	0xFF7
   378                           tblptrl	equ	0xFF6
   379                           tablat	equ	0xFF5
   380                           postinc0	equ	0xFEE
   381                           wreg	equ	0xFE8
   382                           postdec1	equ	0xFE5
   383                           fsr1h	equ	0xFE2
   384                           fsr1l	equ	0xFE1
   385                           
   386                           	psect	bssBANK0
   387  000060                     __pbssBANK0:
   388                           	opt stack 0
   389  000060                     _EEPRead:
   390                           	opt stack 0
   391  000060                     	ds	5
   392  000065                     _EEPWrite:
   393                           	opt stack 0
   394  000065                     	ds	5
   395  00006A                     _FireOutFloat:
   396                           	opt stack 0
   397  00006A                     	ds	3
   398  00006D                     _fireOutValueSLG:
   399                           	opt stack 0
   400  00006D                     	ds	3
   401  000070                     _BTHighSpeedTickUIG:
   402                           	opt stack 0
   403  000070                     	ds	2
   404  000072                     _CFLEDFlashTickUIG:
   405                           	opt stack 0
   406  000072                     	ds	2
   407  000074                     _CF_STAUTS_TimerUIG:
   408                           	opt stack 0
   409  000074                     	ds	2
   410  000076                     _CheckISCTimerUIG:
   411                           	opt stack 0
   412  000076                     	ds	2
   413  000078                     _DeArmHighTickUIG:
   414                           	opt stack 0
   415  000078                     	ds	2
   416  00007A                     _ELT_Counter:
   417                           	opt stack 0
   418  00007A                     	ds	2
   419  00007C                     _HighSpeedTickPAUIG:
   420                           	opt stack 0
   421  00007C                     	ds	2
   422  00007E                     _HighSpeedTickPBTUIG:
   423                           	opt stack 0
   424  00007E                     	ds	2
   425  000080                     _HighSpeedTickUIG:
   426                           	opt stack 0
   427  000080                     	ds	2
   428  000082                     _IBC_ComsCrashTimer:
   429                           	opt stack 0
   430  000082                     	ds	2
   431  000084                     _IBC_Default_Data:
   432                           	opt stack 0
   433  000084                     	ds	2
   434  000086                     _IBC_Faults_Data:
   435                           	opt stack 0
   436  000086                     	ds	2
   437  000088                     _ISC_CF_Index:
   438                           	opt stack 0
   439  000088                     	ds	2
   440  00008A                     _ISC_Packet_Index:
   441                           	opt stack 0
   442  00008A                     	ds	2
   443  00008C                     _ISC_Switch_TempUSG:
   444                           	opt stack 0
   445  00008C                     	ds	2
   446  00008E                     _IdleTimerUIG:
   447                           	opt stack 0
   448  00008E                     	ds	2
   449  000090                     _Production_ISC_SN_Counter:
   450                           	opt stack 0
   451  000090                     	ds	2
   452  000092                     _ReceivedPLMBufferIndexIG:
   453                           	opt stack 0
   454  000092                     	ds	2
   455  000094                     _ReceivedPiBufferIndexIG:
   456                           	opt stack 0
   457  000094                     	ds	2
   458  000096                     _TransmitPLMBufferIG:
   459                           	opt stack 0
   460  000096                     	ds	2
   461  000098                     _TransmitPiBufferIG:
   462                           	opt stack 0
   463  000098                     	ds	2
   464  00009A                     _cableFaultCounter:
   465                           	opt stack 0
   466  00009A                     	ds	2
   467  00009C                     _earthLeakageCounter:
   468                           	opt stack 0
   469  00009C                     	ds	2
   470  00009E                     _earthLeakageStart:
   471                           	opt stack 0
   472  00009E                     	ds	2
   473  0000A0                     _mainsZero_CrossingValueUSG:
   474                           	opt stack 0
   475  0000A0                     	ds	2
   476  0000A2                     _statusFlagsUSG:
   477                           	opt stack 0
   478  0000A2                     	ds	2
   479  0000A4                     _temp:
   480                           	opt stack 0
   481  0000A4                     	ds	2
   482  0000A6                     _AlarmStatusUCG:
   483                           	opt stack 0
   484  0000A6                     	ds	1
   485  0000A7                     _CableFaultStatusUCG:
   486                           	opt stack 0
   487  0000A7                     	ds	1
   488  0000A8                     _ClearToFire:
   489                           	opt stack 0
   490  0000A8                     	ds	1
   491  0000A9                     _Discover_ISC_ModeUCG:
   492                           	opt stack 0
   493  0000A9                     	ds	1
   494  0000AA                     _FireButtonStatusUCG:
   495                           	opt stack 0
   496  0000AA                     	ds	1
   497  0000AB                     _FiringStatusUCG:
   498                           	opt stack 0
   499  0000AB                     	ds	1
   500  0000AC                     _HighPulseCountCG:
   501                           	opt stack 0
   502  0000AC                     	ds	1
   503  0000AD                     _ISC_SN_Array_SizeUCG:
   504                           	opt stack 0
   505  0000AD                     	ds	1
   506  0000AE                     _ISC_Transmit_Packet_Ready:
   507                           	opt stack 0
   508  0000AE                     	ds	1
   509  0000AF                     _KeySwitchStateUCG:
   510                           	opt stack 0
   511  0000AF                     	ds	1
   512  0000B0                     _KeySwitchStatusUCG:
   513                           	opt stack 0
   514  0000B0                     	ds	1
   515  0000B1                     _NewCFStatusUCG:
   516                           	opt stack 0
   517  0000B1                     	ds	1
   518  0000B2                     _PiBufferTXLenUCA:
   519                           	opt stack 0
   520  0000B2                     	ds	1
   521  0000B3                     _Pi_Status_Update:
   522                           	opt stack 0
   523  0000B3                     	ds	1
   524  0000B4                     _RelayStatusUCG:
   525                           	opt stack 0
   526  0000B4                     	ds	1
   527  0000B5                     _ResetStatusUCG:
   528                           	opt stack 0
   529  0000B5                     	ds	1
   530  0000B6                     _cableFaultProblemUCG:
   531                           	opt stack 0
   532  0000B6                     	ds	1
   533  0000B7                     _earthLeakageProblemUCG:
   534                           	opt stack 0
   535  0000B7                     	ds	1
   536  0000B8                     _packetNumberUC:
   537                           	opt stack 0
   538  0000B8                     	ds	1
   539  0000B9                     _ReceivedPiBufferCG:
   540                           	opt stack 0
   541  0000B9                     	ds	7
   542  0000C0                     _PiDefaultData:
   543                           	opt stack 0
   544  0000C0                     	ds	2
   545                           tblptru	equ	0xFF8
   546                           tblptrh	equ	0xFF7
   547                           tblptrl	equ	0xFF6
   548                           tablat	equ	0xFF5
   549                           postinc0	equ	0xFEE
   550                           wreg	equ	0xFE8
   551                           postdec1	equ	0xFE5
   552                           fsr1h	equ	0xFE2
   553                           fsr1l	equ	0xFE1
   554                           
   555                           	psect	bssBANK1
   556  000100                     __pbssBANK1:
   557                           	opt stack 0
   558  000100                     _TransmitPiBufferCG:
   559                           	opt stack 0
   560  000100                     	ds	80
   561  000150                     _bufferTXST7540UCA:
   562                           	opt stack 0
   563  000150                     	ds	79
   564  00019F                     _bufferRXST7540UCA:
   565                           	opt stack 0
   566  00019F                     	ds	75
   567                           tblptru	equ	0xFF8
   568                           tblptrh	equ	0xFF7
   569                           tblptrl	equ	0xFF6
   570                           tablat	equ	0xFF5
   571                           postinc0	equ	0xFEE
   572                           wreg	equ	0xFE8
   573                           postdec1	equ	0xFE5
   574                           fsr1h	equ	0xFE2
   575                           fsr1l	equ	0xFE1
   576                           
   577                           	psect	bssBANK2
   578  000200                     __pbssBANK2:
   579                           	opt stack 0
   580  000200                     _ISC_SN_ArrayUIG:
   581                           	opt stack 0
   582  000200                     	ds	60
   583  00023C                     _ISC_SN_Array_ReverseUSG:
   584                           	opt stack 0
   585  00023C                     	ds	60
   586  000278                     _boosterCommsDataReverse:
   587                           	opt stack 0
   588  000278                     	ds	60
   589  0002B4                     _routerData:
   590                           	opt stack 0
   591  0002B4                     	ds	60
   592                           tblptru	equ	0xFF8
   593                           tblptrh	equ	0xFF7
   594                           tblptrl	equ	0xFF6
   595                           tablat	equ	0xFF5
   596                           postinc0	equ	0xFEE
   597                           wreg	equ	0xFE8
   598                           postdec1	equ	0xFE5
   599                           fsr1h	equ	0xFE2
   600                           fsr1l	equ	0xFE1
   601                           
   602                           	psect	bssBANK3
   603  000300                     __pbssBANK3:
   604                           	opt stack 0
   605  000300                     _ReceivedPLMBufferCG:
   606                           	opt stack 0
   607  000300                     	ds	71
   608  000347                     _ISC_PARENT_SNArrayUIG:
   609                           	opt stack 0
   610  000347                     	ds	60
   611  000383                     _ISC_SN_ArrayUIG_Missing:
   612                           	opt stack 0
   613  000383                     	ds	60
   614  0003BF                     _ISC_SN_Array_Missing_ReverseUSG:
   615                           	opt stack 0
   616  0003BF                     	ds	60
   617                           tblptru	equ	0xFF8
   618                           tblptrh	equ	0xFF7
   619                           tblptrl	equ	0xFF6
   620                           tablat	equ	0xFF5
   621                           postinc0	equ	0xFEE
   622                           wreg	equ	0xFE8
   623                           postdec1	equ	0xFE5
   624                           fsr1h	equ	0xFE2
   625                           fsr1l	equ	0xFE1
   626                           
   627                           	psect	bssBANK4
   628  000400                     __pbssBANK4:
   629                           	opt stack 0
   630  000400                     _TransmitPLMBufferCG:
   631                           	opt stack 0
   632  000400                     	ds	71
   633                           tblptru	equ	0xFF8
   634                           tblptrh	equ	0xFF7
   635                           tblptrl	equ	0xFF6
   636                           tablat	equ	0xFF5
   637                           postinc0	equ	0xFEE
   638                           wreg	equ	0xFE8
   639                           postdec1	equ	0xFE5
   640                           fsr1h	equ	0xFE2
   641                           fsr1l	equ	0xFE1
   642                           
   643                           	psect	bssBIGRAM
   644  000447                     __pbssBIGRAM:
   645                           	opt stack 0
   646  000447                     _boosterCommsData:
   647                           	opt stack 0
   648  000447                     	ds	360
   649                           tblptru	equ	0xFF8
   650                           tblptrh	equ	0xFF7
   651                           tblptrl	equ	0xFF6
   652                           tablat	equ	0xFF5
   653                           postinc0	equ	0xFEE
   654                           wreg	equ	0xFE8
   655                           postdec1	equ	0xFE5
   656                           fsr1h	equ	0xFE2
   657                           fsr1l	equ	0xFE1
   658                           
   659                           	psect	cstackBANK0
   660  0000C2                     __pcstackBANK0:
   661                           	opt stack 0
   662  0000C2                     ?_CRC16:
   663                           	opt stack 0
   664  0000C2                     ?_ReadAnalogVoltage:
   665                           	opt stack 0
   666  0000C2                     ?___ftpack:
   667                           	opt stack 0
   668  0000C2                     ?___aldiv:
   669                           	opt stack 0
   670  0000C2                     StartTransmitST7540@discardUC:
   671                           	opt stack 0
   672  0000C2                     ReceiveNewDataST7540@discardUC:
   673                           	opt stack 0
   674  0000C2                     UART_Write@data:
   675                           	opt stack 0
   676  0000C2                     CheckBroadcastPacket@Command:
   677                           	opt stack 0
   678  0000C2                     ReadConfigST7540@frameDataUS:
   679                           	opt stack 0
   680  0000C2                     CRC16@data_p:
   681                           	opt stack 0
   682  0000C2                     getIBCDefaultData@returningData:
   683                           	opt stack 0
   684  0000C2                     WaitTickCount@tickCountUS:
   685                           	opt stack 0
   686  0000C2                     Write_b_eep@badd:
   687                           	opt stack 0
   688  0000C2                     Read_b_eep@badd:
   689                           	opt stack 0
   690  0000C2                     ___ftpack@arg:
   691                           	opt stack 0
   692  0000C2                     ___ftge@ff1:
   693                           	opt stack 0
   694  0000C2                     ___aldiv@dividend:
   695                           	opt stack 0
   696                           
   697                           ; 4 bytes @ 0x0
   698  0000C2                     	ds	1
   699  0000C3                     
   700                           ; 1 bytes @ 0x1
   701  0000C3                     	ds	1
   702  0000C4                     ??_ReadMAINS_ZeroCrossing:
   703  0000C4                     ReadAnalogVoltage@channelC:
   704                           	opt stack 0
   705  0000C4                     getFireButtonState@FireButtonStatusfirstUC:
   706                           	opt stack 0
   707  0000C4                     getResetButtonState@ResetButtonStatusfirstUC:
   708                           	opt stack 0
   709  0000C4                     Write_b_eep@bdat:
   710                           	opt stack 0
   711  0000C4                     ReadConfigST7540@configDataUS:
   712                           	opt stack 0
   713  0000C4                     CRC16@length:
   714                           	opt stack 0
   715  0000C4                     EEPROMRead@address:
   716                           	opt stack 0
   717  0000C4                     WriteConfigST7540@frameDataUS:
   718                           	opt stack 0
   719                           
   720                           ; 3 bytes @ 0x2
   721  0000C4                     	ds	1
   722  0000C5                     getFireButtonState@FireButtonStatussecondUC:
   723                           	opt stack 0
   724  0000C5                     getResetButtonState@ResetButtonStatussecondUC:
   725                           	opt stack 0
   726  0000C5                     Write_b_eep@GIE_BIT_VAL:
   727                           	opt stack 0
   728  0000C5                     ___ftpack@exp:
   729                           	opt stack 0
   730  0000C5                     ReadEarthLeakage@earthLeakageValueUS:
   731                           	opt stack 0
   732  0000C5                     ReadCableFault@cableFaultValueUS:
   733                           	opt stack 0
   734  0000C5                     ___ftge@ff2:
   735                           	opt stack 0
   736                           
   737                           ; 3 bytes @ 0x3
   738  0000C5                     	ds	1
   739  0000C6                     ??_ReadConfigST7540:
   740  0000C6                     ??_CRC16:
   741  0000C6                     ReadMAINS_ZeroCrossing@mainsZero_CrossingValueUSG2:
   742                           	opt stack 0
   743  0000C6                     ___ftpack@sign:
   744                           	opt stack 0
   745  0000C6                     EEPROMClearReset@address:
   746                           	opt stack 0
   747  0000C6                     EEPROMSetReset@address:
   748                           	opt stack 0
   749  0000C6                     ___aldiv@divisor:
   750                           	opt stack 0
   751                           
   752                           ; 4 bytes @ 0x4
   753  0000C6                     	ds	1
   754  0000C7                     ??___ftpack:
   755  0000C7                     FIRE@i:
   756                           	opt stack 0
   757  0000C7                     ReadEarthLeakage@Failed:
   758                           	opt stack 0
   759  0000C7                     WriteConfigST7540@configDataUS:
   760                           	opt stack 0
   761                           
   762                           ; 3 bytes @ 0x5
   763  0000C7                     	ds	1
   764  0000C8                     ??___ftge:
   765                           
   766                           ; 1 bytes @ 0x6
   767  0000C8                     	ds	1
   768  0000C9                     ReadConfigST7540@discardUC:
   769                           	opt stack 0
   770  0000C9                     ReadEarthLeakage@i:
   771                           	opt stack 0
   772                           
   773                           ; 2 bytes @ 0x7
   774  0000C9                     	ds	1
   775  0000CA                     ??_WriteConfigST7540:
   776  0000CA                     ?___ftdiv:
   777                           	opt stack 0
   778  0000CA                     ?___lwtoft:
   779                           	opt stack 0
   780  0000CA                     ReadConfigST7540@bitsReceivedUC:
   781                           	opt stack 0
   782  0000CA                     ___aldiv@counter:
   783                           	opt stack 0
   784  0000CA                     CRC16@data:
   785                           	opt stack 0
   786  0000CA                     ___lwtoft@c:
   787                           	opt stack 0
   788  0000CA                     ___ftdiv@f1:
   789                           	opt stack 0
   790                           
   791                           ; 3 bytes @ 0x8
   792  0000CA                     	ds	1
   793  0000CB                     ___aldiv@sign:
   794                           	opt stack 0
   795                           
   796                           ; 1 bytes @ 0x9
   797  0000CB                     	ds	1
   798  0000CC                     CRC16@i:
   799                           	opt stack 0
   800  0000CC                     ___aldiv@quotient:
   801                           	opt stack 0
   802                           
   803                           ; 4 bytes @ 0xA
   804  0000CC                     	ds	1
   805  0000CD                     ?___ftadd:
   806                           	opt stack 0
   807  0000CD                     WriteConfigST7540@discardUC:
   808                           	opt stack 0
   809  0000CD                     CRC16@crc:
   810                           	opt stack 0
   811  0000CD                     ___ftadd@f1:
   812                           	opt stack 0
   813  0000CD                     ___ftdiv@f2:
   814                           	opt stack 0
   815                           
   816                           ; 3 bytes @ 0xB
   817  0000CD                     	ds	1
   818  0000CE                     WriteConfigST7540@bitsSentUC:
   819                           	opt stack 0
   820                           
   821                           ; 1 bytes @ 0xC
   822  0000CE                     	ds	1
   823  0000CF                     ??_CheckCRCUART:
   824  0000CF                     CreateMessageUART@packetSourceUS:
   825                           	opt stack 0
   826  0000CF                     InitST7540@frameDataTXUS:
   827                           	opt stack 0
   828                           
   829                           ; 3 bytes @ 0xD
   830  0000CF                     	ds	1
   831  0000D0                     ??___ftdiv:
   832  0000D0                     ___ftadd@f2:
   833                           	opt stack 0
   834  0000D0                     UART_Init@baudrate:
   835                           	opt stack 0
   836                           
   837                           ; 4 bytes @ 0xE
   838  0000D0                     	ds	1
   839  0000D1                     CreateMessageUART@commandUC:
   840                           	opt stack 0
   841  0000D1                     CheckCRCUART@packetCRCUS:
   842                           	opt stack 0
   843                           
   844                           ; 2 bytes @ 0xF
   845  0000D1                     	ds	1
   846  0000D2                     CreateMessageUART@dataLenUC:
   847                           	opt stack 0
   848  0000D2                     InitST7540@configDataTXUS:
   849                           	opt stack 0
   850                           
   851                           ; 3 bytes @ 0x10
   852  0000D2                     	ds	1
   853  0000D3                     ??___ftadd:
   854  0000D3                     ___ftdiv@cntr:
   855                           	opt stack 0
   856  0000D3                     CheckCRCUART@expectedCRCUS:
   857                           	opt stack 0
   858  0000D3                     CreateMessageUART@dataBuf:
   859                           	opt stack 0
   860                           
   861                           ; 2 bytes @ 0x11
   862  0000D3                     	ds	1
   863  0000D4                     ??_UART_Init:
   864  0000D4                     ___ftdiv@f3:
   865                           	opt stack 0
   866                           
   867                           ; 3 bytes @ 0x12
   868  0000D4                     	ds	1
   869  0000D5                     ??_CreateMessageUART:
   870  0000D5                     CheckCRCUART@packetLenUC:
   871                           	opt stack 0
   872  0000D5                     InitST7540@frameDataRXUS:
   873                           	opt stack 0
   874                           
   875                           ; 3 bytes @ 0x13
   876  0000D5                     	ds	1
   877  0000D6                     ___ftadd@sign:
   878                           	opt stack 0
   879  0000D6                     CheckCRCUART@receivedCRCUS:
   880                           	opt stack 0
   881                           
   882                           ; 2 bytes @ 0x14
   883  0000D6                     	ds	1
   884  0000D7                     ___ftadd@exp2:
   885                           	opt stack 0
   886  0000D7                     ___ftdiv@exp:
   887                           	opt stack 0
   888  0000D7                     CreateMessageUART@packetCRCUS:
   889                           	opt stack 0
   890                           
   891                           ; 2 bytes @ 0x15
   892  0000D7                     	ds	1
   893  0000D8                     ?_PacketReadParamUART:
   894                           	opt stack 0
   895  0000D8                     ___ftadd@exp1:
   896                           	opt stack 0
   897  0000D8                     ___ftdiv@sign:
   898                           	opt stack 0
   899  0000D8                     InitST7540@configDataRXUS:
   900                           	opt stack 0
   901                           
   902                           ; 3 bytes @ 0x16
   903  0000D8                     	ds	1
   904  0000D9                     CreateMessageUART@dataBufLocUC:
   905                           	opt stack 0
   906  0000D9                     ReadFireOut@i:
   907                           	opt stack 0
   908                           
   909                           ; 2 bytes @ 0x17
   910  0000D9                     	ds	1
   911  0000DA                     ??_PacketReadParamUART:
   912                           
   913                           ; 1 bytes @ 0x18
   914  0000DA                     	ds	2
   915  0000DC                     PacketReadParamUART@paramName:
   916                           	opt stack 0
   917  0000DC                     UART_Init@x:
   918                           	opt stack 0
   919                           
   920                           ; 2 bytes @ 0x1A
   921  0000DC                     	ds	1
   922  0000DD                     PacketReadParamUART@retValueUS:
   923                           	opt stack 0
   924                           
   925                           ; 2 bytes @ 0x1B
   926  0000DD                     	ds	1
   927  0000DE                     
   928                           ; 1 bytes @ 0x1C
   929  0000DE                     	ds	1
   930  0000DF                     CreateMessageST7540@packetSourceUS:
   931                           	opt stack 0
   932                           
   933                           ; 2 bytes @ 0x1D
   934  0000DF                     	ds	2
   935  0000E1                     CreateMessageST7540@packetDestUS:
   936                           	opt stack 0
   937                           
   938                           ; 2 bytes @ 0x1F
   939  0000E1                     	ds	2
   940  0000E3                     CreateMessageST7540@commandUC:
   941                           	opt stack 0
   942                           
   943                           ; 1 bytes @ 0x21
   944  0000E3                     	ds	1
   945  0000E4                     CreateMessageST7540@dataLenUC:
   946                           	opt stack 0
   947                           
   948                           ; 1 bytes @ 0x22
   949  0000E4                     	ds	1
   950  0000E5                     CreateMessageST7540@dataBuf:
   951                           	opt stack 0
   952                           
   953                           ; 2 bytes @ 0x23
   954  0000E5                     	ds	2
   955  0000E7                     ??_CreateMessageST7540:
   956                           
   957                           ; 1 bytes @ 0x25
   958  0000E7                     	ds	4
   959  0000EB                     CreateMessageST7540@packetCRCUS:
   960                           	opt stack 0
   961                           
   962                           ; 2 bytes @ 0x29
   963  0000EB                     	ds	2
   964  0000ED                     CreateMessageST7540@dataBufLocUC:
   965                           	opt stack 0
   966                           
   967                           ; 1 bytes @ 0x2B
   968  0000ED                     	ds	1
   969  0000EE                     ??_Receive_Pi_Packet:
   970  0000EE                     ??_Transmit_BLAST_Command_Packet:
   971  0000EE                     
   972                           ; 1 bytes @ 0x2C
   973  0000EE                     	ds	3
   974  0000F1                     Receive_Pi_Packet@i:
   975                           	opt stack 0
   976                           
   977                           ; 2 bytes @ 0x2F
   978  0000F1                     	ds	2
   979  0000F3                     Receive_Pi_Packet@BroadcastUC:
   980                           	opt stack 0
   981                           
   982                           ; 1 bytes @ 0x31
   983  0000F3                     	ds	1
   984  0000F4                     ??_main:
   985                           
   986                           ; 1 bytes @ 0x32
   987  0000F4                     	ds	2
   988                           tblptru	equ	0xFF8
   989                           tblptrh	equ	0xFF7
   990                           tblptrl	equ	0xFF6
   991                           tablat	equ	0xFF5
   992                           postinc0	equ	0xFEE
   993                           wreg	equ	0xFE8
   994                           postdec1	equ	0xFE5
   995                           fsr1h	equ	0xFE2
   996                           fsr1l	equ	0xFE1
   997                           
   998                           	psect	cstackCOMRAM
   999  000001                     __pcstackCOMRAM:
  1000                           	opt stack 0
  1001  000001                     ?_PacketDataST7540:
  1002                           	opt stack 0
  1003  000001                     ?i2_CRC16:
  1004                           	opt stack 0
  1005  000001                     SPIISRHandlerST7540@dataReadUC:
  1006                           	opt stack 0
  1007  000001                     RXReadyISRHandlerST7540@ReadIOCC:
  1008                           	opt stack 0
  1009  000001                     UART_Read@charRS232:
  1010                           	opt stack 0
  1011  000001                     i2ReceiveNewDataST7540@discardUC:
  1012                           	opt stack 0
  1013  000001                     i2UART_Write@data:
  1014                           	opt stack 0
  1015  000001                     i2CheckBroadcastPacket@Command:
  1016                           	opt stack 0
  1017  000001                     i2CRC16@data_p:
  1018                           	opt stack 0
  1019                           
  1020                           ; 2 bytes @ 0x0
  1021  000001                     	ds	1
  1022  000002                     
  1023                           ; 1 bytes @ 0x1
  1024  000002                     	ds	1
  1025  000003                     i2CRC16@length:
  1026                           	opt stack 0
  1027                           
  1028                           ; 2 bytes @ 0x2
  1029  000003                     	ds	2
  1030  000005                     ??i2_CRC16:
  1031                           
  1032                           ; 1 bytes @ 0x4
  1033  000005                     	ds	4
  1034  000009                     i2CRC16@data:
  1035                           	opt stack 0
  1036                           
  1037                           ; 2 bytes @ 0x8
  1038  000009                     	ds	2
  1039  00000B                     i2CRC16@i:
  1040                           	opt stack 0
  1041                           
  1042                           ; 1 bytes @ 0xA
  1043  00000B                     	ds	1
  1044  00000C                     i2CRC16@crc:
  1045                           	opt stack 0
  1046                           
  1047                           ; 2 bytes @ 0xB
  1048  00000C                     	ds	2
  1049  00000E                     ??_CheckCRCST7540:
  1050                           
  1051                           ; 1 bytes @ 0xD
  1052  00000E                     	ds	3
  1053  000011                     CheckCRCST7540@expectedCRCUS:
  1054                           	opt stack 0
  1055                           
  1056                           ; 2 bytes @ 0x10
  1057  000011                     	ds	2
  1058  000013                     CheckCRCST7540@receivedCRCUS:
  1059                           	opt stack 0
  1060                           
  1061                           ; 2 bytes @ 0x12
  1062  000013                     	ds	2
  1063  000015                     CheckCRCST7540@packetLenUC:
  1064                           	opt stack 0
  1065                           
  1066                           ; 1 bytes @ 0x14
  1067  000015                     	ds	1
  1068  000016                     ?_PacketReadParamST7540:
  1069                           	opt stack 0
  1070                           
  1071                           ; 2 bytes @ 0x15
  1072  000016                     	ds	2
  1073  000018                     ??_PacketReadParamST7540:
  1074                           
  1075                           ; 1 bytes @ 0x17
  1076  000018                     	ds	2
  1077  00001A                     PacketReadParamST7540@paramName:
  1078                           	opt stack 0
  1079                           
  1080                           ; 1 bytes @ 0x19
  1081  00001A                     	ds	1
  1082  00001B                     PacketReadParamST7540@retValueUS:
  1083                           	opt stack 0
  1084                           
  1085                           ; 2 bytes @ 0x1A
  1086  00001B                     	ds	2
  1087  00001D                     i2CreateMessageST7540@packetSourceUS:
  1088                           	opt stack 0
  1089  00001D                     i2CreateMessageUART@packetSourceUS:
  1090                           	opt stack 0
  1091                           
  1092                           ; 2 bytes @ 0x1C
  1093  00001D                     	ds	2
  1094  00001F                     i2CreateMessageUART@commandUC:
  1095                           	opt stack 0
  1096  00001F                     i2CreateMessageST7540@packetDestUS:
  1097                           	opt stack 0
  1098                           
  1099                           ; 2 bytes @ 0x1E
  1100  00001F                     	ds	1
  1101  000020                     i2CreateMessageUART@dataLenUC:
  1102                           	opt stack 0
  1103                           
  1104                           ; 1 bytes @ 0x1F
  1105  000020                     	ds	1
  1106  000021                     i2CreateMessageST7540@commandUC:
  1107                           	opt stack 0
  1108  000021                     i2CreateMessageUART@dataBuf:
  1109                           	opt stack 0
  1110                           
  1111                           ; 2 bytes @ 0x20
  1112  000021                     	ds	1
  1113  000022                     i2CreateMessageST7540@dataLenUC:
  1114                           	opt stack 0
  1115                           
  1116                           ; 1 bytes @ 0x21
  1117  000022                     	ds	1
  1118  000023                     ??i2_CreateMessageUART:
  1119  000023                     i2CreateMessageST7540@dataBuf:
  1120                           	opt stack 0
  1121                           
  1122                           ; 2 bytes @ 0x22
  1123  000023                     	ds	2
  1124  000025                     ??i2_CreateMessageST7540:
  1125  000025                     i2CreateMessageUART@packetCRCUS:
  1126                           	opt stack 0
  1127                           
  1128                           ; 2 bytes @ 0x24
  1129  000025                     	ds	2
  1130  000027                     i2CreateMessageUART@dataBufLocUC:
  1131                           	opt stack 0
  1132                           
  1133                           ; 1 bytes @ 0x26
  1134  000027                     	ds	2
  1135  000029                     i2CreateMessageST7540@packetCRCUS:
  1136                           	opt stack 0
  1137                           
  1138                           ; 2 bytes @ 0x28
  1139  000029                     	ds	2
  1140  00002B                     i2CreateMessageST7540@dataBufLocUC:
  1141                           	opt stack 0
  1142                           
  1143                           ; 1 bytes @ 0x2A
  1144  00002B                     	ds	1
  1145  00002C                     ??_Receive_ISC_Packet:
  1146  00002C                     
  1147                           ; 1 bytes @ 0x2B
  1148  00002C                     	ds	2
  1149  00002E                     Receive_ISC_Packet@tempIscSerial:
  1150                           	opt stack 0
  1151                           
  1152                           ; 2 bytes @ 0x2D
  1153  00002E                     	ds	2
  1154  000030                     ??_isr:
  1155                           
  1156                           ; 1 bytes @ 0x2F
  1157  000030                     	ds	14
  1158                           tblptru	equ	0xFF8
  1159                           tblptrh	equ	0xFF7
  1160                           tblptrl	equ	0xFF6
  1161                           tablat	equ	0xFF5
  1162                           postinc0	equ	0xFEE
  1163                           wreg	equ	0xFE8
  1164                           postdec1	equ	0xFE5
  1165                           fsr1h	equ	0xFE2
  1166                           fsr1l	equ	0xFE1
  1167                           
  1168 ;;
  1169 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1170 ;;
  1171 ;; *************** function _main *****************
  1172 ;; Defined at:
  1173 ;;		line 348 in file "Released IBC-1 Code - 03-06-2016/main.c"
  1174 ;; Parameters:    Size  Location     Type
  1175 ;;		None
  1176 ;; Auto vars:     Size  Location     Type
  1177 ;;		None
  1178 ;; Return value:  Size  Location     Type
  1179 ;;                  1    wreg      void 
  1180 ;; Registers used:
  1181 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1182 ;; Tracked objects:
  1183 ;;		On entry : 0/0
  1184 ;;		On exit  : 0/0
  1185 ;;		Unchanged: 0/0
  1186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1187 ;;      Params:         0       0       0       0       0       0       0
  1188 ;;      Locals:         0       0       0       0       0       0       0
  1189 ;;      Temps:          0       2       0       0       0       0       0
  1190 ;;      Totals:         0       2       0       0       0       0       0
  1191 ;;Total ram usage:        2 bytes
  1192 ;; Hardware stack levels required when called:   10
  1193 ;; This function calls:
  1194 ;;		_ClearDataReady
  1195 ;;		_DataReadyUART
  1196 ;;		_EEPROMSetReset
  1197 ;;		_FIRE
  1198 ;;		_InitSystem
  1199 ;;		_LineIdleST7540
  1200 ;;		_PacketReadParamUART
  1201 ;;		_ReadFireOut
  1202 ;;		_Receive_Pi_Packet
  1203 ;;		_SendUARTPacket
  1204 ;;		_StartPreArmedTimer
  1205 ;;		_StartTransmitST7540
  1206 ;;		_StopPostFireTimer
  1207 ;;		_StopPreArmedTimer
  1208 ;;		_TransmitBusyST7540
  1209 ;;		_Transmit_BLAST_Command_Packet
  1210 ;;		_Transmit_Pi_Default_Data
  1211 ;;		_TurnBuzzer_AlarmOff
  1212 ;;		_TurnBuzzer_AlarmOn
  1213 ;;		_TurnRelayOff
  1214 ;;		_TurnRelayOn
  1215 ;;		_TurnSSR1Off
  1216 ;;		_TurnSSR1On
  1217 ;;		_WaitTickCount
  1218 ;;		___ftge
  1219 ;;		_checkCableFaults
  1220 ;;		_getFireButtonState
  1221 ;;		_getIBCDefaultData
  1222 ;;		_getKeySwitchState
  1223 ;;		_getResetButtonState
  1224 ;;		_resetUARTPointers
  1225 ;; This function is called by:
  1226 ;;		Startup code after reset
  1227 ;; This function uses a non-reentrant model
  1228 ;;
  1229                           
  1230                           	psect	text0
  1231  0009D0                     __ptext0:
  1232                           	opt stack 0
  1233  0009D0                     _main:
  1234                           	opt stack 21
  1235                           
  1236                           ;main.c: 350: InitSystem();
  1237                           
  1238                           ;incstack = 0
  1239  0009D0  EC3A  F00D         	call	_InitSystem	;wreg free
  1240                           
  1241                           ;main.c: 351: Pi_Status_Update = 0x00;
  1242  0009D4  0E00               	movlw	0
  1243  0009D6  0100               	movlb	0	; () banked
  1244  0009D8  6FB3               	movwf	_Pi_Status_Update& (0+255),b
  1245                           
  1246                           ; BSR set to: 0
  1247                           ;main.c: 352: LATAbits.LATA5 = 0;
  1248  0009DA  9A89               	bcf	3977,5,c	;volatile
  1249                           
  1250                           ; BSR set to: 0
  1251                           ;main.c: 353: WDTCONbits.SWDTEN = 1;
  1252  0009DC  80D1               	bsf	4049,0,c	;volatile
  1253  0009DE                     l639:
  1254  0009DE  0004               	clrwdt		;# 
  1255                           
  1256                           ;main.c: 357: if (DataReadyUART()){
  1257  0009E0  EC21  F017         	call	_DataReadyUART	;wreg free
  1258  0009E4  0100               	movlb	0	; () banked
  1259  0009E6  6BF4               	clrf	??_main& (0+255),b
  1260  0009E8  6BF5               	clrf	(??_main+1)& (0+255),b
  1261  0009EA  0100               	movlb	0	; () banked
  1262  0009EC  19F4               	xorwf	??_main& (0+255),w,b
  1263  0009EE  11F5               	iorwf	(??_main+1)& (0+255),w,b
  1264  0009F0  B4D8               	btfsc	status,2,c
  1265  0009F2  D011               	goto	l5602
  1266                           
  1267                           ; BSR set to: 0
  1268                           ;main.c: 358: ClearDataReady();
  1269  0009F4  EC0F  F017         	call	_ClearDataReady	;wreg free
  1270                           
  1271                           ;main.c: 359: IBC_ComsCrashTimer =0;
  1272  0009F8  0E00               	movlw	0
  1273  0009FA  0100               	movlb	0	; () banked
  1274  0009FC  6F83               	movwf	(_IBC_ComsCrashTimer+1)& (0+255),b
  1275  0009FE  0E00               	movlw	0
  1276  000A00  6F82               	movwf	_IBC_ComsCrashTimer& (0+255),b
  1277                           
  1278                           ; BSR set to: 0
  1279                           ;main.c: 360: if(PacketReadParamUART(3)){
  1280  000A02  0E03               	movlw	3
  1281  000A04  ECA8  F010         	call	_PacketReadParamUART
  1282  000A08  0100               	movlb	0	; () banked
  1283  000A0A  51D8               	movf	?_PacketReadParamUART& (0+255),w,b
  1284  000A0C  0100               	movlb	0	; () banked
  1285  000A0E  11D9               	iorwf	(?_PacketReadParamUART+1)& (0+255),w,b
  1286  000A10  A4D8               	btfss	status,2,c
  1287                           
  1288                           ; BSR set to: 0
  1289                           ;main.c: 361: Receive_Pi_Packet();
  1290  000A12  EC1D  F003         	call	_Receive_Pi_Packet	;wreg free
  1291  000A16                     l5602:
  1292                           
  1293                           ;main.c: 362: }
  1294                           ;main.c: 363: }
  1295                           ;main.c: 365: if (ISC_Transmit_Packet_Ready == 1){
  1296  000A16  0100               	movlb	0	; () banked
  1297  000A18  05AE               	decf	_ISC_Transmit_Packet_Ready& (0+255),w,b
  1298  000A1A  A4D8               	btfss	status,2,c
  1299  000A1C  D019               	goto	l642
  1300                           
  1301                           ; BSR set to: 0
  1302                           ;main.c: 367: if (!TransmitBusyST7540() && LineIdleST7540()){
  1303  000A1E  EC09  F017         	call	_TransmitBusyST7540	;wreg free
  1304  000A22  0900               	iorlw	0
  1305  000A24  A4D8               	btfss	status,2,c
  1306  000A26  D014               	goto	l642
  1307  000A28  ECE3  F016         	call	_LineIdleST7540	;wreg free
  1308  000A2C  0100               	movlb	0	; () banked
  1309  000A2E  6BF4               	clrf	??_main& (0+255),b
  1310  000A30  6BF5               	clrf	(??_main+1)& (0+255),b
  1311  000A32  0100               	movlb	0	; () banked
  1312  000A34  19F4               	xorwf	??_main& (0+255),w,b
  1313  000A36  11F5               	iorwf	(??_main+1)& (0+255),w,b
  1314  000A38  B4D8               	btfsc	status,2,c
  1315  000A3A  D00A               	goto	l642
  1316                           
  1317                           ; BSR set to: 0
  1318                           ;main.c: 369: StartTransmitST7540();
  1319  000A3C  EC57  F016         	call	_StartTransmitST7540	;wreg free
  1320                           
  1321                           ;main.c: 370: ISC_Transmit_Packet_Ready = 0;
  1322  000A40  0E00               	movlw	0
  1323  000A42  0100               	movlb	0	; () banked
  1324  000A44  6FAE               	movwf	_ISC_Transmit_Packet_Ready& (0+255),b
  1325                           
  1326                           ; BSR set to: 0
  1327                           ;main.c: 371: IdleTimerUIG = 0;
  1328  000A46  0E00               	movlw	0
  1329  000A48  0100               	movlb	0	; () banked
  1330  000A4A  6F8F               	movwf	(_IdleTimerUIG+1)& (0+255),b
  1331  000A4C  0E00               	movlw	0
  1332  000A4E  6F8E               	movwf	_IdleTimerUIG& (0+255),b
  1333  000A50                     l642:
  1334                           
  1335                           ;main.c: 372: }
  1336                           ;main.c: 373: }
  1337                           ;main.c: 375: checkCableFaults();
  1338  000A50  ECF9  F011         	call	_checkCableFaults	;wreg free
  1339                           
  1340                           ;main.c: 378: if (CableFaultStatusUCG == 1 || CableFaultStatusUCG == 2){
  1341  000A54  0100               	movlb	0	; () banked
  1342  000A56  05A7               	decf	_CableFaultStatusUCG& (0+255),w,b
  1343  000A58  B4D8               	btfsc	status,2,c
  1344  000A5A  D005               	goto	l5618
  1345                           
  1346                           ; BSR set to: 0
  1347  000A5C  0E02               	movlw	2
  1348  000A5E  0100               	movlb	0	; () banked
  1349  000A60  19A7               	xorwf	_CableFaultStatusUCG& (0+255),w,b
  1350  000A62  A4D8               	btfss	status,2,c
  1351  000A64  D00F               	goto	l5624
  1352  000A66                     l5618:
  1353                           
  1354                           ; BSR set to: 0
  1355                           ;main.c: 379: if (NewCFStatusUCG == 1){
  1356  000A66  0100               	movlb	0	; () banked
  1357  000A68  05B1               	decf	_NewCFStatusUCG& (0+255),w,b
  1358  000A6A  A4D8               	btfss	status,2,c
  1359  000A6C  D009               	goto	l5622
  1360                           
  1361                           ; BSR set to: 0
  1362                           ;main.c: 380: NewCFStatusUCG = 0;
  1363  000A6E  0E00               	movlw	0
  1364  000A70  0100               	movlb	0	; () banked
  1365  000A72  6FB1               	movwf	_NewCFStatusUCG& (0+255),b
  1366                           
  1367                           ;main.c: 381: Pi_Status_Update = 0x01;
  1368  000A74  0E01               	movlw	1
  1369  000A76  0100               	movlb	0	; () banked
  1370  000A78  6FB3               	movwf	_Pi_Status_Update& (0+255),b
  1371                           
  1372                           ;main.c: 382: AlarmStatusUCG = 1;
  1373  000A7A  0E01               	movlw	1
  1374  000A7C  0100               	movlb	0	; () banked
  1375  000A7E  6FA6               	movwf	_AlarmStatusUCG& (0+255),b
  1376  000A80                     l5622:
  1377                           
  1378                           ; BSR set to: 0
  1379                           ;main.c: 383: }
  1380                           ;main.c: 384: LATAbits.LATA5 = 1;
  1381  000A80  8A89               	bsf	3977,5,c	;volatile
  1382                           
  1383                           ;main.c: 385: }
  1384  000A82  D019               	goto	l5638
  1385  000A84                     l5624:
  1386                           
  1387                           ; BSR set to: 0
  1388                           ;main.c: 386: else{
  1389                           ;main.c: 387: if (CFLEDFlashEnable == 0 && AlarmStatusUCG == 0){
  1390  000A84  5040               	movf	_CFLEDFlashEnable,w,c
  1391  000A86  A4D8               	btfss	status,2,c
  1392  000A88  D016               	goto	l5638
  1393                           
  1394                           ; BSR set to: 0
  1395  000A8A  0100               	movlb	0	; () banked
  1396  000A8C  51A6               	movf	_AlarmStatusUCG& (0+255),w,b
  1397  000A8E  A4D8               	btfss	status,2,c
  1398  000A90  D012               	goto	l5638
  1399                           
  1400                           ; BSR set to: 0
  1401                           ;main.c: 388: LATAbits.LATA5 = 0;
  1402  000A92  9A89               	bcf	3977,5,c	;volatile
  1403                           
  1404                           ; BSR set to: 0
  1405                           ;main.c: 389: TurnRelayOff();
  1406  000A94  EC63  F016         	call	_TurnRelayOff	;wreg free
  1407                           
  1408                           ;main.c: 390: CF_STAUTS_TimerUIG = 0;
  1409  000A98  0E00               	movlw	0
  1410  000A9A  0100               	movlb	0	; () banked
  1411  000A9C  6F75               	movwf	(_CF_STAUTS_TimerUIG+1)& (0+255),b
  1412  000A9E  0E00               	movlw	0
  1413  000AA0  6F74               	movwf	_CF_STAUTS_TimerUIG& (0+255),b
  1414                           
  1415                           ; BSR set to: 0
  1416                           ;main.c: 391: if (NewCFStatusUCG == 0){
  1417  000AA2  0100               	movlb	0	; () banked
  1418  000AA4  51B1               	movf	_NewCFStatusUCG& (0+255),w,b
  1419  000AA6  A4D8               	btfss	status,2,c
  1420  000AA8  D006               	goto	l5638
  1421                           
  1422                           ; BSR set to: 0
  1423                           ;main.c: 392: NewCFStatusUCG = 1;
  1424  000AAA  0E01               	movlw	1
  1425  000AAC  0100               	movlb	0	; () banked
  1426  000AAE  6FB1               	movwf	_NewCFStatusUCG& (0+255),b
  1427                           
  1428                           ;main.c: 393: Pi_Status_Update = 0x01;
  1429  000AB0  0E01               	movlw	1
  1430  000AB2  0100               	movlb	0	; () banked
  1431  000AB4  6FB3               	movwf	_Pi_Status_Update& (0+255),b
  1432  000AB6                     l5638:
  1433                           
  1434                           ; BSR set to: 0
  1435                           ;main.c: 394: }
  1436                           ;main.c: 395: }
  1437                           ;main.c: 396: }
  1438                           ;main.c: 398: if (getResetButtonState() == 1){
  1439  000AB6  EC27  F015         	call	_getResetButtonState	;wreg free
  1440  000ABA  06E8               	decf	wreg,f,c
  1441  000ABC  A4D8               	btfss	status,2,c
  1442  000ABE  D01F               	goto	l5656
  1443                           
  1444                           ;main.c: 399: if (getKeySwitchState() == 0){
  1445  000AC0  EC1F  F014         	call	_getKeySwitchState	;wreg free
  1446  000AC4  0900               	iorlw	0
  1447  000AC6  A4D8               	btfss	status,2,c
  1448  000AC8  D015               	goto	l5654
  1449                           
  1450                           ;main.c: 400: AlarmStatusUCG = 0;
  1451  000ACA  0E00               	movlw	0
  1452  000ACC  0100               	movlb	0	; () banked
  1453  000ACE  6FA6               	movwf	_AlarmStatusUCG& (0+255),b
  1454                           
  1455                           ;main.c: 401: if (CableFaultStatusUCG == 0){
  1456  000AD0  0100               	movlb	0	; () banked
  1457  000AD2  51A7               	movf	_CableFaultStatusUCG& (0+255),w,b
  1458  000AD4  A4D8               	btfss	status,2,c
  1459  000AD6  D008               	goto	l5652
  1460                           
  1461                           ; BSR set to: 0
  1462                           ;main.c: 402: LATAbits.LATA5 = 0;
  1463  000AD8  9A89               	bcf	3977,5,c	;volatile
  1464                           
  1465                           ; BSR set to: 0
  1466                           ;main.c: 403: TurnRelayOff();
  1467  000ADA  EC63  F016         	call	_TurnRelayOff	;wreg free
  1468                           
  1469                           ;main.c: 404: CFLEDFlashEnable = 0;
  1470  000ADE  0E00               	movlw	0
  1471  000AE0  6E40               	movwf	_CFLEDFlashEnable,c
  1472                           
  1473                           ;main.c: 405: CFLEDFlashState = 0;
  1474  000AE2  0E00               	movlw	0
  1475  000AE4  6E41               	movwf	_CFLEDFlashState,c
  1476                           
  1477                           ;main.c: 406: }
  1478  000AE6  D00B               	goto	l5656
  1479  000AE8                     l5652:
  1480                           
  1481                           ;main.c: 407: else
  1482                           ;main.c: 408: CF_STAUTS_TimerUIG = 20000;
  1483  000AE8  0E4E               	movlw	78
  1484  000AEA  0100               	movlb	0	; () banked
  1485  000AEC  6F75               	movwf	(_CF_STAUTS_TimerUIG+1)& (0+255),b
  1486  000AEE  0E20               	movlw	32
  1487  000AF0  6F74               	movwf	_CF_STAUTS_TimerUIG& (0+255),b
  1488                           
  1489                           ; BSR set to: 0
  1490                           ;main.c: 409: }
  1491  000AF2  D005               	goto	l5656
  1492  000AF4                     l5654:
  1493                           
  1494                           ;main.c: 410: else{
  1495                           ;main.c: 411: AlarmStatusUCG = 1;
  1496  000AF4  0E01               	movlw	1
  1497  000AF6  0100               	movlb	0	; () banked
  1498  000AF8  6FA6               	movwf	_AlarmStatusUCG& (0+255),b
  1499                           
  1500                           ;main.c: 412: CFLEDFlashEnable = 1;
  1501  000AFA  0E01               	movlw	1
  1502  000AFC  6E40               	movwf	_CFLEDFlashEnable,c
  1503  000AFE                     l5656:
  1504                           
  1505                           ;main.c: 413: }
  1506                           ;main.c: 414: }
  1507                           ;main.c: 415: if (getKeySwitchState() == 0){
  1508  000AFE  EC1F  F014         	call	_getKeySwitchState	;wreg free
  1509  000B02  0900               	iorlw	0
  1510  000B04  A4D8               	btfss	status,2,c
  1511  000B06  D00F               	goto	l5666
  1512                           
  1513                           ;main.c: 416: if(KeySwitchStatusUCG == 1)
  1514  000B08  0100               	movlb	0	; () banked
  1515  000B0A  05B0               	decf	_KeySwitchStatusUCG& (0+255),w,b
  1516  000B0C  A4D8               	btfss	status,2,c
  1517  000B0E  D003               	goto	l657
  1518                           
  1519                           ; BSR set to: 0
  1520                           ;main.c: 417: Pi_Status_Update = 0x01;
  1521  000B10  0E01               	movlw	1
  1522  000B12  0100               	movlb	0	; () banked
  1523  000B14  6FB3               	movwf	_Pi_Status_Update& (0+255),b
  1524  000B16                     l657:
  1525                           
  1526                           ; BSR set to: 0
  1527                           ;main.c: 419: KeySwitchStatusUCG = 0;
  1528  000B16  0E00               	movlw	0
  1529  000B18  0100               	movlb	0	; () banked
  1530  000B1A  6FB0               	movwf	_KeySwitchStatusUCG& (0+255),b
  1531                           
  1532                           ; BSR set to: 0
  1533                           ;main.c: 420: StopPostFireTimer();
  1534  000B1C  EC79  F016         	call	_StopPostFireTimer	;wreg free
  1535                           
  1536                           ;main.c: 421: StopPreArmedTimer();
  1537  000B20  EC6F  F016         	call	_StopPreArmedTimer	;wreg free
  1538                           
  1539                           ;main.c: 422: }
  1540  000B24  D011               	goto	l5674
  1541  000B26                     l5666:
  1542                           
  1543                           ;main.c: 423: else{
  1544                           ;main.c: 424: if(KeySwitchStatusUCG == 0)
  1545  000B26  0100               	movlb	0	; () banked
  1546  000B28  51B0               	movf	_KeySwitchStatusUCG& (0+255),w,b
  1547  000B2A  A4D8               	btfss	status,2,c
  1548  000B2C  D003               	goto	l659
  1549                           
  1550                           ; BSR set to: 0
  1551                           ;main.c: 425: Pi_Status_Update = 0x01;
  1552  000B2E  0E01               	movlw	1
  1553  000B30  0100               	movlb	0	; () banked
  1554  000B32  6FB3               	movwf	_Pi_Status_Update& (0+255),b
  1555  000B34                     l659:
  1556                           
  1557                           ; BSR set to: 0
  1558                           ;main.c: 427: KeySwitchStatusUCG = 1;
  1559  000B34  0E01               	movlw	1
  1560  000B36  0100               	movlb	0	; () banked
  1561  000B38  6FB0               	movwf	_KeySwitchStatusUCG& (0+255),b
  1562                           
  1563                           ;main.c: 429: if (PATEnabled == 0)
  1564  000B3A  504F               	movf	_PATEnabled,w,c
  1565  000B3C  B4D8               	btfsc	status,2,c
  1566                           
  1567                           ; BSR set to: 0
  1568                           ;main.c: 430: StartPreArmedTimer();
  1569  000B3E  EC83  F016         	call	_StartPreArmedTimer	;wreg free
  1570                           
  1571                           ;main.c: 432: ClearToFire = 1;
  1572  000B42  0E01               	movlw	1
  1573  000B44  0100               	movlb	0	; () banked
  1574  000B46  6FA8               	movwf	_ClearToFire& (0+255),b
  1575  000B48                     l5674:
  1576                           
  1577                           ;main.c: 433: }
  1578                           ;main.c: 436: if(IBC_ComsCrashTimer > 240){
  1579  000B48  0100               	movlb	0	; () banked
  1580  000B4A  5183               	movf	(_IBC_ComsCrashTimer+1)& (0+255),w,b
  1581  000B4C  E105               	bnz	u4670
  1582  000B4E  0EF1               	movlw	241
  1583  000B50  0100               	movlb	0	; () banked
  1584  000B52  5D82               	subwf	_IBC_ComsCrashTimer& (0+255),w,b
  1585  000B54  A0D8               	btfss	status,0,c
  1586  000B56  D00F               	goto	l5684
  1587  000B58                     u4670:
  1588                           
  1589                           ; BSR set to: 0
  1590                           ;main.c: 438: EEPROMSetReset();
  1591  000B58  EC29  F016         	call	_EEPROMSetReset	;wreg free
  1592                           
  1593                           ;main.c: 441: resetUARTPointers();
  1594  000B5C  ECF5  F016         	call	_resetUARTPointers	;wreg free
  1595                           
  1596                           ;main.c: 442: ResetStatusUCG = 1;
  1597  000B60  0E01               	movlw	1
  1598  000B62  0100               	movlb	0	; () banked
  1599  000B64  6FB5               	movwf	_ResetStatusUCG& (0+255),b
  1600                           
  1601                           ; BSR set to: 0
  1602                           ;main.c: 443: Pi_Status_Update = 0x01;
  1603  000B66  0E01               	movlw	1
  1604  000B68  0100               	movlb	0	; () banked
  1605  000B6A  6FB3               	movwf	_Pi_Status_Update& (0+255),b
  1606                           
  1607                           ; BSR set to: 0
  1608                           ;main.c: 444: IBC_ComsCrashTimer= (240-10);
  1609  000B6C  0E00               	movlw	0
  1610  000B6E  0100               	movlb	0	; () banked
  1611  000B70  6F83               	movwf	(_IBC_ComsCrashTimer+1)& (0+255),b
  1612  000B72  0EE6               	movlw	230
  1613  000B74  6F82               	movwf	_IBC_ComsCrashTimer& (0+255),b
  1614  000B76                     l5684:
  1615                           
  1616                           ; BSR set to: 0
  1617                           ;main.c: 445: }
  1618                           ;main.c: 447: if (Pi_Status_Update == 0x01){
  1619  000B76  0100               	movlb	0	; () banked
  1620  000B78  05B3               	decf	_Pi_Status_Update& (0+255),w,b
  1621  000B7A  A4D8               	btfss	status,2,c
  1622  000B7C  D007               	goto	l5692
  1623                           
  1624                           ; BSR set to: 0
  1625                           ;main.c: 448: Pi_Status_Update = 0x00;
  1626  000B7E  0E00               	movlw	0
  1627  000B80  0100               	movlb	0	; () banked
  1628  000B82  6FB3               	movwf	_Pi_Status_Update& (0+255),b
  1629                           
  1630                           ; BSR set to: 0
  1631                           ;main.c: 449: getIBCDefaultData();
  1632  000B84  ECBA  F013         	call	_getIBCDefaultData	;wreg free
  1633                           
  1634                           ;main.c: 450: Transmit_Pi_Default_Data();
  1635  000B88  ECC0  F015         	call	_Transmit_Pi_Default_Data	;wreg free
  1636  000B8C                     l5692:
  1637                           
  1638                           ;main.c: 451: }
  1639                           ;main.c: 453: if (Pi_Status_Update == 0x02){
  1640  000B8C  0E02               	movlw	2
  1641  000B8E  0100               	movlb	0	; () banked
  1642  000B90  19B3               	xorwf	_Pi_Status_Update& (0+255),w,b
  1643  000B92  A4D8               	btfss	status,2,c
  1644  000B94  D003               	goto	l5696
  1645                           
  1646                           ; BSR set to: 0
  1647                           ;main.c: 455: Pi_Status_Update = 0x00;
  1648  000B96  0E00               	movlw	0
  1649  000B98  0100               	movlb	0	; () banked
  1650  000B9A  6FB3               	movwf	_Pi_Status_Update& (0+255),b
  1651  000B9C                     l5696:
  1652                           
  1653                           ; BSR set to: 0
  1654                           ;main.c: 456: }
  1655                           ;main.c: 458: if (getFireButtonState() == 1){
  1656  000B9C  EC48  F015         	call	_getFireButtonState	;wreg free
  1657  000BA0  06E8               	decf	wreg,f,c
  1658  000BA2  A4D8               	btfss	status,2,c
  1659  000BA4  D09C               	goto	l5766
  1660                           
  1661                           ;main.c: 459: if (FireButtonStatusUCG == 0)
  1662  000BA6  0100               	movlb	0	; () banked
  1663  000BA8  51AA               	movf	_FireButtonStatusUCG& (0+255),w,b
  1664  000BAA  A4D8               	btfss	status,2,c
  1665  000BAC  D003               	goto	l665
  1666                           
  1667                           ; BSR set to: 0
  1668                           ;main.c: 460: Pi_Status_Update = 0x01;
  1669  000BAE  0E01               	movlw	1
  1670  000BB0  0100               	movlb	0	; () banked
  1671  000BB2  6FB3               	movwf	_Pi_Status_Update& (0+255),b
  1672  000BB4                     l665:
  1673                           
  1674                           ; BSR set to: 0
  1675                           ;main.c: 461: FireButtonStatusUCG = 1;
  1676  000BB4  0E01               	movlw	1
  1677  000BB6  0100               	movlb	0	; () banked
  1678  000BB8  6FAA               	movwf	_FireButtonStatusUCG& (0+255),b
  1679                           
  1680                           ; BSR set to: 0
  1681                           ;main.c: 463: if (CableFaultStatusUCG == 1){
  1682  000BBA  0100               	movlb	0	; () banked
  1683  000BBC  05A7               	decf	_CableFaultStatusUCG& (0+255),w,b
  1684  000BBE  A4D8               	btfss	status,2,c
  1685  000BC0  D004               	goto	l5706
  1686                           
  1687                           ; BSR set to: 0
  1688                           ;main.c: 464: AlarmStatusUCG = 1;
  1689  000BC2  0E01               	movlw	1
  1690  000BC4  0100               	movlb	0	; () banked
  1691  000BC6  6FA6               	movwf	_AlarmStatusUCG& (0+255),b
  1692                           
  1693                           ;main.c: 465: }
  1694  000BC8  D094               	goto	l5770
  1695  000BCA                     l5706:
  1696                           
  1697                           ; BSR set to: 0
  1698                           ;main.c: 467: else if (getKeySwitchState() == 0){
  1699  000BCA  EC1F  F014         	call	_getKeySwitchState	;wreg free
  1700  000BCE  0900               	iorlw	0
  1701  000BD0  B4D8               	btfsc	status,2,c
  1702  000BD2  D004               	goto	l5712
  1703                           
  1704                           ;main.c: 471: else if (ClearToFire == 0){
  1705                           
  1706                           ; BSR set to: 0
  1707                           
  1708                           ;main.c: 470: }
  1709                           
  1710                           ;main.c: 469: CFLEDFlashEnable = 1;
  1711                           
  1712                           ;main.c: 468: AlarmStatusUCG = 1;
  1713  000BD4  0100               	movlb	0	; () banked
  1714  000BD6  51A8               	movf	_ClearToFire& (0+255),w,b
  1715  000BD8  A4D8               	btfss	status,2,c
  1716  000BDA  D006               	goto	l5714
  1717  000BDC                     l5712:
  1718                           
  1719                           ; BSR set to: 0
  1720                           ;main.c: 472: AlarmStatusUCG = 1;
  1721  000BDC  0E01               	movlw	1
  1722  000BDE  0100               	movlb	0	; () banked
  1723  000BE0  6FA6               	movwf	_AlarmStatusUCG& (0+255),b
  1724                           
  1725                           ;main.c: 473: CFLEDFlashEnable = 1;
  1726  000BE2  0E01               	movlw	1
  1727  000BE4  6E40               	movwf	_CFLEDFlashEnable,c
  1728                           
  1729                           ;main.c: 474: }
  1730  000BE6  D085               	goto	l5770
  1731  000BE8                     l5714:
  1732                           
  1733                           ; BSR set to: 0
  1734                           ;main.c: 476: else if (AlarmStatusUCG == 0 && ClearToFire == 1){
  1735  000BE8  0100               	movlb	0	; () banked
  1736  000BEA  51A6               	movf	_AlarmStatusUCG& (0+255),w,b
  1737  000BEC  A4D8               	btfss	status,2,c
  1738  000BEE  D081               	goto	l5770
  1739                           
  1740                           ; BSR set to: 0
  1741  000BF0  0100               	movlb	0	; () banked
  1742  000BF2  05A8               	decf	_ClearToFire& (0+255),w,b
  1743  000BF4  A4D8               	btfss	status,2,c
  1744  000BF6  D07D               	goto	l5770
  1745                           
  1746                           ; BSR set to: 0
  1747                           ;main.c: 477: FiringStatusUCG=1;
  1748  000BF8  0E01               	movlw	1
  1749  000BFA  0100               	movlb	0	; () banked
  1750  000BFC  6FAB               	movwf	_FiringStatusUCG& (0+255),b
  1751                           
  1752                           ; BSR set to: 0
  1753                           ;main.c: 478: getIBCDefaultData();
  1754  000BFE  ECBA  F013         	call	_getIBCDefaultData	;wreg free
  1755                           
  1756                           ;main.c: 479: Transmit_Pi_Default_Data();
  1757  000C02  ECC0  F015         	call	_Transmit_Pi_Default_Data	;wreg free
  1758                           
  1759                           ;main.c: 480: SendUARTPacket();
  1760  000C06  ECC5  F016         	call	_SendUARTPacket	;wreg free
  1761                           
  1762                           ;main.c: 482: ClearToFire = 0;
  1763  000C0A  0E00               	movlw	0
  1764  000C0C  0100               	movlb	0	; () banked
  1765  000C0E  6FA8               	movwf	_ClearToFire& (0+255),b
  1766                           
  1767                           ; BSR set to: 0
  1768                           ;main.c: 484: StopPreArmedTimer();
  1769  000C10  EC6F  F016         	call	_StopPreArmedTimer	;wreg free
  1770                           
  1771                           ;main.c: 486: TurnRelayOn();
  1772  000C14  EC4B  F016         	call	_TurnRelayOn	;wreg free
  1773                           
  1774                           ;main.c: 488: WaitTickCount(100);
  1775  000C18  0E00               	movlw	0
  1776  000C1A  0100               	movlb	0	; () banked
  1777  000C1C  6FC3               	movwf	(WaitTickCount@tickCountUS+1)& (0+255),b
  1778  000C1E  0E64               	movlw	100
  1779  000C20  6FC2               	movwf	WaitTickCount@tickCountUS& (0+255),b
  1780  000C22  EC3C  F016         	call	_WaitTickCount	;wreg free
  1781                           
  1782                           ;main.c: 489: TurnSSR1On();
  1783  000C26  EC1D  F017         	call	_TurnSSR1On	;wreg free
  1784                           
  1785                           ;main.c: 490: WaitTickCount(100);
  1786  000C2A  0E00               	movlw	0
  1787  000C2C  0100               	movlb	0	; () banked
  1788  000C2E  6FC3               	movwf	(WaitTickCount@tickCountUS+1)& (0+255),b
  1789  000C30  0E64               	movlw	100
  1790  000C32  6FC2               	movwf	WaitTickCount@tickCountUS& (0+255),b
  1791  000C34  EC3C  F016         	call	_WaitTickCount	;wreg free
  1792                           
  1793                           ;main.c: 491: FireOutFloat = 0;
  1794  000C38  0E00               	movlw	0
  1795  000C3A  0100               	movlb	0	; () banked
  1796  000C3C  6F6A               	movwf	_FireOutFloat& (0+255),b
  1797  000C3E  0E00               	movlw	0
  1798  000C40  0100               	movlb	0	; () banked
  1799  000C42  6F6B               	movwf	(_FireOutFloat+1)& (0+255),b
  1800  000C44  0E00               	movlw	0
  1801  000C46  0100               	movlb	0	; () banked
  1802  000C48  6F6C               	movwf	(_FireOutFloat+2)& (0+255),b
  1803                           
  1804                           ; BSR set to: 0
  1805                           ;main.c: 492: ReadFireOut();
  1806  000C4A  EC54  F011         	call	_ReadFireOut	;wreg free
  1807                           
  1808                           ;main.c: 493: FireOutFloat = 1000.0;
  1809  000C4E  0E00               	movlw	0
  1810  000C50  0100               	movlb	0	; () banked
  1811  000C52  6F6A               	movwf	_FireOutFloat& (0+255),b
  1812  000C54  0E7A               	movlw	122
  1813  000C56  0100               	movlb	0	; () banked
  1814  000C58  6F6B               	movwf	(_FireOutFloat+1)& (0+255),b
  1815  000C5A  0E44               	movlw	68
  1816  000C5C  0100               	movlb	0	; () banked
  1817  000C5E  6F6C               	movwf	(_FireOutFloat+2)& (0+255),b
  1818                           
  1819                           ; BSR set to: 0
  1820                           ;main.c: 494: TurnSSR1Off();
  1821  000C60  EC1F  F017         	call	_TurnSSR1Off	;wreg free
  1822                           
  1823                           ;main.c: 496: if (FireOutFloat > 815.0){
  1824  000C64  0EC0               	movlw	192
  1825  000C66  0100               	movlb	0	; () banked
  1826  000C68  6FC2               	movwf	___ftge@ff1& (0+255),b
  1827  000C6A  0E4B               	movlw	75
  1828  000C6C  0100               	movlb	0	; () banked
  1829  000C6E  6FC3               	movwf	(___ftge@ff1+1)& (0+255),b
  1830  000C70  0E44               	movlw	68
  1831  000C72  0100               	movlb	0	; () banked
  1832  000C74  6FC4               	movwf	(___ftge@ff1+2)& (0+255),b
  1833  000C76  C06A  F0C5         	movff	_FireOutFloat,___ftge@ff2
  1834  000C7A  C06B  F0C6         	movff	_FireOutFloat+1,___ftge@ff2+1
  1835  000C7E  C06C  F0C7         	movff	_FireOutFloat+2,___ftge@ff2+2
  1836  000C82  EC90  F00F         	call	___ftge	;wreg free
  1837  000C86  0100               	movlb	0	; () banked
  1838  000C88  B0D8               	btfsc	status,0,c
  1839  000C8A  D01E               	goto	l5762
  1840                           
  1841                           ; BSR set to: 0
  1842                           ;main.c: 499: Transmit_BLAST_Command_Packet();
  1843  000C8C  EC7B  F014         	call	_Transmit_BLAST_Command_Packet	;wreg free
  1844  000C90  0004               	clrwdt		;# 
  1845                           
  1846                           ;main.c: 501: WaitTickCount(2000*4);
  1847  000C92  0E1F               	movlw	31
  1848  000C94  0100               	movlb	0	; () banked
  1849  000C96  6FC3               	movwf	(WaitTickCount@tickCountUS+1)& (0+255),b
  1850  000C98  0E40               	movlw	64
  1851  000C9A  6FC2               	movwf	WaitTickCount@tickCountUS& (0+255),b
  1852  000C9C  EC3C  F016         	call	_WaitTickCount	;wreg free
  1853  000CA0  0004               	clrwdt		;# 
  1854                           
  1855                           ;main.c: 504: BTEnabled = 1;
  1856  000CA2  0E01               	movlw	1
  1857  000CA4  6E3E               	movwf	_BTEnabled,c
  1858                           
  1859                           ;main.c: 505: FIRE();
  1860  000CA6  EC44  F013         	call	_FIRE	;wreg free
  1861                           
  1862                           ;main.c: 507: WaitTickCount(1000);
  1863  000CAA  0E03               	movlw	3
  1864  000CAC  0100               	movlb	0	; () banked
  1865  000CAE  6FC3               	movwf	(WaitTickCount@tickCountUS+1)& (0+255),b
  1866  000CB0  0EE8               	movlw	232
  1867  000CB2  6FC2               	movwf	WaitTickCount@tickCountUS& (0+255),b
  1868  000CB4  EC3C  F016         	call	_WaitTickCount	;wreg free
  1869                           
  1870                           ;main.c: 508: BTEnabled = 0;
  1871  000CB8  0E00               	movlw	0
  1872  000CBA  6E3E               	movwf	_BTEnabled,c
  1873                           
  1874                           ;main.c: 509: IBC_ComsCrashTimer = 240-60;
  1875  000CBC  0E00               	movlw	0
  1876  000CBE  0100               	movlb	0	; () banked
  1877  000CC0  6F83               	movwf	(_IBC_ComsCrashTimer+1)& (0+255),b
  1878  000CC2  0EB4               	movlw	180
  1879  000CC4  6F82               	movwf	_IBC_ComsCrashTimer& (0+255),b
  1880                           
  1881                           ;main.c: 510: }
  1882  000CC6  D003               	goto	l674
  1883  000CC8                     l5762:
  1884                           
  1885                           ; BSR set to: 0
  1886                           ;main.c: 511: else{
  1887                           ;main.c: 512: AlarmStatusUCG = 1;
  1888  000CC8  0E01               	movlw	1
  1889  000CCA  0100               	movlb	0	; () banked
  1890  000CCC  6FA6               	movwf	_AlarmStatusUCG& (0+255),b
  1891  000CCE                     l674:
  1892                           
  1893                           ; BSR set to: 0
  1894                           ;main.c: 513: }
  1895                           ;main.c: 516: FiringStatusUCG=0;
  1896  000CCE  0E00               	movlw	0
  1897  000CD0  0100               	movlb	0	; () banked
  1898  000CD2  6FAB               	movwf	_FiringStatusUCG& (0+255),b
  1899                           
  1900                           ; BSR set to: 0
  1901                           ;main.c: 517: TurnSSR1Off();
  1902  000CD4  EC1F  F017         	call	_TurnSSR1Off	;wreg free
  1903                           
  1904                           ;main.c: 521: TurnRelayOff();
  1905  000CD8  EC63  F016         	call	_TurnRelayOff	;wreg free
  1906                           
  1907                           ;main.c: 522: }
  1908                           ;main.c: 523: }
  1909  000CDC  D00A               	goto	l5770
  1910  000CDE                     l5766:
  1911                           
  1912                           ;main.c: 524: else{
  1913                           ;main.c: 525: if (FireButtonStatusUCG == 1)
  1914  000CDE  0100               	movlb	0	; () banked
  1915  000CE0  05AA               	decf	_FireButtonStatusUCG& (0+255),w,b
  1916  000CE2  A4D8               	btfss	status,2,c
  1917  000CE4  D003               	goto	l676
  1918                           
  1919                           ; BSR set to: 0
  1920                           ;main.c: 526: Pi_Status_Update = 0x01;
  1921  000CE6  0E01               	movlw	1
  1922  000CE8  0100               	movlb	0	; () banked
  1923  000CEA  6FB3               	movwf	_Pi_Status_Update& (0+255),b
  1924  000CEC                     l676:
  1925                           
  1926                           ; BSR set to: 0
  1927                           ;main.c: 527: FireButtonStatusUCG = 0;
  1928  000CEC  0E00               	movlw	0
  1929  000CEE  0100               	movlb	0	; () banked
  1930  000CF0  6FAA               	movwf	_FireButtonStatusUCG& (0+255),b
  1931  000CF2                     l5770:
  1932                           
  1933                           ;main.c: 528: }
  1934                           ;main.c: 530: if (AlarmStatusUCG == 1){
  1935  000CF2  0100               	movlb	0	; () banked
  1936  000CF4  05A6               	decf	_AlarmStatusUCG& (0+255),w,b
  1937  000CF6  A4D8               	btfss	status,2,c
  1938  000CF8  D010               	goto	l5784
  1939                           
  1940                           ; BSR set to: 0
  1941                           ;main.c: 532: if (CFLEDFlashEnable == 1){
  1942  000CFA  0440               	decf	_CFLEDFlashEnable,w,c
  1943  000CFC  A4D8               	btfss	status,2,c
  1944  000CFE  D00A               	goto	l5782
  1945                           
  1946                           ; BSR set to: 0
  1947                           ;main.c: 533: if (CFLEDFlashState == 1)
  1948  000D00  0441               	decf	_CFLEDFlashState,w,c
  1949  000D02  B4D8               	btfsc	status,2,c
  1950                           
  1951                           ; BSR set to: 0
  1952                           ;main.c: 534: TurnBuzzer_AlarmOn();
  1953  000D04  EC15  F017         	call	_TurnBuzzer_AlarmOn	;wreg free
  1954                           
  1955                           ;main.c: 535: if (CFLEDFlashState == 0)
  1956  000D08  5041               	movf	_CFLEDFlashState,w,c
  1957  000D0A  A4D8               	btfss	status,2,c
  1958  000D0C  D668               	goto	l639
  1959                           
  1960                           ;main.c: 536: TurnBuzzer_AlarmOff();
  1961  000D0E  EC17  F017         	call	_TurnBuzzer_AlarmOff	;wreg free
  1962                           
  1963                           ;main.c: 537: }
  1964  000D12  D665               	goto	l639
  1965  000D14                     l5782:
  1966                           
  1967                           ;main.c: 538: else
  1968                           ;main.c: 539: TurnBuzzer_AlarmOn();
  1969  000D14  EC15  F017         	call	_TurnBuzzer_AlarmOn	;wreg free
  1970                           
  1971                           ;main.c: 540: }
  1972  000D18  D662               	goto	l639
  1973  000D1A                     l5784:
  1974                           
  1975                           ;main.c: 541: else{
  1976                           ;main.c: 542: TurnBuzzer_AlarmOff();
  1977  000D1A  EC17  F017         	call	_TurnBuzzer_AlarmOff	;wreg free
  1978  000D1E  D65F               	goto	l639
  1979  000D20                     __end_of_main:
  1980                           	opt stack 0
  1981                           tblptru	equ	0xFF8
  1982                           tblptrh	equ	0xFF7
  1983                           tblptrl	equ	0xFF6
  1984                           tablat	equ	0xFF5
  1985                           postinc0	equ	0xFEE
  1986                           wreg	equ	0xFE8
  1987                           postdec1	equ	0xFE5
  1988                           fsr1h	equ	0xFE2
  1989                           fsr1l	equ	0xFE1
  1990                           status	equ	0xFD8
  1991                           
  1992 ;; *************** function _resetUARTPointers *****************
  1993 ;; Defined at:
  1994 ;;		line 89 in file "Released IBC-1 Code - 03-06-2016/UART.c"
  1995 ;; Parameters:    Size  Location     Type
  1996 ;;		None
  1997 ;; Auto vars:     Size  Location     Type
  1998 ;;		None
  1999 ;; Return value:  Size  Location     Type
  2000 ;;                  1    wreg      void 
  2001 ;; Registers used:
  2002 ;;		wreg, status,2
  2003 ;; Tracked objects:
  2004 ;;		On entry : 0/0
  2005 ;;		On exit  : 0/0
  2006 ;;		Unchanged: 0/0
  2007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2008 ;;      Params:         0       0       0       0       0       0       0
  2009 ;;      Locals:         0       0       0       0       0       0       0
  2010 ;;      Temps:          0       0       0       0       0       0       0
  2011 ;;      Totals:         0       0       0       0       0       0       0
  2012 ;;Total ram usage:        0 bytes
  2013 ;; Hardware stack levels used:    1
  2014 ;; Hardware stack levels required when called:    5
  2015 ;; This function calls:
  2016 ;;		Nothing
  2017 ;; This function is called by:
  2018 ;;		_main
  2019 ;; This function uses a non-reentrant model
  2020 ;;
  2021                           
  2022                           	psect	text1
  2023  002DEA                     __ptext1:
  2024                           	opt stack 0
  2025  002DEA                     _resetUARTPointers:
  2026                           	opt stack 25
  2027                           
  2028                           ;UART.c: 90: flagUARTRead = 1;
  2029                           
  2030                           ;incstack = 0
  2031  002DEA  0E01               	movlw	1
  2032  002DEC  6E5B               	movwf	_flagUARTRead,c
  2033                           
  2034                           ;UART.c: 91: PiBufferRXNEXTUCA = 0;
  2035  002DEE  0E00               	movlw	0
  2036  002DF0  6E51               	movwf	_PiBufferRXNEXTUCA,c
  2037  002DF2  0012               	return		;funcret
  2038  002DF4                     __end_of_resetUARTPointers:
  2039                           	opt stack 0
  2040                           tblptru	equ	0xFF8
  2041                           tblptrh	equ	0xFF7
  2042                           tblptrl	equ	0xFF6
  2043                           tablat	equ	0xFF5
  2044                           postinc0	equ	0xFEE
  2045                           wreg	equ	0xFE8
  2046                           postdec1	equ	0xFE5
  2047                           fsr1h	equ	0xFE2
  2048                           fsr1l	equ	0xFE1
  2049                           status	equ	0xFD8
  2050                           
  2051 ;; *************** function _getResetButtonState *****************
  2052 ;; Defined at:
  2053 ;;		line 1325 in file "Released IBC-1 Code - 03-06-2016/main.c"
  2054 ;; Parameters:    Size  Location     Type
  2055 ;;		None
  2056 ;; Auto vars:     Size  Location     Type
  2057 ;;  ResetButtonS    1    3[BANK0 ] unsigned char 
  2058 ;;  ResetButtonS    1    2[BANK0 ] unsigned char 
  2059 ;; Return value:  Size  Location     Type
  2060 ;;                  1    wreg      unsigned char 
  2061 ;; Registers used:
  2062 ;;		wreg, status,2, status,0, cstack
  2063 ;; Tracked objects:
  2064 ;;		On entry : 0/0
  2065 ;;		On exit  : 0/0
  2066 ;;		Unchanged: 0/0
  2067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2068 ;;      Params:         0       0       0       0       0       0       0
  2069 ;;      Locals:         0       2       0       0       0       0       0
  2070 ;;      Temps:          0       0       0       0       0       0       0
  2071 ;;      Totals:         0       2       0       0       0       0       0
  2072 ;;Total ram usage:        2 bytes
  2073 ;; Hardware stack levels used:    1
  2074 ;; Hardware stack levels required when called:    7
  2075 ;; This function calls:
  2076 ;;		_WaitTickCount
  2077 ;; This function is called by:
  2078 ;;		_main
  2079 ;; This function uses a non-reentrant model
  2080 ;;
  2081                           
  2082                           	psect	text2
  2083  002A4E                     __ptext2:
  2084                           	opt stack 0
  2085  002A4E                     _getResetButtonState:
  2086                           	opt stack 23
  2087                           
  2088                           ;main.c: 1326: unsigned char ResetButtonStatusfirstUC;
  2089                           ;main.c: 1327: unsigned char ResetButtonStatussecondUC;
  2090                           ;main.c: 1329: ResetButtonStatusfirstUC = PORTAbits.RA6;
  2091                           
  2092                           ;incstack = 0
  2093  002A4E  0E00               	movlw	0
  2094  002A50  BC80               	btfsc	3968,6,c	;volatile
  2095  002A52  0E01               	movlw	1
  2096  002A54  0100               	movlb	0	; () banked
  2097  002A56  6FC4               	movwf	getResetButtonState@ResetButtonStatusfirstUC& (0+255),b
  2098                           
  2099                           ; BSR set to: 0
  2100                           ;main.c: 1330: WaitTickCount(50);
  2101  002A58  0E00               	movlw	0
  2102  002A5A  0100               	movlb	0	; () banked
  2103  002A5C  6FC3               	movwf	(WaitTickCount@tickCountUS+1)& (0+255),b
  2104  002A5E  0E32               	movlw	50
  2105  002A60  6FC2               	movwf	WaitTickCount@tickCountUS& (0+255),b
  2106  002A62  EC3C  F016         	call	_WaitTickCount	;wreg free
  2107                           
  2108                           ;main.c: 1331: ResetButtonStatussecondUC = PORTAbits.RA6;
  2109  002A66  0E00               	movlw	0
  2110  002A68  BC80               	btfsc	3968,6,c	;volatile
  2111  002A6A  0E01               	movlw	1
  2112  002A6C  0100               	movlb	0	; () banked
  2113  002A6E  6FC5               	movwf	getResetButtonState@ResetButtonStatussecondUC& (0+255),b
  2114                           
  2115                           ; BSR set to: 0
  2116                           ;main.c: 1333: if (ResetButtonStatusfirstUC != ResetButtonStatussecondUC)
  2117  002A70  0100               	movlb	0	; () banked
  2118  002A72  51C5               	movf	getResetButtonState@ResetButtonStatussecondUC& (0+255),w,b
  2119  002A74  0100               	movlb	0	; () banked
  2120  002A76  19C4               	xorwf	getResetButtonState@ResetButtonStatusfirstUC& (0+255),w,b
  2121  002A78  B4D8               	btfsc	status,2,c
  2122  002A7A  D002               	goto	l5168
  2123                           
  2124                           ; BSR set to: 0
  2125                           ;main.c: 1334: return 0;
  2126  002A7C  0E00               	movlw	0
  2127                           
  2128                           ; BSR set to: 0
  2129                           
  2130                           ; BSR set to: 0
  2131  002A7E  0012               	return	
  2132  002A80                     l5168:
  2133                           
  2134                           ; BSR set to: 0
  2135                           ;main.c: 1335: else{
  2136                           ;main.c: 1336: if (ResetButtonStatussecondUC == 1)
  2137  002A80  0100               	movlb	0	; () banked
  2138  002A82  05C5               	decf	getResetButtonState@ResetButtonStatussecondUC& (0+255),w,b
  2139  002A84  A4D8               	btfss	status,2,c
  2140  002A86  D002               	goto	l5176
  2141                           
  2142                           ; BSR set to: 0
  2143                           ;main.c: 1337: return 0;
  2144  002A88  0E00               	movlw	0
  2145                           
  2146                           ; BSR set to: 0
  2147                           
  2148                           ; BSR set to: 0
  2149  002A8A  0012               	return	
  2150  002A8C                     l5176:
  2151                           
  2152                           ; BSR set to: 0
  2153                           ;main.c: 1338: else
  2154                           ;main.c: 1339: return 1;
  2155  002A8C  0E01               	movlw	1
  2156                           
  2157                           ; BSR set to: 0
  2158                           
  2159                           ; BSR set to: 0
  2160  002A8E  0012               	return	
  2161  002A90                     __end_of_getResetButtonState:
  2162                           	opt stack 0
  2163                           tblptru	equ	0xFF8
  2164                           tblptrh	equ	0xFF7
  2165                           tblptrl	equ	0xFF6
  2166                           tablat	equ	0xFF5
  2167                           postinc0	equ	0xFEE
  2168                           wreg	equ	0xFE8
  2169                           postdec1	equ	0xFE5
  2170                           fsr1h	equ	0xFE2
  2171                           fsr1l	equ	0xFE1
  2172                           status	equ	0xFD8
  2173                           
  2174 ;; *************** function _getKeySwitchState *****************
  2175 ;; Defined at:
  2176 ;;		line 1278 in file "Released IBC-1 Code - 03-06-2016/main.c"
  2177 ;; Parameters:    Size  Location     Type
  2178 ;;		None
  2179 ;; Auto vars:     Size  Location     Type
  2180 ;;		None
  2181 ;; Return value:  Size  Location     Type
  2182 ;;                  1    wreg      unsigned char 
  2183 ;; Registers used:
  2184 ;;		wreg, status,2, status,0, cstack
  2185 ;; Tracked objects:
  2186 ;;		On entry : 0/0
  2187 ;;		On exit  : 0/0
  2188 ;;		Unchanged: 0/0
  2189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2190 ;;      Params:         0       0       0       0       0       0       0
  2191 ;;      Locals:         0       0       0       0       0       0       0
  2192 ;;      Temps:          0       0       0       0       0       0       0
  2193 ;;      Totals:         0       0       0       0       0       0       0
  2194 ;;Total ram usage:        0 bytes
  2195 ;; Hardware stack levels used:    1
  2196 ;; Hardware stack levels required when called:    8
  2197 ;; This function calls:
  2198 ;;		_ReadMAINS_ZeroCrossing
  2199 ;;		_WaitTickCount
  2200 ;; This function is called by:
  2201 ;;		_main
  2202 ;; This function uses a non-reentrant model
  2203 ;;
  2204                           
  2205                           	psect	text3
  2206  00283E                     __ptext3:
  2207                           	opt stack 0
  2208  00283E                     _getKeySwitchState:
  2209                           	opt stack 22
  2210                           
  2211                           ;main.c: 1281: ReadMAINS_ZeroCrossing();
  2212                           
  2213                           ; BSR set to: 0
  2214                           ;incstack = 0
  2215  00283E  EC4D  F014         	call	_ReadMAINS_ZeroCrossing	;wreg free
  2216                           
  2217                           ;main.c: 1282: if (mainsZero_CrossingValueUSG == 1){
  2218  002842  0100               	movlb	0	; () banked
  2219  002844  05A0               	decf	_mainsZero_CrossingValueUSG& (0+255),w,b
  2220  002846  0100               	movlb	0	; () banked
  2221  002848  11A1               	iorwf	(_mainsZero_CrossingValueUSG+1)& (0+255),w,b
  2222  00284A  B4D8               	btfsc	status,2,c
  2223  00284C  D01E               	goto	l5196
  2224                           
  2225                           ; BSR set to: 0
  2226                           ;main.c: 1285: else {
  2227                           ;main.c: 1286: WaitTickCount(15);
  2228                           
  2229                           ; BSR set to: 0
  2230                           
  2231                           ;main.c: 1284: }
  2232                           
  2233                           ; BSR set to: 0
  2234                           ;main.c: 1283: KeySwitchStateUCG = 1;
  2235  00284E  0E00               	movlw	0
  2236  002850  0100               	movlb	0	; () banked
  2237  002852  6FC3               	movwf	(WaitTickCount@tickCountUS+1)& (0+255),b
  2238  002854  0E0F               	movlw	15
  2239  002856  6FC2               	movwf	WaitTickCount@tickCountUS& (0+255),b
  2240  002858  EC3C  F016         	call	_WaitTickCount	;wreg free
  2241                           
  2242                           ;main.c: 1287: ReadMAINS_ZeroCrossing();
  2243  00285C  EC4D  F014         	call	_ReadMAINS_ZeroCrossing	;wreg free
  2244                           
  2245                           ;main.c: 1288: if (mainsZero_CrossingValueUSG == 1){
  2246  002860  0100               	movlb	0	; () banked
  2247  002862  05A0               	decf	_mainsZero_CrossingValueUSG& (0+255),w,b
  2248  002864  0100               	movlb	0	; () banked
  2249  002866  11A1               	iorwf	(_mainsZero_CrossingValueUSG+1)& (0+255),w,b
  2250  002868  B4D8               	btfsc	status,2,c
  2251  00286A  D00F               	goto	l5196
  2252                           
  2253                           ; BSR set to: 0
  2254                           ;main.c: 1291: else{
  2255                           ;main.c: 1292: WaitTickCount(10);
  2256                           
  2257                           ; BSR set to: 0
  2258                           
  2259                           ;main.c: 1290: }
  2260                           
  2261                           ; BSR set to: 0
  2262                           ;main.c: 1289: KeySwitchStateUCG = 1;
  2263  00286C  0E00               	movlw	0
  2264  00286E  0100               	movlb	0	; () banked
  2265  002870  6FC3               	movwf	(WaitTickCount@tickCountUS+1)& (0+255),b
  2266  002872  0E0A               	movlw	10
  2267  002874  6FC2               	movwf	WaitTickCount@tickCountUS& (0+255),b
  2268  002876  EC3C  F016         	call	_WaitTickCount	;wreg free
  2269                           
  2270                           ;main.c: 1293: ReadMAINS_ZeroCrossing();
  2271  00287A  EC4D  F014         	call	_ReadMAINS_ZeroCrossing	;wreg free
  2272                           
  2273                           ;main.c: 1294: if (mainsZero_CrossingValueUSG == 1){
  2274  00287E  0100               	movlb	0	; () banked
  2275  002880  05A0               	decf	_mainsZero_CrossingValueUSG& (0+255),w,b
  2276  002882  0100               	movlb	0	; () banked
  2277  002884  11A1               	iorwf	(_mainsZero_CrossingValueUSG+1)& (0+255),w,b
  2278  002886  A4D8               	btfss	status,2,c
  2279  002888  D002               	goto	l5198
  2280  00288A                     l5196:
  2281                           
  2282                           ; BSR set to: 0
  2283                           ;main.c: 1295: KeySwitchStateUCG = 1;
  2284  00288A  0E01               	movlw	1
  2285  00288C  D001               	goto	L1
  2286  00288E                     l5198:
  2287                           
  2288                           ; BSR set to: 0
  2289                           ;main.c: 1297: else
  2290                           ;main.c: 1298: KeySwitchStateUCG = 0;
  2291  00288E  0E00               	movlw	0
  2292  002890                     L1:
  2293  002890  0100               	movlb	0	; () banked
  2294  002892  6FAF               	movwf	_KeySwitchStateUCG& (0+255),b
  2295                           
  2296                           ; BSR set to: 0
  2297                           ;main.c: 1300: }
  2298                           ;main.c: 1301: }
  2299                           ;main.c: 1303: return KeySwitchStateUCG;
  2300                           
  2301                           ; BSR set to: 0
  2302                           
  2303                           ; BSR set to: 0
  2304  002894  0100               	movlb	0	; () banked
  2305  002896  51AF               	movf	_KeySwitchStateUCG& (0+255),w,b
  2306  002898  0012               	return	
  2307  00289A                     __end_of_getKeySwitchState:
  2308                           	opt stack 0
  2309                           tblptru	equ	0xFF8
  2310                           tblptrh	equ	0xFF7
  2311                           tblptrl	equ	0xFF6
  2312                           tablat	equ	0xFF5
  2313                           postinc0	equ	0xFEE
  2314                           wreg	equ	0xFE8
  2315                           postdec1	equ	0xFE5
  2316                           fsr1h	equ	0xFE2
  2317                           fsr1l	equ	0xFE1
  2318                           status	equ	0xFD8
  2319                           
  2320 ;; *************** function _getIBCDefaultData *****************
  2321 ;; Defined at:
  2322 ;;		line 827 in file "Released IBC-1 Code - 03-06-2016/main.c"
  2323 ;; Parameters:    Size  Location     Type
  2324 ;;		None
  2325 ;; Auto vars:     Size  Location     Type
  2326 ;;  returningDat    2    0[BANK0 ] unsigned short 
  2327 ;; Return value:  Size  Location     Type
  2328 ;;                  2  321[None  ] unsigned short 
  2329 ;; Registers used:
  2330 ;;		wreg, status,2, status,0
  2331 ;; Tracked objects:
  2332 ;;		On entry : 0/0
  2333 ;;		On exit  : 0/0
  2334 ;;		Unchanged: 0/0
  2335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2336 ;;      Params:         0       0       0       0       0       0       0
  2337 ;;      Locals:         0       2       0       0       0       0       0
  2338 ;;      Temps:          0       0       0       0       0       0       0
  2339 ;;      Totals:         0       2       0       0       0       0       0
  2340 ;;Total ram usage:        2 bytes
  2341 ;; Hardware stack levels used:    1
  2342 ;; Hardware stack levels required when called:    5
  2343 ;; This function calls:
  2344 ;;		Nothing
  2345 ;; This function is called by:
  2346 ;;		_main
  2347 ;; This function uses a non-reentrant model
  2348 ;;
  2349                           
  2350                           	psect	text4
  2351  002774                     __ptext4:
  2352                           	opt stack 0
  2353  002774                     _getIBCDefaultData:
  2354                           	opt stack 25
  2355                           
  2356                           ;main.c: 828: unsigned short returningData = 0b00000000;
  2357                           
  2358                           ; BSR set to: 0
  2359                           ;incstack = 0
  2360  002774  0E00               	movlw	0
  2361  002776  0100               	movlb	0	; () banked
  2362  002778  6FC3               	movwf	(getIBCDefaultData@returningData+1)& (0+255),b
  2363  00277A  0E00               	movlw	0
  2364  00277C  6FC2               	movwf	getIBCDefaultData@returningData& (0+255),b
  2365                           
  2366                           ;main.c: 830: if (KeySwitchStatusUCG)
  2367  00277E  0100               	movlb	0	; () banked
  2368  002780  51B0               	movf	_KeySwitchStatusUCG& (0+255),w,b
  2369  002782  B4D8               	btfsc	status,2,c
  2370  002784  D002               	goto	l5220
  2371                           
  2372                           ; BSR set to: 0
  2373                           ;main.c: 831: returningData |= 0b10000000;
  2374  002786  0100               	movlb	0	; () banked
  2375  002788  8FC2               	bsf	getIBCDefaultData@returningData& (0+255),7,b
  2376  00278A                     l5220:
  2377                           
  2378                           ; BSR set to: 0
  2379                           ;main.c: 832: if (RelayStatusUCG)
  2380  00278A  0100               	movlb	0	; () banked
  2381  00278C  51B4               	movf	_RelayStatusUCG& (0+255),w,b
  2382  00278E  B4D8               	btfsc	status,2,c
  2383  002790  D002               	goto	l5224
  2384                           
  2385                           ; BSR set to: 0
  2386                           ;main.c: 833: returningData |= 0b01000000;
  2387  002792  0100               	movlb	0	; () banked
  2388  002794  8DC2               	bsf	getIBCDefaultData@returningData& (0+255),6,b
  2389  002796                     l5224:
  2390                           
  2391                           ; BSR set to: 0
  2392                           ;main.c: 834: if (FireButtonStatusUCG)
  2393  002796  0100               	movlb	0	; () banked
  2394  002798  51AA               	movf	_FireButtonStatusUCG& (0+255),w,b
  2395  00279A  B4D8               	btfsc	status,2,c
  2396  00279C  D002               	goto	l5228
  2397                           
  2398                           ; BSR set to: 0
  2399                           ;main.c: 835: returningData |= 0b00100000;
  2400  00279E  0100               	movlb	0	; () banked
  2401  0027A0  8BC2               	bsf	getIBCDefaultData@returningData& (0+255),5,b
  2402  0027A2                     l5228:
  2403                           
  2404                           ; BSR set to: 0
  2405                           ;main.c: 836: if (CableFaultStatusUCG == 1)
  2406  0027A2  0100               	movlb	0	; () banked
  2407  0027A4  05A7               	decf	_CableFaultStatusUCG& (0+255),w,b
  2408  0027A6  A4D8               	btfss	status,2,c
  2409  0027A8  D002               	goto	l5232
  2410                           
  2411                           ; BSR set to: 0
  2412                           ;main.c: 837: returningData |= 0b00010000;
  2413  0027AA  0100               	movlb	0	; () banked
  2414  0027AC  89C2               	bsf	getIBCDefaultData@returningData& (0+255),4,b
  2415  0027AE                     l5232:
  2416                           
  2417                           ; BSR set to: 0
  2418                           ;main.c: 838: if (CableFaultStatusUCG == 2)
  2419  0027AE  0E02               	movlw	2
  2420  0027B0  0100               	movlb	0	; () banked
  2421  0027B2  19A7               	xorwf	_CableFaultStatusUCG& (0+255),w,b
  2422  0027B4  A4D8               	btfss	status,2,c
  2423  0027B6  D002               	goto	l5236
  2424                           
  2425                           ; BSR set to: 0
  2426                           ;main.c: 839: returningData |= 0b00001000;
  2427  0027B8  0100               	movlb	0	; () banked
  2428  0027BA  87C2               	bsf	getIBCDefaultData@returningData& (0+255),3,b
  2429  0027BC                     l5236:
  2430                           
  2431                           ; BSR set to: 0
  2432                           ;main.c: 840: if (FiringStatusUCG)
  2433  0027BC  0100               	movlb	0	; () banked
  2434  0027BE  51AB               	movf	_FiringStatusUCG& (0+255),w,b
  2435  0027C0  B4D8               	btfsc	status,2,c
  2436  0027C2  D002               	goto	l5240
  2437                           
  2438                           ; BSR set to: 0
  2439                           ;main.c: 841: returningData |= 0b00000100;
  2440  0027C4  0100               	movlb	0	; () banked
  2441  0027C6  85C2               	bsf	getIBCDefaultData@returningData& (0+255),2,b
  2442  0027C8                     l5240:
  2443                           
  2444                           ; BSR set to: 0
  2445                           ;main.c: 842: if (ResetStatusUCG)
  2446  0027C8  0100               	movlb	0	; () banked
  2447  0027CA  51B5               	movf	_ResetStatusUCG& (0+255),w,b
  2448  0027CC  B4D8               	btfsc	status,2,c
  2449  0027CE  D002               	goto	l5244
  2450                           
  2451                           ; BSR set to: 0
  2452                           ;main.c: 843: returningData |= 0b00000010;
  2453  0027D0  0100               	movlb	0	; () banked
  2454  0027D2  83C2               	bsf	getIBCDefaultData@returningData& (0+255),1,b
  2455  0027D4                     l5244:
  2456                           
  2457                           ; BSR set to: 0
  2458                           ;main.c: 844: PiDefaultData[0] = 0b00000101;
  2459  0027D4  0E05               	movlw	5
  2460  0027D6  0100               	movlb	0	; () banked
  2461  0027D8  6FC0               	movwf	_PiDefaultData& (0+255),b
  2462                           
  2463                           ; BSR set to: 0
  2464                           ;main.c: 845: PiDefaultData[1] = returningData;
  2465  0027DA  C0C2  F0C1         	movff	getIBCDefaultData@returningData,_PiDefaultData+1
  2466  0027DE  0012               	return	
  2467  0027E0                     __end_of_getIBCDefaultData:
  2468                           	opt stack 0
  2469                           tblptru	equ	0xFF8
  2470                           tblptrh	equ	0xFF7
  2471                           tblptrl	equ	0xFF6
  2472                           tablat	equ	0xFF5
  2473                           postinc0	equ	0xFEE
  2474                           wreg	equ	0xFE8
  2475                           postdec1	equ	0xFE5
  2476                           fsr1h	equ	0xFE2
  2477                           fsr1l	equ	0xFE1
  2478                           status	equ	0xFD8
  2479                           
  2480 ;; *************** function _getFireButtonState *****************
  2481 ;; Defined at:
  2482 ;;		line 1306 in file "Released IBC-1 Code - 03-06-2016/main.c"
  2483 ;; Parameters:    Size  Location     Type
  2484 ;;		None
  2485 ;; Auto vars:     Size  Location     Type
  2486 ;;  FireButtonSt    1    3[BANK0 ] unsigned char 
  2487 ;;  FireButtonSt    1    2[BANK0 ] unsigned char 
  2488 ;; Return value:  Size  Location     Type
  2489 ;;                  1    wreg      unsigned char 
  2490 ;; Registers used:
  2491 ;;		wreg, status,2, status,0, cstack
  2492 ;; Tracked objects:
  2493 ;;		On entry : 0/0
  2494 ;;		On exit  : 0/0
  2495 ;;		Unchanged: 0/0
  2496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2497 ;;      Params:         0       0       0       0       0       0       0
  2498 ;;      Locals:         0       2       0       0       0       0       0
  2499 ;;      Temps:          0       0       0       0       0       0       0
  2500 ;;      Totals:         0       2       0       0       0       0       0
  2501 ;;Total ram usage:        2 bytes
  2502 ;; Hardware stack levels used:    1
  2503 ;; Hardware stack levels required when called:    7
  2504 ;; This function calls:
  2505 ;;		_WaitTickCount
  2506 ;; This function is called by:
  2507 ;;		_main
  2508 ;; This function uses a non-reentrant model
  2509 ;;
  2510                           
  2511                           	psect	text5
  2512  002A90                     __ptext5:
  2513                           	opt stack 0
  2514  002A90                     _getFireButtonState:
  2515                           	opt stack 23
  2516                           
  2517                           ;main.c: 1307: unsigned char FireButtonStatusfirstUC;
  2518                           ;main.c: 1308: unsigned char FireButtonStatussecondUC;
  2519                           ;main.c: 1311: FireButtonStatusfirstUC = PORTAbits.RA3;
  2520                           
  2521                           ; BSR set to: 0
  2522                           ;incstack = 0
  2523  002A90  0E00               	movlw	0
  2524  002A92  B680               	btfsc	3968,3,c	;volatile
  2525  002A94  0E01               	movlw	1
  2526  002A96  0100               	movlb	0	; () banked
  2527  002A98  6FC4               	movwf	getFireButtonState@FireButtonStatusfirstUC& (0+255),b
  2528                           
  2529                           ; BSR set to: 0
  2530                           ;main.c: 1312: WaitTickCount(20);
  2531  002A9A  0E00               	movlw	0
  2532  002A9C  0100               	movlb	0	; () banked
  2533  002A9E  6FC3               	movwf	(WaitTickCount@tickCountUS+1)& (0+255),b
  2534  002AA0  0E14               	movlw	20
  2535  002AA2  6FC2               	movwf	WaitTickCount@tickCountUS& (0+255),b
  2536  002AA4  EC3C  F016         	call	_WaitTickCount	;wreg free
  2537                           
  2538                           ;main.c: 1313: FireButtonStatussecondUC = PORTAbits.RA3;
  2539  002AA8  0E00               	movlw	0
  2540  002AAA  B680               	btfsc	3968,3,c	;volatile
  2541  002AAC  0E01               	movlw	1
  2542  002AAE  0100               	movlb	0	; () banked
  2543  002AB0  6FC5               	movwf	getFireButtonState@FireButtonStatussecondUC& (0+255),b
  2544                           
  2545                           ; BSR set to: 0
  2546                           ;main.c: 1315: if (FireButtonStatusfirstUC != FireButtonStatussecondUC)
  2547  002AB2  0100               	movlb	0	; () banked
  2548  002AB4  51C5               	movf	getFireButtonState@FireButtonStatussecondUC& (0+255),w,b
  2549  002AB6  0100               	movlb	0	; () banked
  2550  002AB8  19C4               	xorwf	getFireButtonState@FireButtonStatusfirstUC& (0+255),w,b
  2551  002ABA  B4D8               	btfsc	status,2,c
  2552  002ABC  D002               	goto	l5268
  2553                           
  2554                           ; BSR set to: 0
  2555                           ;main.c: 1316: return 0;
  2556  002ABE  0E00               	movlw	0
  2557                           
  2558                           ; BSR set to: 0
  2559                           
  2560                           ; BSR set to: 0
  2561  002AC0  0012               	return	
  2562  002AC2                     l5268:
  2563                           
  2564                           ; BSR set to: 0
  2565                           ;main.c: 1317: else{
  2566                           ;main.c: 1318: if (FireButtonStatussecondUC == 1)
  2567  002AC2  0100               	movlb	0	; () banked
  2568  002AC4  05C5               	decf	getFireButtonState@FireButtonStatussecondUC& (0+255),w,b
  2569  002AC6  A4D8               	btfss	status,2,c
  2570  002AC8  D002               	goto	l5276
  2571                           
  2572                           ; BSR set to: 0
  2573                           ;main.c: 1319: return 0;
  2574  002ACA  0E00               	movlw	0
  2575                           
  2576                           ; BSR set to: 0
  2577                           
  2578                           ; BSR set to: 0
  2579  002ACC  0012               	return	
  2580  002ACE                     l5276:
  2581                           
  2582                           ; BSR set to: 0
  2583                           ;main.c: 1320: else
  2584                           ;main.c: 1321: return 1;
  2585  002ACE  0E01               	movlw	1
  2586                           
  2587                           ; BSR set to: 0
  2588                           
  2589                           ; BSR set to: 0
  2590  002AD0  0012               	return	
  2591  002AD2                     __end_of_getFireButtonState:
  2592                           	opt stack 0
  2593                           tblptru	equ	0xFF8
  2594                           tblptrh	equ	0xFF7
  2595                           tblptrl	equ	0xFF6
  2596                           tablat	equ	0xFF5
  2597                           postinc0	equ	0xFEE
  2598                           wreg	equ	0xFE8
  2599                           postdec1	equ	0xFE5
  2600                           fsr1h	equ	0xFE2
  2601                           fsr1l	equ	0xFE1
  2602                           status	equ	0xFD8
  2603                           
  2604 ;; *************** function ___ftge *****************
  2605 ;; Defined at:
  2606 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\ftge.c"
  2607 ;; Parameters:    Size  Location     Type
  2608 ;;  ff1             3    0[BANK0 ] float 
  2609 ;;  ff2             3    3[BANK0 ] float 
  2610 ;; Auto vars:     Size  Location     Type
  2611 ;;		None
  2612 ;; Return value:  Size  Location     Type
  2613 ;;		None               void
  2614 ;; Registers used:
  2615 ;;		wreg, status,2, status,0
  2616 ;; Tracked objects:
  2617 ;;		On entry : 0/0
  2618 ;;		On exit  : 0/0
  2619 ;;		Unchanged: 0/0
  2620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2621 ;;      Params:         0       6       0       0       0       0       0
  2622 ;;      Locals:         0       0       0       0       0       0       0
  2623 ;;      Temps:          0       3       0       0       0       0       0
  2624 ;;      Totals:         0       9       0       0       0       0       0
  2625 ;;Total ram usage:        9 bytes
  2626 ;; Hardware stack levels used:    1
  2627 ;; Hardware stack levels required when called:    5
  2628 ;; This function calls:
  2629 ;;		Nothing
  2630 ;; This function is called by:
  2631 ;;		_main
  2632 ;; This function uses a non-reentrant model
  2633 ;;
  2634                           
  2635                           	psect	text6
  2636  001F20                     __ptext6:
  2637                           	opt stack 0
  2638  001F20                     ___ftge:
  2639                           	opt stack 25
  2640                           
  2641                           ; BSR set to: 0
  2642                           ;incstack = 0
  2643  001F20  0100               	movlb	0	; () banked
  2644  001F22  AFC4               	btfss	(___ftge@ff1+2)& (0+255),7,b
  2645  001F24  D01D               	goto	l5370
  2646                           
  2647                           ; BSR set to: 0
  2648  001F26  C0C2  F0C8         	movff	___ftge@ff1,??___ftge
  2649  001F2A  C0C3  F0C9         	movff	___ftge@ff1+1,??___ftge+1
  2650  001F2E  C0C4  F0CA         	movff	___ftge@ff1+2,??___ftge+2
  2651  001F32  0100               	movlb	0	; () banked
  2652  001F34  1FC8               	comf	??___ftge& (0+255),f,b
  2653  001F36  1FC9               	comf	(??___ftge+1)& (0+255),f,b
  2654  001F38  1FCA               	comf	(??___ftge+2)& (0+255),f,b
  2655  001F3A  2BC8               	incf	??___ftge& (0+255),f,b
  2656  001F3C  0E00               	movlw	0
  2657  001F3E  23C9               	addwfc	(??___ftge+1)& (0+255),f,b
  2658  001F40  23CA               	addwfc	(??___ftge+2)& (0+255),f,b
  2659  001F42  0E00               	movlw	0
  2660  001F44  0100               	movlb	0	; () banked
  2661  001F46  25C8               	addwf	??___ftge& (0+255),w,b
  2662  001F48  0100               	movlb	0	; () banked
  2663  001F4A  6FC2               	movwf	___ftge@ff1& (0+255),b
  2664  001F4C  0E00               	movlw	0
  2665  001F4E  0100               	movlb	0	; () banked
  2666  001F50  21C9               	addwfc	(??___ftge+1)& (0+255),w,b
  2667  001F52  0100               	movlb	0	; () banked
  2668  001F54  6FC3               	movwf	(___ftge@ff1+1)& (0+255),b
  2669  001F56  0E80               	movlw	128
  2670  001F58  0100               	movlb	0	; () banked
  2671  001F5A  21CA               	addwfc	(??___ftge+2)& (0+255),w,b
  2672  001F5C  0100               	movlb	0	; () banked
  2673  001F5E  6FC4               	movwf	(___ftge@ff1+2)& (0+255),b
  2674  001F60                     l5370:
  2675                           
  2676                           ; BSR set to: 0
  2677  001F60  0100               	movlb	0	; () banked
  2678  001F62  AFC7               	btfss	(___ftge@ff2+2)& (0+255),7,b
  2679  001F64  D01D               	goto	l5374
  2680                           
  2681                           ; BSR set to: 0
  2682  001F66  C0C5  F0C8         	movff	___ftge@ff2,??___ftge
  2683  001F6A  C0C6  F0C9         	movff	___ftge@ff2+1,??___ftge+1
  2684  001F6E  C0C7  F0CA         	movff	___ftge@ff2+2,??___ftge+2
  2685  001F72  0100               	movlb	0	; () banked
  2686  001F74  1FC8               	comf	??___ftge& (0+255),f,b
  2687  001F76  1FC9               	comf	(??___ftge+1)& (0+255),f,b
  2688  001F78  1FCA               	comf	(??___ftge+2)& (0+255),f,b
  2689  001F7A  2BC8               	incf	??___ftge& (0+255),f,b
  2690  001F7C  0E00               	movlw	0
  2691  001F7E  23C9               	addwfc	(??___ftge+1)& (0+255),f,b
  2692  001F80  23CA               	addwfc	(??___ftge+2)& (0+255),f,b
  2693  001F82  0E00               	movlw	0
  2694  001F84  0100               	movlb	0	; () banked
  2695  001F86  25C8               	addwf	??___ftge& (0+255),w,b
  2696  001F88  0100               	movlb	0	; () banked
  2697  001F8A  6FC5               	movwf	___ftge@ff2& (0+255),b
  2698  001F8C  0E00               	movlw	0
  2699  001F8E  0100               	movlb	0	; () banked
  2700  001F90  21C9               	addwfc	(??___ftge+1)& (0+255),w,b
  2701  001F92  0100               	movlb	0	; () banked
  2702  001F94  6FC6               	movwf	(___ftge@ff2+1)& (0+255),b
  2703  001F96  0E80               	movlw	128
  2704  001F98  0100               	movlb	0	; () banked
  2705  001F9A  21CA               	addwfc	(??___ftge+2)& (0+255),w,b
  2706  001F9C  0100               	movlb	0	; () banked
  2707  001F9E  6FC7               	movwf	(___ftge@ff2+2)& (0+255),b
  2708  001FA0                     l5374:
  2709                           
  2710                           ; BSR set to: 0
  2711  001FA0  0E00               	movlw	0
  2712  001FA2  0100               	movlb	0	; () banked
  2713  001FA4  1BC2               	xorwf	___ftge@ff1& (0+255),f,b
  2714  001FA6  0E00               	movlw	0
  2715  001FA8  0100               	movlb	0	; () banked
  2716  001FAA  1BC3               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  2717  001FAC  0E80               	movlw	128
  2718  001FAE  0100               	movlb	0	; () banked
  2719  001FB0  1BC4               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  2720                           
  2721                           ; BSR set to: 0
  2722  001FB2  0E00               	movlw	0
  2723  001FB4  0100               	movlb	0	; () banked
  2724  001FB6  1BC5               	xorwf	___ftge@ff2& (0+255),f,b
  2725  001FB8  0E00               	movlw	0
  2726  001FBA  0100               	movlb	0	; () banked
  2727  001FBC  1BC6               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  2728  001FBE  0E80               	movlw	128
  2729  001FC0  0100               	movlb	0	; () banked
  2730  001FC2  1BC7               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  2731  001FC4  0100               	movlb	0	; () banked
  2732  001FC6  51C5               	movf	___ftge@ff2& (0+255),w,b
  2733  001FC8  0100               	movlb	0	; () banked
  2734  001FCA  5DC2               	subwf	___ftge@ff1& (0+255),w,b
  2735  001FCC  0100               	movlb	0	; () banked
  2736  001FCE  51C6               	movf	(___ftge@ff2+1)& (0+255),w,b
  2737  001FD0  0100               	movlb	0	; () banked
  2738  001FD2  59C3               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  2739  001FD4  0100               	movlb	0	; () banked
  2740  001FD6  51C7               	movf	(___ftge@ff2+2)& (0+255),w,b
  2741  001FD8  0100               	movlb	0	; () banked
  2742  001FDA  59C4               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  2743  001FDC  B0D8               	btfsc	status,0,c
  2744  001FDE  D002               	goto	l5380
  2745                           
  2746                           ; BSR set to: 0
  2747  001FE0  90D8               	bcf	status,0,c
  2748  001FE2  0012               	return	
  2749  001FE4                     l5380:
  2750                           
  2751                           ; BSR set to: 0
  2752  001FE4  80D8               	bsf	status,0,c
  2753                           
  2754                           ; BSR set to: 0
  2755  001FE6  0012               	return	
  2756  001FE8                     __end_of___ftge:
  2757                           	opt stack 0
  2758                           tblptru	equ	0xFF8
  2759                           tblptrh	equ	0xFF7
  2760                           tblptrl	equ	0xFF6
  2761                           tablat	equ	0xFF5
  2762                           postinc0	equ	0xFEE
  2763                           wreg	equ	0xFE8
  2764                           postdec1	equ	0xFE5
  2765                           fsr1h	equ	0xFE2
  2766                           fsr1l	equ	0xFE1
  2767                           status	equ	0xFD8
  2768                           
  2769 ;; *************** function _TurnRelayOn *****************
  2770 ;; Defined at:
  2771 ;;		line 1247 in file "Released IBC-1 Code - 03-06-2016/main.c"
  2772 ;; Parameters:    Size  Location     Type
  2773 ;;		None
  2774 ;; Auto vars:     Size  Location     Type
  2775 ;;		None
  2776 ;; Return value:  Size  Location     Type
  2777 ;;                  1    wreg      void 
  2778 ;; Registers used:
  2779 ;;		wreg, status,2, status,0
  2780 ;; Tracked objects:
  2781 ;;		On entry : 0/0
  2782 ;;		On exit  : 0/0
  2783 ;;		Unchanged: 0/0
  2784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2785 ;;      Params:         0       0       0       0       0       0       0
  2786 ;;      Locals:         0       0       0       0       0       0       0
  2787 ;;      Temps:          0       0       0       0       0       0       0
  2788 ;;      Totals:         0       0       0       0       0       0       0
  2789 ;;Total ram usage:        0 bytes
  2790 ;; Hardware stack levels used:    1
  2791 ;; Hardware stack levels required when called:    5
  2792 ;; This function calls:
  2793 ;;		Nothing
  2794 ;; This function is called by:
  2795 ;;		_main
  2796 ;; This function uses a non-reentrant model
  2797 ;;
  2798                           
  2799                           	psect	text7
  2800  002C96                     __ptext7:
  2801                           	opt stack 0
  2802  002C96                     _TurnRelayOn:
  2803                           	opt stack 25
  2804                           
  2805                           ;main.c: 1248: LATCbits.LATC1 = 1;
  2806                           
  2807                           ; BSR set to: 0
  2808                           ;incstack = 0
  2809  002C96  828B               	bsf	3979,1,c	;volatile
  2810                           
  2811                           ;main.c: 1249: if (RelayStatusUCG == 1)
  2812  002C98  0100               	movlb	0	; () banked
  2813  002C9A  05B4               	decf	_RelayStatusUCG& (0+255),w,b
  2814  002C9C  A4D8               	btfss	status,2,c
  2815  002C9E  D003               	goto	l951
  2816                           
  2817                           ; BSR set to: 0
  2818                           ;main.c: 1250: Pi_Status_Update = 0x01;
  2819  002CA0  0E01               	movlw	1
  2820  002CA2  0100               	movlb	0	; () banked
  2821  002CA4  6FB3               	movwf	_Pi_Status_Update& (0+255),b
  2822  002CA6                     l951:
  2823                           
  2824                           ; BSR set to: 0
  2825                           ;main.c: 1251: RelayStatusUCG = 0;
  2826  002CA6  0E00               	movlw	0
  2827  002CA8  0100               	movlb	0	; () banked
  2828  002CAA  6FB4               	movwf	_RelayStatusUCG& (0+255),b
  2829                           
  2830                           ; BSR set to: 0
  2831  002CAC  0012               	return		;funcret
  2832  002CAE                     __end_of_TurnRelayOn:
  2833                           	opt stack 0
  2834                           tblptru	equ	0xFF8
  2835                           tblptrh	equ	0xFF7
  2836                           tblptrl	equ	0xFF6
  2837                           tablat	equ	0xFF5
  2838                           postinc0	equ	0xFEE
  2839                           wreg	equ	0xFE8
  2840                           postdec1	equ	0xFE5
  2841                           fsr1h	equ	0xFE2
  2842                           fsr1l	equ	0xFE1
  2843                           status	equ	0xFD8
  2844                           
  2845 ;; *************** function _TurnBuzzer_AlarmOn *****************
  2846 ;; Defined at:
  2847 ;;		line 1270 in file "Released IBC-1 Code - 03-06-2016/main.c"
  2848 ;; Parameters:    Size  Location     Type
  2849 ;;		None
  2850 ;; Auto vars:     Size  Location     Type
  2851 ;;		None
  2852 ;; Return value:  Size  Location     Type
  2853 ;;                  1    wreg      void 
  2854 ;; Registers used:
  2855 ;;		None
  2856 ;; Tracked objects:
  2857 ;;		On entry : 0/0
  2858 ;;		On exit  : 0/0
  2859 ;;		Unchanged: 0/0
  2860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2861 ;;      Params:         0       0       0       0       0       0       0
  2862 ;;      Locals:         0       0       0       0       0       0       0
  2863 ;;      Temps:          0       0       0       0       0       0       0
  2864 ;;      Totals:         0       0       0       0       0       0       0
  2865 ;;Total ram usage:        0 bytes
  2866 ;; Hardware stack levels used:    1
  2867 ;; Hardware stack levels required when called:    5
  2868 ;; This function calls:
  2869 ;;		Nothing
  2870 ;; This function is called by:
  2871 ;;		_main
  2872 ;; This function uses a non-reentrant model
  2873 ;;
  2874                           
  2875                           	psect	text8
  2876  002E2A                     __ptext8:
  2877                           	opt stack 0
  2878  002E2A                     _TurnBuzzer_AlarmOn:
  2879                           	opt stack 25
  2880                           
  2881                           ;main.c: 1271: LATAbits.LATA2 = 1;
  2882                           
  2883                           ; BSR set to: 0
  2884                           ;incstack = 0
  2885  002E2A  8489               	bsf	3977,2,c	;volatile
  2886  002E2C  0012               	return		;funcret
  2887  002E2E                     __end_of_TurnBuzzer_AlarmOn:
  2888                           	opt stack 0
  2889                           tblptru	equ	0xFF8
  2890                           tblptrh	equ	0xFF7
  2891                           tblptrl	equ	0xFF6
  2892                           tablat	equ	0xFF5
  2893                           postinc0	equ	0xFEE
  2894                           wreg	equ	0xFE8
  2895                           postdec1	equ	0xFE5
  2896                           fsr1h	equ	0xFE2
  2897                           fsr1l	equ	0xFE1
  2898                           status	equ	0xFD8
  2899                           
  2900 ;; *************** function _TurnBuzzer_AlarmOff *****************
  2901 ;; Defined at:
  2902 ;;		line 1274 in file "Released IBC-1 Code - 03-06-2016/main.c"
  2903 ;; Parameters:    Size  Location     Type
  2904 ;;		None
  2905 ;; Auto vars:     Size  Location     Type
  2906 ;;		None
  2907 ;; Return value:  Size  Location     Type
  2908 ;;                  1    wreg      void 
  2909 ;; Registers used:
  2910 ;;		None
  2911 ;; Tracked objects:
  2912 ;;		On entry : 0/0
  2913 ;;		On exit  : 0/0
  2914 ;;		Unchanged: 0/0
  2915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2916 ;;      Params:         0       0       0       0       0       0       0
  2917 ;;      Locals:         0       0       0       0       0       0       0
  2918 ;;      Temps:          0       0       0       0       0       0       0
  2919 ;;      Totals:         0       0       0       0       0       0       0
  2920 ;;Total ram usage:        0 bytes
  2921 ;; Hardware stack levels used:    1
  2922 ;; Hardware stack levels required when called:    5
  2923 ;; This function calls:
  2924 ;;		Nothing
  2925 ;; This function is called by:
  2926 ;;		_main
  2927 ;; This function uses a non-reentrant model
  2928 ;;
  2929                           
  2930                           	psect	text9
  2931  002E2E                     __ptext9:
  2932                           	opt stack 0
  2933  002E2E                     _TurnBuzzer_AlarmOff:
  2934                           	opt stack 25
  2935                           
  2936                           ;main.c: 1275: LATAbits.LATA2 = 0;
  2937                           
  2938                           ;incstack = 0
  2939  002E2E  9489               	bcf	3977,2,c	;volatile
  2940  002E30  0012               	return		;funcret
  2941  002E32                     __end_of_TurnBuzzer_AlarmOff:
  2942                           	opt stack 0
  2943                           tblptru	equ	0xFF8
  2944                           tblptrh	equ	0xFF7
  2945                           tblptrl	equ	0xFF6
  2946                           tablat	equ	0xFF5
  2947                           postinc0	equ	0xFEE
  2948                           wreg	equ	0xFE8
  2949                           postdec1	equ	0xFE5
  2950                           fsr1h	equ	0xFE2
  2951                           fsr1l	equ	0xFE1
  2952                           status	equ	0xFD8
  2953                           
  2954 ;; *************** function _Transmit_Pi_Default_Data *****************
  2955 ;; Defined at:
  2956 ;;		line 730 in file "Released IBC-1 Code - 03-06-2016/main.c"
  2957 ;; Parameters:    Size  Location     Type
  2958 ;;		None
  2959 ;; Auto vars:     Size  Location     Type
  2960 ;;		None
  2961 ;; Return value:  Size  Location     Type
  2962 ;;                  1    wreg      void 
  2963 ;; Registers used:
  2964 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2965 ;; Tracked objects:
  2966 ;;		On entry : 0/0
  2967 ;;		On exit  : 0/0
  2968 ;;		Unchanged: 0/0
  2969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2970 ;;      Params:         0       0       0       0       0       0       0
  2971 ;;      Locals:         0       0       0       0       0       0       0
  2972 ;;      Temps:          0       0       0       0       0       0       0
  2973 ;;      Totals:         0       0       0       0       0       0       0
  2974 ;;Total ram usage:        0 bytes
  2975 ;; Hardware stack levels used:    1
  2976 ;; Hardware stack levels required when called:    7
  2977 ;; This function calls:
  2978 ;;		_CreateMessageUART
  2979 ;;		_SendUARTPacket
  2980 ;; This function is called by:
  2981 ;;		_main
  2982 ;; This function uses a non-reentrant model
  2983 ;;
  2984                           
  2985                           	psect	text10
  2986  002B80                     __ptext10:
  2987                           	opt stack 0
  2988  002B80                     _Transmit_Pi_Default_Data:
  2989                           	opt stack 23
  2990                           
  2991                           ;main.c: 731: CreateMessageUART(0x0010, 0b00001000, 2, PiDefaultData);
  2992                           
  2993                           ;incstack = 0
  2994  002B80  0E00               	movlw	0
  2995  002B82  0100               	movlb	0	; () banked
  2996  002B84  6FD0               	movwf	(CreateMessageUART@packetSourceUS+1)& (0+255),b
  2997  002B86  0E10               	movlw	16
  2998  002B88  6FCF               	movwf	CreateMessageUART@packetSourceUS& (0+255),b
  2999  002B8A  0E08               	movlw	8
  3000  002B8C  0100               	movlb	0	; () banked
  3001  002B8E  6FD1               	movwf	CreateMessageUART@commandUC& (0+255),b
  3002  002B90  0E02               	movlw	2
  3003  002B92  0100               	movlb	0	; () banked
  3004  002B94  6FD2               	movwf	CreateMessageUART@dataLenUC& (0+255),b
  3005  002B96  0EC0               	movlw	low _PiDefaultData
  3006  002B98  0100               	movlb	0	; () banked
  3007  002B9A  6FD3               	movwf	CreateMessageUART@dataBuf& (0+255),b
  3008  002B9C  0E00               	movlw	high _PiDefaultData
  3009  002B9E  0100               	movlb	0	; () banked
  3010  002BA0  6FD4               	movwf	(CreateMessageUART@dataBuf+1)& (0+255),b
  3011  002BA2  ECB3  F00E         	call	_CreateMessageUART	;wreg free
  3012                           
  3013                           ;main.c: 732: SendUARTPacket();
  3014  002BA6  ECC5  F016         	call	_SendUARTPacket	;wreg free
  3015  002BAA  0012               	return		;funcret
  3016  002BAC                     __end_of_Transmit_Pi_Default_Data:
  3017                           	opt stack 0
  3018                           tblptru	equ	0xFF8
  3019                           tblptrh	equ	0xFF7
  3020                           tblptrl	equ	0xFF6
  3021                           tablat	equ	0xFF5
  3022                           postinc0	equ	0xFEE
  3023                           wreg	equ	0xFE8
  3024                           postdec1	equ	0xFE5
  3025                           fsr1h	equ	0xFE2
  3026                           fsr1l	equ	0xFE1
  3027                           status	equ	0xFD8
  3028                           
  3029 ;; *************** function _SendUARTPacket *****************
  3030 ;; Defined at:
  3031 ;;		line 255 in file "Released IBC-1 Code - 03-06-2016/UART.c"
  3032 ;; Parameters:    Size  Location     Type
  3033 ;;		None
  3034 ;; Auto vars:     Size  Location     Type
  3035 ;;		None
  3036 ;; Return value:  Size  Location     Type
  3037 ;;                  1    wreg      void 
  3038 ;; Registers used:
  3039 ;;		wreg, status,2, status,0, cstack
  3040 ;; Tracked objects:
  3041 ;;		On entry : 0/0
  3042 ;;		On exit  : 0/0
  3043 ;;		Unchanged: 0/0
  3044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3045 ;;      Params:         0       0       0       0       0       0       0
  3046 ;;      Locals:         0       0       0       0       0       0       0
  3047 ;;      Temps:          0       0       0       0       0       0       0
  3048 ;;      Totals:         0       0       0       0       0       0       0
  3049 ;;Total ram usage:        0 bytes
  3050 ;; Hardware stack levels used:    1
  3051 ;; Hardware stack levels required when called:    6
  3052 ;; This function calls:
  3053 ;;		_UART_Write
  3054 ;; This function is called by:
  3055 ;;		_main
  3056 ;;		_Transmit_Pi_Default_Data
  3057 ;; This function uses a non-reentrant model
  3058 ;;
  3059                           
  3060                           	psect	text11
  3061  002D8A                     __ptext11:
  3062                           	opt stack 0
  3063  002D8A                     _SendUARTPacket:
  3064                           	opt stack 23
  3065                           
  3066                           ;UART.c: 257: flagUART |= 1;
  3067                           
  3068                           ;incstack = 0
  3069  002D8A  805A               	bsf	_flagUART,0,c
  3070                           
  3071                           ;UART.c: 258: UART_Write(TransmitPiBufferCG[0]);
  3072  002D8C  0101               	movlb	1	; () banked
  3073  002D8E  5100               	movf	_TransmitPiBufferCG& (0+255),w,b
  3074  002D90  ECD5  F016         	call	_UART_Write
  3075                           
  3076                           ;UART.c: 259: PiBufferTXNEXTUCA = 1;
  3077  002D94  0E01               	movlw	1
  3078  002D96  6E52               	movwf	_PiBufferTXNEXTUCA,c
  3079  002D98  0012               	return		;funcret
  3080  002D9A                     __end_of_SendUARTPacket:
  3081                           	opt stack 0
  3082                           tblptru	equ	0xFF8
  3083                           tblptrh	equ	0xFF7
  3084                           tblptrl	equ	0xFF6
  3085                           tablat	equ	0xFF5
  3086                           postinc0	equ	0xFEE
  3087                           wreg	equ	0xFE8
  3088                           postdec1	equ	0xFE5
  3089                           fsr1h	equ	0xFE2
  3090                           fsr1l	equ	0xFE1
  3091                           status	equ	0xFD8
  3092                           
  3093 ;; *************** function _UART_Write *****************
  3094 ;; Defined at:
  3095 ;;		line 262 in file "Released IBC-1 Code - 03-06-2016/UART.c"
  3096 ;; Parameters:    Size  Location     Type
  3097 ;;  data            1    wreg     unsigned char 
  3098 ;; Auto vars:     Size  Location     Type
  3099 ;;  data            1    0[BANK0 ] unsigned char 
  3100 ;; Return value:  Size  Location     Type
  3101 ;;                  1    wreg      void 
  3102 ;; Registers used:
  3103 ;;		wreg
  3104 ;; Tracked objects:
  3105 ;;		On entry : 0/0
  3106 ;;		On exit  : 0/0
  3107 ;;		Unchanged: 0/0
  3108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3109 ;;      Params:         0       0       0       0       0       0       0
  3110 ;;      Locals:         0       1       0       0       0       0       0
  3111 ;;      Temps:          0       0       0       0       0       0       0
  3112 ;;      Totals:         0       1       0       0       0       0       0
  3113 ;;Total ram usage:        1 bytes
  3114 ;; Hardware stack levels used:    1
  3115 ;; Hardware stack levels required when called:    5
  3116 ;; This function calls:
  3117 ;;		Nothing
  3118 ;; This function is called by:
  3119 ;;		_SendUARTPacket
  3120 ;; This function uses a non-reentrant model
  3121 ;;
  3122                           
  3123                           	psect	text12
  3124  002DAA                     __ptext12:
  3125                           	opt stack 0
  3126  002DAA                     _UART_Write:
  3127                           	opt stack 23
  3128                           
  3129                           ;incstack = 0
  3130                           ;UART_Write@data stored from wreg
  3131  002DAA  0100               	movlb	0	; () banked
  3132  002DAC  6FC2               	movwf	UART_Write@data& (0+255),b
  3133  002DAE                     l237:
  3134  002DAE  A2AC               	btfss	4012,1,c	;volatile
  3135  002DB0  D7FE               	goto	l237
  3136                           
  3137                           ;UART.c: 265: TXREG1 = data;
  3138  002DB2  C0C2  FFAD         	movff	UART_Write@data,4013	;volatile
  3139  002DB6  0012               	return		;funcret
  3140  002DB8                     __end_of_UART_Write:
  3141                           	opt stack 0
  3142                           tblptru	equ	0xFF8
  3143                           tblptrh	equ	0xFF7
  3144                           tblptrl	equ	0xFF6
  3145                           tablat	equ	0xFF5
  3146                           postinc0	equ	0xFEE
  3147                           wreg	equ	0xFE8
  3148                           postdec1	equ	0xFE5
  3149                           fsr1h	equ	0xFE2
  3150                           fsr1l	equ	0xFE1
  3151                           status	equ	0xFD8
  3152                           
  3153 ;; *************** function _CreateMessageUART *****************
  3154 ;; Defined at:
  3155 ;;		line 231 in file "Released IBC-1 Code - 03-06-2016/UART.c"
  3156 ;; Parameters:    Size  Location     Type
  3157 ;;  packetSource    2   13[BANK0 ] unsigned short 
  3158 ;;  commandUC       1   15[BANK0 ] unsigned char 
  3159 ;;  dataLenUC       1   16[BANK0 ] unsigned char 
  3160 ;;  dataBuf         2   17[BANK0 ] PTR unsigned char 
  3161 ;;		 -> PiDefaultData(2), Receive_ISC_Packet@tempIscSerial(2), bufferRXST7540UCA(75), 
  3162 ;; Auto vars:     Size  Location     Type
  3163 ;;  packetCRCUS     2   21[BANK0 ] unsigned short 
  3164 ;;  dataBufLocUC    1   23[BANK0 ] unsigned char 
  3165 ;; Return value:  Size  Location     Type
  3166 ;;                  1    wreg      void 
  3167 ;; Registers used:
  3168 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3169 ;; Tracked objects:
  3170 ;;		On entry : 0/0
  3171 ;;		On exit  : 0/0
  3172 ;;		Unchanged: 0/0
  3173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3174 ;;      Params:         0       6       0       0       0       0       0
  3175 ;;      Locals:         0       3       0       0       0       0       0
  3176 ;;      Temps:          0       2       0       0       0       0       0
  3177 ;;      Totals:         0      11       0       0       0       0       0
  3178 ;;Total ram usage:       11 bytes
  3179 ;; Hardware stack levels used:    1
  3180 ;; Hardware stack levels required when called:    6
  3181 ;; This function calls:
  3182 ;;		_CRC16
  3183 ;; This function is called by:
  3184 ;;		_Transmit_Pi_Default_Data
  3185 ;; This function uses a non-reentrant model
  3186 ;;
  3187                           
  3188                           	psect	text13
  3189  001D66                     __ptext13:
  3190                           	opt stack 0
  3191  001D66                     _CreateMessageUART:
  3192                           	opt stack 23
  3193                           
  3194                           ;UART.c: 232: unsigned char dataBufLocUC;
  3195                           ;UART.c: 233: unsigned short packetCRCUS;
  3196                           ;UART.c: 235: TransmitPiBufferCG[0] = 0xAA;
  3197                           
  3198                           ;incstack = 0
  3199  001D66  0EAA               	movlw	170
  3200  001D68  0101               	movlb	1	; () banked
  3201  001D6A  6F00               	movwf	_TransmitPiBufferCG& (0+255),b
  3202                           
  3203                           ;UART.c: 236: TransmitPiBufferCG[1] = 0xAA;
  3204  001D6C  0EAA               	movlw	170
  3205  001D6E  0101               	movlb	1	; () banked
  3206  001D70  6F01               	movwf	(_TransmitPiBufferCG+1)& (0+255),b
  3207                           
  3208                           ; BSR set to: 1
  3209                           ;UART.c: 238: TransmitPiBufferCG[2] = 8 + dataLenUC;
  3210  001D72  0100               	movlb	0	; () banked
  3211  001D74  51D2               	movf	CreateMessageUART@dataLenUC& (0+255),w,b
  3212  001D76  0F08               	addlw	8
  3213  001D78  0101               	movlb	1	; () banked
  3214  001D7A  6F02               	movwf	(_TransmitPiBufferCG+2)& (0+255),b
  3215                           
  3216                           ; BSR set to: 1
  3217                           ;UART.c: 240: TransmitPiBufferCG[3] = commandUC;
  3218  001D7C  C0D1  F103         	movff	CreateMessageUART@commandUC,_TransmitPiBufferCG+3
  3219                           
  3220                           ; BSR set to: 1
  3221                           ;UART.c: 242: TransmitPiBufferCG[4] = packetSourceUS >> 8;
  3222  001D80  0100               	movlb	0	; () banked
  3223  001D82  51D0               	movf	(CreateMessageUART@packetSourceUS+1)& (0+255),w,b
  3224  001D84  0101               	movlb	1	; () banked
  3225  001D86  6F04               	movwf	(_TransmitPiBufferCG+4)& (0+255),b
  3226                           
  3227                           ; BSR set to: 1
  3228                           ;UART.c: 243: TransmitPiBufferCG[5] = packetSourceUS;
  3229  001D88  C0CF  F105         	movff	CreateMessageUART@packetSourceUS,_TransmitPiBufferCG+5
  3230                           
  3231                           ; BSR set to: 1
  3232                           ;UART.c: 245: for(dataBufLocUC = 0; dataBufLocUC < dataLenUC; dataBufLocUC++)
  3233  001D8C  0E00               	movlw	0
  3234  001D8E  0100               	movlb	0	; () banked
  3235  001D90  6FD9               	movwf	CreateMessageUART@dataBufLocUC& (0+255),b
  3236  001D92  D021               	goto	l4364
  3237  001D94                     l4360:
  3238                           
  3239                           ; BSR set to: 0
  3240                           ;UART.c: 246: TransmitPiBufferCG[dataBufLocUC + 6] = dataBuf[dataBufLocUC];
  3241  001D94  0100               	movlb	0	; () banked
  3242  001D96  51D9               	movf	CreateMessageUART@dataBufLocUC& (0+255),w,b
  3243  001D98  0D01               	mullw	1
  3244  001D9A  50F3               	movf	prodl,w,c
  3245  001D9C  0100               	movlb	0	; () banked
  3246  001D9E  25D3               	addwf	CreateMessageUART@dataBuf& (0+255),w,b
  3247  001DA0  6ED9               	movwf	fsr2l,c
  3248  001DA2  50F4               	movf	prodh,w,c
  3249  001DA4  0100               	movlb	0	; () banked
  3250  001DA6  21D4               	addwfc	(CreateMessageUART@dataBuf+1)& (0+255),w,b
  3251  001DA8  6EDA               	movwf	fsr2h,c
  3252  001DAA  0100               	movlb	0	; () banked
  3253  001DAC  51D9               	movf	CreateMessageUART@dataBufLocUC& (0+255),w,b
  3254  001DAE  0100               	movlb	0	; () banked
  3255  001DB0  6FD5               	movwf	??_CreateMessageUART& (0+255),b
  3256  001DB2  6BD6               	clrf	(??_CreateMessageUART+1)& (0+255),b
  3257  001DB4  0E06               	movlw	6
  3258  001DB6  0100               	movlb	0	; () banked
  3259  001DB8  27D5               	addwf	??_CreateMessageUART& (0+255),f,b
  3260  001DBA  0E00               	movlw	0
  3261  001DBC  23D6               	addwfc	(??_CreateMessageUART+1)& (0+255),f,b
  3262  001DBE  0E00               	movlw	low _TransmitPiBufferCG
  3263  001DC0  0100               	movlb	0	; () banked
  3264  001DC2  25D5               	addwf	??_CreateMessageUART& (0+255),w,b
  3265  001DC4  6EE1               	movwf	fsr1l,c
  3266  001DC6  0E01               	movlw	high _TransmitPiBufferCG
  3267  001DC8  0100               	movlb	0	; () banked
  3268  001DCA  21D6               	addwfc	(??_CreateMessageUART+1)& (0+255),w,b
  3269  001DCC  6EE2               	movwf	fsr1h,c
  3270  001DCE  CFDF FFE7          	movff	indf2,indf1
  3271                           
  3272                           ; BSR set to: 0
  3273  001DD2  0100               	movlb	0	; () banked
  3274  001DD4  2BD9               	incf	CreateMessageUART@dataBufLocUC& (0+255),f,b
  3275  001DD6                     l4364:
  3276                           
  3277                           ; BSR set to: 0
  3278  001DD6  0100               	movlb	0	; () banked
  3279  001DD8  51D2               	movf	CreateMessageUART@dataLenUC& (0+255),w,b
  3280  001DDA  0100               	movlb	0	; () banked
  3281  001DDC  5DD9               	subwf	CreateMessageUART@dataBufLocUC& (0+255),w,b
  3282  001DDE  A0D8               	btfss	status,0,c
  3283  001DE0  D7D9               	goto	l4360
  3284                           
  3285                           ; BSR set to: 0
  3286                           ;UART.c: 247: dataBufLocUC += 6;
  3287                           
  3288                           ; BSR set to: 0
  3289  001DE2  0E06               	movlw	6
  3290  001DE4  0100               	movlb	0	; () banked
  3291  001DE6  27D9               	addwf	CreateMessageUART@dataBufLocUC& (0+255),f,b
  3292                           
  3293                           ; BSR set to: 0
  3294                           ;UART.c: 249: packetCRCUS = CRC16(TransmitPiBufferCG, 8 + dataLenUC - 2);
  3295  001DE8  0E00               	movlw	low _TransmitPiBufferCG
  3296  001DEA  0100               	movlb	0	; () banked
  3297  001DEC  6FC2               	movwf	CRC16@data_p& (0+255),b
  3298  001DEE  0E01               	movlw	high _TransmitPiBufferCG
  3299  001DF0  0100               	movlb	0	; () banked
  3300  001DF2  6FC3               	movwf	(CRC16@data_p+1)& (0+255),b
  3301  001DF4  0E06               	movlw	6
  3302  001DF6  0100               	movlb	0	; () banked
  3303  001DF8  25D2               	addwf	CreateMessageUART@dataLenUC& (0+255),w,b
  3304  001DFA  0100               	movlb	0	; () banked
  3305  001DFC  6FC4               	movwf	CRC16@length& (0+255),b
  3306  001DFE  0100               	movlb	0	; () banked
  3307  001E00  6BC5               	clrf	(CRC16@length+1)& (0+255),b
  3308  001E02  0E00               	movlw	0
  3309  001E04  23C5               	addwfc	(CRC16@length+1)& (0+255),f,b
  3310  001E06  EC62  F00A         	call	_CRC16	;wreg free
  3311  001E0A  C0C2  F0D7         	movff	?_CRC16,CreateMessageUART@packetCRCUS
  3312  001E0E  C0C3  F0D8         	movff	?_CRC16+1,CreateMessageUART@packetCRCUS+1
  3313                           
  3314                           ;UART.c: 250: TransmitPiBufferCG[dataBufLocUC++] = packetCRCUS >> 8;
  3315  001E12  0100               	movlb	0	; () banked
  3316  001E14  51D9               	movf	CreateMessageUART@dataBufLocUC& (0+255),w,b
  3317  001E16  0D01               	mullw	1
  3318  001E18  0E00               	movlw	low _TransmitPiBufferCG
  3319  001E1A  24F3               	addwf	prodl,w,c
  3320  001E1C  6ED9               	movwf	fsr2l,c
  3321  001E1E  0E01               	movlw	high _TransmitPiBufferCG
  3322  001E20  20F4               	addwfc	prodh,w,c
  3323  001E22  6EDA               	movwf	fsr2h,c
  3324  001E24  0100               	movlb	0	; () banked
  3325  001E26  51D8               	movf	(CreateMessageUART@packetCRCUS+1)& (0+255),w,b
  3326  001E28  6EDF               	movwf	indf2,c
  3327                           
  3328                           ; BSR set to: 0
  3329  001E2A  0100               	movlb	0	; () banked
  3330  001E2C  2BD9               	incf	CreateMessageUART@dataBufLocUC& (0+255),f,b
  3331                           
  3332                           ; BSR set to: 0
  3333                           ;UART.c: 251: TransmitPiBufferCG[dataBufLocUC] = packetCRCUS;
  3334  001E2E  0100               	movlb	0	; () banked
  3335  001E30  51D9               	movf	CreateMessageUART@dataBufLocUC& (0+255),w,b
  3336  001E32  0D01               	mullw	1
  3337  001E34  0E00               	movlw	low _TransmitPiBufferCG
  3338  001E36  24F3               	addwf	prodl,w,c
  3339  001E38  6ED9               	movwf	fsr2l,c
  3340  001E3A  0E01               	movlw	high _TransmitPiBufferCG
  3341  001E3C  20F4               	addwfc	prodh,w,c
  3342  001E3E  6EDA               	movwf	fsr2h,c
  3343  001E40  C0D7  FFDF         	movff	CreateMessageUART@packetCRCUS,indf2
  3344                           
  3345                           ; BSR set to: 0
  3346                           ;UART.c: 252: PiBufferTXLenUCA = dataBufLocUC++;
  3347  001E44  C0D9  F0B2         	movff	CreateMessageUART@dataBufLocUC,_PiBufferTXLenUCA
  3348                           
  3349                           ; BSR set to: 0
  3350  001E48  0100               	movlb	0	; () banked
  3351  001E4A  2BD9               	incf	CreateMessageUART@dataBufLocUC& (0+255),f,b
  3352                           
  3353                           ; BSR set to: 0
  3354  001E4C  0012               	return		;funcret
  3355  001E4E                     __end_of_CreateMessageUART:
  3356                           	opt stack 0
  3357                           tblptru	equ	0xFF8
  3358                           tblptrh	equ	0xFF7
  3359                           tblptrl	equ	0xFF6
  3360                           tablat	equ	0xFF5
  3361                           prodh	equ	0xFF4
  3362                           prodl	equ	0xFF3
  3363                           postinc0	equ	0xFEE
  3364                           wreg	equ	0xFE8
  3365                           indf1	equ	0xFE7
  3366                           postdec1	equ	0xFE5
  3367                           fsr1h	equ	0xFE2
  3368                           fsr1l	equ	0xFE1
  3369                           indf2	equ	0xFDF
  3370                           fsr2h	equ	0xFDA
  3371                           fsr2l	equ	0xFD9
  3372                           status	equ	0xFD8
  3373                           
  3374 ;; *************** function _Transmit_BLAST_Command_Packet *****************
  3375 ;; Defined at:
  3376 ;;		line 712 in file "Released IBC-1 Code - 03-06-2016/main.c"
  3377 ;; Parameters:    Size  Location     Type
  3378 ;;		None
  3379 ;; Auto vars:     Size  Location     Type
  3380 ;;		None
  3381 ;; Return value:  Size  Location     Type
  3382 ;;                  1    wreg      void 
  3383 ;; Registers used:
  3384 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3385 ;; Tracked objects:
  3386 ;;		On entry : 0/0
  3387 ;;		On exit  : 0/0
  3388 ;;		Unchanged: 0/0
  3389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3390 ;;      Params:         0       0       0       0       0       0       0
  3391 ;;      Locals:         0       0       0       0       0       0       0
  3392 ;;      Temps:          0       2       0       0       0       0       0
  3393 ;;      Totals:         0       2       0       0       0       0       0
  3394 ;;Total ram usage:        2 bytes
  3395 ;; Hardware stack levels used:    1
  3396 ;; Hardware stack levels required when called:    7
  3397 ;; This function calls:
  3398 ;;		_CreateMessageST7540
  3399 ;;		_LineIdleST7540
  3400 ;;		_StartTransmitST7540
  3401 ;;		_TransmitBusyST7540
  3402 ;; This function is called by:
  3403 ;;		_main
  3404 ;; This function uses a non-reentrant model
  3405 ;;
  3406                           
  3407                           	psect	text14
  3408  0028F6                     __ptext14:
  3409                           	opt stack 0
  3410  0028F6                     _Transmit_BLAST_Command_Packet:
  3411                           	opt stack 23
  3412                           
  3413                           ;main.c: 713: if (!TransmitBusyST7540() && LineIdleST7540()){
  3414                           
  3415                           ; BSR set to: 0
  3416                           ;incstack = 0
  3417  0028F6  EC09  F017         	call	_TransmitBusyST7540	;wreg free
  3418  0028FA  0900               	iorlw	0
  3419  0028FC  A4D8               	btfss	status,2,c
  3420  0028FE  0012               	return	
  3421  002900  ECE3  F016         	call	_LineIdleST7540	;wreg free
  3422  002904  0100               	movlb	0	; () banked
  3423  002906  6BEE               	clrf	??_Transmit_BLAST_Command_Packet& (0+255),b
  3424  002908  6BEF               	clrf	(??_Transmit_BLAST_Command_Packet+1)& (0+255),b
  3425  00290A  0100               	movlb	0	; () banked
  3426  00290C  19EE               	xorwf	??_Transmit_BLAST_Command_Packet& (0+255),w,b
  3427  00290E  11EF               	iorwf	(??_Transmit_BLAST_Command_Packet+1)& (0+255),w,b
  3428  002910  B4D8               	btfsc	status,2,c
  3429  002912  0012               	return	
  3430                           
  3431                           ; BSR set to: 0
  3432                           ;main.c: 714: CreateMessageST7540(0x0010, 0x00, 0b00100101, 0, "");
  3433  002914  0E00               	movlw	0
  3434  002916  0100               	movlb	0	; () banked
  3435  002918  6FE0               	movwf	(CreateMessageST7540@packetSourceUS+1)& (0+255),b
  3436  00291A  0E10               	movlw	16
  3437  00291C  6FDF               	movwf	CreateMessageST7540@packetSourceUS& (0+255),b
  3438  00291E  0E00               	movlw	0
  3439  002920  0100               	movlb	0	; () banked
  3440  002922  6FE2               	movwf	(CreateMessageST7540@packetDestUS+1)& (0+255),b
  3441  002924  0E00               	movlw	0
  3442  002926  6FE1               	movwf	CreateMessageST7540@packetDestUS& (0+255),b
  3443  002928  0E25               	movlw	37
  3444  00292A  0100               	movlb	0	; () banked
  3445  00292C  6FE3               	movwf	CreateMessageST7540@commandUC& (0+255),b
  3446  00292E  0E00               	movlw	0
  3447  002930  0100               	movlb	0	; () banked
  3448  002932  6FE4               	movwf	CreateMessageST7540@dataLenUC& (0+255),b
  3449  002934  0E37               	movlw	low STR_1
  3450  002936  0100               	movlb	0	; () banked
  3451  002938  6FE5               	movwf	CreateMessageST7540@dataBuf& (0+255),b
  3452  00293A  0E06               	movlw	high STR_1
  3453  00293C  0100               	movlb	0	; () banked
  3454  00293E  6FE6               	movwf	(CreateMessageST7540@dataBuf+1)& (0+255),b
  3455  002940  EC94  F00B         	call	_CreateMessageST7540	;wreg free
  3456                           
  3457                           ;main.c: 715: StartTransmitST7540();
  3458  002944  EC57  F016         	call	_StartTransmitST7540	;wreg free
  3459                           
  3460                           ;main.c: 716: ISC_Transmit_Packet_Ready = 0;
  3461  002948  0E00               	movlw	0
  3462  00294A  0100               	movlb	0	; () banked
  3463  00294C  6FAE               	movwf	_ISC_Transmit_Packet_Ready& (0+255),b
  3464  00294E  0012               	return	
  3465  002950                     __end_of_Transmit_BLAST_Command_Packet:
  3466                           	opt stack 0
  3467                           tblptru	equ	0xFF8
  3468                           tblptrh	equ	0xFF7
  3469                           tblptrl	equ	0xFF6
  3470                           tablat	equ	0xFF5
  3471                           prodh	equ	0xFF4
  3472                           prodl	equ	0xFF3
  3473                           postinc0	equ	0xFEE
  3474                           wreg	equ	0xFE8
  3475                           indf1	equ	0xFE7
  3476                           postdec1	equ	0xFE5
  3477                           fsr1h	equ	0xFE2
  3478                           fsr1l	equ	0xFE1
  3479                           indf2	equ	0xFDF
  3480                           fsr2h	equ	0xFDA
  3481                           fsr2l	equ	0xFD9
  3482                           status	equ	0xFD8
  3483                           
  3484 ;; *************** function _TransmitBusyST7540 *****************
  3485 ;; Defined at:
  3486 ;;		line 250 in file "Released IBC-1 Code - 03-06-2016/ST7540.c"
  3487 ;; Parameters:    Size  Location     Type
  3488 ;;		None
  3489 ;; Auto vars:     Size  Location     Type
  3490 ;;		None
  3491 ;; Return value:  Size  Location     Type
  3492 ;;                  1    wreg      unsigned char 
  3493 ;; Registers used:
  3494 ;;		wreg, status,2, status,0
  3495 ;; Tracked objects:
  3496 ;;		On entry : 0/0
  3497 ;;		On exit  : 0/0
  3498 ;;		Unchanged: 0/0
  3499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3500 ;;      Params:         0       0       0       0       0       0       0
  3501 ;;      Locals:         0       0       0       0       0       0       0
  3502 ;;      Temps:          0       0       0       0       0       0       0
  3503 ;;      Totals:         0       0       0       0       0       0       0
  3504 ;;Total ram usage:        0 bytes
  3505 ;; Hardware stack levels used:    1
  3506 ;; Hardware stack levels required when called:    5
  3507 ;; This function calls:
  3508 ;;		Nothing
  3509 ;; This function is called by:
  3510 ;;		_main
  3511 ;;		_Transmit_BLAST_Command_Packet
  3512 ;; This function uses a non-reentrant model
  3513 ;;
  3514                           
  3515                           	psect	text15
  3516  002E12                     __ptext15:
  3517                           	opt stack 0
  3518  002E12                     _TransmitBusyST7540:
  3519                           	opt stack 24
  3520                           
  3521                           ;ST7540.c: 251: return (flagST7540 & 1);
  3522                           
  3523                           ;incstack = 0
  3524  002E12  5059               	movf	_flagST7540,w,c
  3525  002E14  0B01               	andlw	1
  3526  002E16  0012               	return	
  3527  002E18                     __end_of_TransmitBusyST7540:
  3528                           	opt stack 0
  3529                           tblptru	equ	0xFF8
  3530                           tblptrh	equ	0xFF7
  3531                           tblptrl	equ	0xFF6
  3532                           tablat	equ	0xFF5
  3533                           prodh	equ	0xFF4
  3534                           prodl	equ	0xFF3
  3535                           postinc0	equ	0xFEE
  3536                           wreg	equ	0xFE8
  3537                           indf1	equ	0xFE7
  3538                           postdec1	equ	0xFE5
  3539                           fsr1h	equ	0xFE2
  3540                           fsr1l	equ	0xFE1
  3541                           indf2	equ	0xFDF
  3542                           fsr2h	equ	0xFDA
  3543                           fsr2l	equ	0xFD9
  3544                           status	equ	0xFD8
  3545                           
  3546 ;; *************** function _StartTransmitST7540 *****************
  3547 ;; Defined at:
  3548 ;;		line 238 in file "Released IBC-1 Code - 03-06-2016/ST7540.c"
  3549 ;; Parameters:    Size  Location     Type
  3550 ;;		None
  3551 ;; Auto vars:     Size  Location     Type
  3552 ;;  discardUC       1    0[BANK0 ] unsigned char 
  3553 ;; Return value:  Size  Location     Type
  3554 ;;                  1    wreg      void 
  3555 ;; Registers used:
  3556 ;;		wreg, status,2, status,0
  3557 ;; Tracked objects:
  3558 ;;		On entry : 0/0
  3559 ;;		On exit  : 0/0
  3560 ;;		Unchanged: 0/0
  3561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3562 ;;      Params:         0       0       0       0       0       0       0
  3563 ;;      Locals:         0       1       0       0       0       0       0
  3564 ;;      Temps:          0       0       0       0       0       0       0
  3565 ;;      Totals:         0       1       0       0       0       0       0
  3566 ;;Total ram usage:        1 bytes
  3567 ;; Hardware stack levels used:    1
  3568 ;; Hardware stack levels required when called:    5
  3569 ;; This function calls:
  3570 ;;		Nothing
  3571 ;; This function is called by:
  3572 ;;		_main
  3573 ;;		_Transmit_BLAST_Command_Packet
  3574 ;; This function uses a non-reentrant model
  3575 ;;
  3576                           
  3577                           	psect	text16
  3578  002CAE                     __ptext16:
  3579                           	opt stack 0
  3580  002CAE                     _StartTransmitST7540:
  3581                           	opt stack 24
  3582                           
  3583                           ;ST7540.c: 239: unsigned char discardUC;
  3584                           ;ST7540.c: 241: flagST7540 |= 1;
  3585                           
  3586                           ;incstack = 0
  3587  002CAE  8059               	bsf	_flagST7540,0,c
  3588                           
  3589                           ;ST7540.c: 242: LATCbits.LATC5 = 0;
  3590  002CB0  9A8B               	bcf	3979,5,c	;volatile
  3591  002CB2                     l110:
  3592  002CB2  B281               	btfsc	3969,1,c	;volatile
  3593  002CB4  D7FE               	goto	l110
  3594                           
  3595                           ;ST7540.c: 244: SSP2CON1bits.SSPEN = 1;
  3596  002CB6  8A6C               	bsf	3948,5,c	;volatile
  3597                           
  3598                           ;ST7540.c: 245: discardUC = SSP1BUF;
  3599  002CB8  CFC9 F0C2          	movff	4041,StartTransmitST7540@discardUC	;volatile
  3600                           
  3601                           ;ST7540.c: 246: SSP2BUF = bufferTXST7540UCA[0];
  3602  002CBC  C150  FF6F         	movff	_bufferTXST7540UCA,3951	;volatile
  3603                           
  3604                           ;ST7540.c: 247: bufferTXNextUCA = 1;
  3605  002CC0  0E01               	movlw	1
  3606  002CC2  6E58               	movwf	_bufferTXNextUCA,c
  3607  002CC4  0012               	return		;funcret
  3608  002CC6                     __end_of_StartTransmitST7540:
  3609                           	opt stack 0
  3610                           tblptru	equ	0xFF8
  3611                           tblptrh	equ	0xFF7
  3612                           tblptrl	equ	0xFF6
  3613                           tablat	equ	0xFF5
  3614                           prodh	equ	0xFF4
  3615                           prodl	equ	0xFF3
  3616                           postinc0	equ	0xFEE
  3617                           wreg	equ	0xFE8
  3618                           indf1	equ	0xFE7
  3619                           postdec1	equ	0xFE5
  3620                           fsr1h	equ	0xFE2
  3621                           fsr1l	equ	0xFE1
  3622                           indf2	equ	0xFDF
  3623                           fsr2h	equ	0xFDA
  3624                           fsr2l	equ	0xFD9
  3625                           status	equ	0xFD8
  3626                           
  3627 ;; *************** function _LineIdleST7540 *****************
  3628 ;; Defined at:
  3629 ;;		line 206 in file "Released IBC-1 Code - 03-06-2016/ST7540.c"
  3630 ;; Parameters:    Size  Location     Type
  3631 ;;		None
  3632 ;; Auto vars:     Size  Location     Type
  3633 ;;		None
  3634 ;; Return value:  Size  Location     Type
  3635 ;;                  1    wreg      unsigned char 
  3636 ;; Registers used:
  3637 ;;		wreg
  3638 ;; Tracked objects:
  3639 ;;		On entry : 0/0
  3640 ;;		On exit  : 0/0
  3641 ;;		Unchanged: 0/0
  3642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3643 ;;      Params:         0       0       0       0       0       0       0
  3644 ;;      Locals:         0       0       0       0       0       0       0
  3645 ;;      Temps:          0       0       0       0       0       0       0
  3646 ;;      Totals:         0       0       0       0       0       0       0
  3647 ;;Total ram usage:        0 bytes
  3648 ;; Hardware stack levels used:    1
  3649 ;; Hardware stack levels required when called:    5
  3650 ;; This function calls:
  3651 ;;		Nothing
  3652 ;; This function is called by:
  3653 ;;		_main
  3654 ;;		_Transmit_BLAST_Command_Packet
  3655 ;; This function uses a non-reentrant model
  3656 ;;
  3657                           
  3658                           	psect	text17
  3659  002DC6                     __ptext17:
  3660                           	opt stack 0
  3661  002DC6                     _LineIdleST7540:
  3662                           	opt stack 24
  3663                           
  3664                           ;ST7540.c: 207: if(PORTCbits.RC3)
  3665                           
  3666                           ;incstack = 0
  3667  002DC6  A682               	btfss	3970,3,c	;volatile
  3668  002DC8  D002               	goto	l4242
  3669                           
  3670                           ;ST7540.c: 208: return 0;
  3671  002DCA  0E00               	movlw	0
  3672  002DCC  0012               	return	
  3673  002DCE                     l4242:
  3674                           
  3675                           ;ST7540.c: 209: return 1;
  3676  002DCE  0E01               	movlw	1
  3677  002DD0  0012               	return	
  3678  002DD2                     __end_of_LineIdleST7540:
  3679                           	opt stack 0
  3680                           tblptru	equ	0xFF8
  3681                           tblptrh	equ	0xFF7
  3682                           tblptrl	equ	0xFF6
  3683                           tablat	equ	0xFF5
  3684                           prodh	equ	0xFF4
  3685                           prodl	equ	0xFF3
  3686                           postinc0	equ	0xFEE
  3687                           wreg	equ	0xFE8
  3688                           indf1	equ	0xFE7
  3689                           postdec1	equ	0xFE5
  3690                           fsr1h	equ	0xFE2
  3691                           fsr1l	equ	0xFE1
  3692                           indf2	equ	0xFDF
  3693                           fsr2h	equ	0xFDA
  3694                           fsr2l	equ	0xFD9
  3695                           status	equ	0xFD8
  3696                           
  3697 ;; *************** function _StopPreArmedTimer *****************
  3698 ;; Defined at:
  3699 ;;		line 899 in file "Released IBC-1 Code - 03-06-2016/main.c"
  3700 ;; Parameters:    Size  Location     Type
  3701 ;;		None
  3702 ;; Auto vars:     Size  Location     Type
  3703 ;;		None
  3704 ;; Return value:  Size  Location     Type
  3705 ;;                  1    wreg      void 
  3706 ;; Registers used:
  3707 ;;		wreg, status,2
  3708 ;; Tracked objects:
  3709 ;;		On entry : 0/0
  3710 ;;		On exit  : 0/0
  3711 ;;		Unchanged: 0/0
  3712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3713 ;;      Params:         0       0       0       0       0       0       0
  3714 ;;      Locals:         0       0       0       0       0       0       0
  3715 ;;      Temps:          0       0       0       0       0       0       0
  3716 ;;      Totals:         0       0       0       0       0       0       0
  3717 ;;Total ram usage:        0 bytes
  3718 ;; Hardware stack levels used:    1
  3719 ;; Hardware stack levels required when called:    5
  3720 ;; This function calls:
  3721 ;;		Nothing
  3722 ;; This function is called by:
  3723 ;;		_main
  3724 ;; This function uses a non-reentrant model
  3725 ;;
  3726                           
  3727                           	psect	text18
  3728  002CDE                     __ptext18:
  3729                           	opt stack 0
  3730  002CDE                     _StopPreArmedTimer:
  3731                           	opt stack 25
  3732                           
  3733                           ;main.c: 900: PATEnabled = 0;
  3734                           
  3735                           ;incstack = 0
  3736  002CDE  0E00               	movlw	0
  3737  002CE0  6E4F               	movwf	_PATEnabled,c
  3738                           
  3739                           ;main.c: 901: HighSpeedTickPAUIG = 0;
  3740  002CE2  0E00               	movlw	0
  3741  002CE4  0100               	movlb	0	; () banked
  3742  002CE6  6F7D               	movwf	(_HighSpeedTickPAUIG+1)& (0+255),b
  3743  002CE8  0E00               	movlw	0
  3744  002CEA  6F7C               	movwf	_HighSpeedTickPAUIG& (0+255),b
  3745                           
  3746                           ;main.c: 902: LowSpeedTickPATCG = 0;
  3747  002CEC  0E00               	movlw	0
  3748  002CEE  6E4A               	movwf	_LowSpeedTickPATCG,c
  3749                           
  3750                           ; BSR set to: 0
  3751  002CF0  0012               	return		;funcret
  3752  002CF2                     __end_of_StopPreArmedTimer:
  3753                           	opt stack 0
  3754                           tblptru	equ	0xFF8
  3755                           tblptrh	equ	0xFF7
  3756                           tblptrl	equ	0xFF6
  3757                           tablat	equ	0xFF5
  3758                           prodh	equ	0xFF4
  3759                           prodl	equ	0xFF3
  3760                           postinc0	equ	0xFEE
  3761                           wreg	equ	0xFE8
  3762                           indf1	equ	0xFE7
  3763                           postdec1	equ	0xFE5
  3764                           fsr1h	equ	0xFE2
  3765                           fsr1l	equ	0xFE1
  3766                           indf2	equ	0xFDF
  3767                           fsr2h	equ	0xFDA
  3768                           fsr2l	equ	0xFD9
  3769                           status	equ	0xFD8
  3770                           
  3771 ;; *************** function _StopPostFireTimer *****************
  3772 ;; Defined at:
  3773 ;;		line 911 in file "Released IBC-1 Code - 03-06-2016/main.c"
  3774 ;; Parameters:    Size  Location     Type
  3775 ;;		None
  3776 ;; Auto vars:     Size  Location     Type
  3777 ;;		None
  3778 ;; Return value:  Size  Location     Type
  3779 ;;                  1    wreg      void 
  3780 ;; Registers used:
  3781 ;;		wreg, status,2
  3782 ;; Tracked objects:
  3783 ;;		On entry : 0/0
  3784 ;;		On exit  : 0/0
  3785 ;;		Unchanged: 0/0
  3786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3787 ;;      Params:         0       0       0       0       0       0       0
  3788 ;;      Locals:         0       0       0       0       0       0       0
  3789 ;;      Temps:          0       0       0       0       0       0       0
  3790 ;;      Totals:         0       0       0       0       0       0       0
  3791 ;;Total ram usage:        0 bytes
  3792 ;; Hardware stack levels used:    1
  3793 ;; Hardware stack levels required when called:    5
  3794 ;; This function calls:
  3795 ;;		Nothing
  3796 ;; This function is called by:
  3797 ;;		_main
  3798 ;; This function uses a non-reentrant model
  3799 ;;
  3800                           
  3801                           	psect	text19
  3802  002CF2                     __ptext19:
  3803                           	opt stack 0
  3804  002CF2                     _StopPostFireTimer:
  3805                           	opt stack 25
  3806                           
  3807                           ;main.c: 912: PBTEnabled = 0;
  3808                           
  3809                           ; BSR set to: 0
  3810                           ;incstack = 0
  3811  002CF2  0E00               	movlw	0
  3812  002CF4  6E50               	movwf	_PBTEnabled,c
  3813                           
  3814                           ;main.c: 913: HighSpeedTickUIG = 0;
  3815  002CF6  0E00               	movlw	0
  3816  002CF8  0100               	movlb	0	; () banked
  3817  002CFA  6F81               	movwf	(_HighSpeedTickUIG+1)& (0+255),b
  3818  002CFC  0E00               	movlw	0
  3819  002CFE  6F80               	movwf	_HighSpeedTickUIG& (0+255),b
  3820                           
  3821                           ;main.c: 914: LowSpeedTickPBTCG = 0;
  3822  002D00  0E00               	movlw	0
  3823  002D02  6E4B               	movwf	_LowSpeedTickPBTCG,c
  3824                           
  3825                           ; BSR set to: 0
  3826  002D04  0012               	return		;funcret
  3827  002D06                     __end_of_StopPostFireTimer:
  3828                           	opt stack 0
  3829                           tblptru	equ	0xFF8
  3830                           tblptrh	equ	0xFF7
  3831                           tblptrl	equ	0xFF6
  3832                           tablat	equ	0xFF5
  3833                           prodh	equ	0xFF4
  3834                           prodl	equ	0xFF3
  3835                           postinc0	equ	0xFEE
  3836                           wreg	equ	0xFE8
  3837                           indf1	equ	0xFE7
  3838                           postdec1	equ	0xFE5
  3839                           fsr1h	equ	0xFE2
  3840                           fsr1l	equ	0xFE1
  3841                           indf2	equ	0xFDF
  3842                           fsr2h	equ	0xFDA
  3843                           fsr2l	equ	0xFD9
  3844                           status	equ	0xFD8
  3845                           
  3846 ;; *************** function _StartPreArmedTimer *****************
  3847 ;; Defined at:
  3848 ;;		line 893 in file "Released IBC-1 Code - 03-06-2016/main.c"
  3849 ;; Parameters:    Size  Location     Type
  3850 ;;		None
  3851 ;; Auto vars:     Size  Location     Type
  3852 ;;		None
  3853 ;; Return value:  Size  Location     Type
  3854 ;;                  1    wreg      void 
  3855 ;; Registers used:
  3856 ;;		wreg, status,2
  3857 ;; Tracked objects:
  3858 ;;		On entry : 0/0
  3859 ;;		On exit  : 0/0
  3860 ;;		Unchanged: 0/0
  3861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3862 ;;      Params:         0       0       0       0       0       0       0
  3863 ;;      Locals:         0       0       0       0       0       0       0
  3864 ;;      Temps:          0       0       0       0       0       0       0
  3865 ;;      Totals:         0       0       0       0       0       0       0
  3866 ;;Total ram usage:        0 bytes
  3867 ;; Hardware stack levels used:    1
  3868 ;; Hardware stack levels required when called:    5
  3869 ;; This function calls:
  3870 ;;		Nothing
  3871 ;; This function is called by:
  3872 ;;		_main
  3873 ;; This function uses a non-reentrant model
  3874 ;;
  3875                           
  3876                           	psect	text20
  3877  002D06                     __ptext20:
  3878                           	opt stack 0
  3879  002D06                     _StartPreArmedTimer:
  3880                           	opt stack 25
  3881                           
  3882                           ;main.c: 894: PATEnabled = 1;
  3883                           
  3884                           ; BSR set to: 0
  3885                           ;incstack = 0
  3886  002D06  0E01               	movlw	1
  3887  002D08  6E4F               	movwf	_PATEnabled,c
  3888                           
  3889                           ;main.c: 895: HighSpeedTickPAUIG = 0;
  3890  002D0A  0E00               	movlw	0
  3891  002D0C  0100               	movlb	0	; () banked
  3892  002D0E  6F7D               	movwf	(_HighSpeedTickPAUIG+1)& (0+255),b
  3893  002D10  0E00               	movlw	0
  3894  002D12  6F7C               	movwf	_HighSpeedTickPAUIG& (0+255),b
  3895                           
  3896                           ;main.c: 896: LowSpeedTickPATCG = 0;
  3897  002D14  0E00               	movlw	0
  3898  002D16  6E4A               	movwf	_LowSpeedTickPATCG,c
  3899                           
  3900                           ; BSR set to: 0
  3901  002D18  0012               	return		;funcret
  3902  002D1A                     __end_of_StartPreArmedTimer:
  3903                           	opt stack 0
  3904                           tblptru	equ	0xFF8
  3905                           tblptrh	equ	0xFF7
  3906                           tblptrl	equ	0xFF6
  3907                           tablat	equ	0xFF5
  3908                           prodh	equ	0xFF4
  3909                           prodl	equ	0xFF3
  3910                           postinc0	equ	0xFEE
  3911                           wreg	equ	0xFE8
  3912                           indf1	equ	0xFE7
  3913                           postdec1	equ	0xFE5
  3914                           fsr1h	equ	0xFE2
  3915                           fsr1l	equ	0xFE1
  3916                           indf2	equ	0xFDF
  3917                           fsr2h	equ	0xFDA
  3918                           fsr2l	equ	0xFD9
  3919                           status	equ	0xFD8
  3920                           
  3921 ;; *************** function _Receive_Pi_Packet *****************
  3922 ;; Defined at:
  3923 ;;		line 607 in file "Released IBC-1 Code - 03-06-2016/main.c"
  3924 ;; Parameters:    Size  Location     Type
  3925 ;;		None
  3926 ;; Auto vars:     Size  Location     Type
  3927 ;;  i               2   47[BANK0 ] int 
  3928 ;;  BroadcastUC     1   49[BANK0 ] unsigned char 
  3929 ;; Return value:  Size  Location     Type
  3930 ;;                  1    wreg      void 
  3931 ;; Registers used:
  3932 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3933 ;; Tracked objects:
  3934 ;;		On entry : 0/0
  3935 ;;		On exit  : 0/0
  3936 ;;		Unchanged: 0/0
  3937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3938 ;;      Params:         0       0       0       0       0       0       0
  3939 ;;      Locals:         0       3       0       0       0       0       0
  3940 ;;      Temps:          0       3       0       0       0       0       0
  3941 ;;      Totals:         0       6       0       0       0       0       0
  3942 ;;Total ram usage:        6 bytes
  3943 ;; Hardware stack levels used:    1
  3944 ;; Hardware stack levels required when called:    8
  3945 ;; This function calls:
  3946 ;;		_CheckBroadcastPacket
  3947 ;;		_Check_ALL_ISC
  3948 ;;		_CreateMessageST7540
  3949 ;;		_PacketReadParamUART
  3950 ;; This function is called by:
  3951 ;;		_main
  3952 ;; This function uses a non-reentrant model
  3953 ;;
  3954                           
  3955                           	psect	text21
  3956  00063A                     __ptext21:
  3957                           	opt stack 0
  3958  00063A                     _Receive_Pi_Packet:
  3959                           	opt stack 22
  3960                           
  3961                           ;main.c: 609: unsigned char BroadcastUC;
  3962                           ;main.c: 612: temp = PacketReadParamUART(0);
  3963                           
  3964                           ; BSR set to: 0
  3965                           ;incstack = 0
  3966  00063A  0E00               	movlw	0
  3967  00063C  ECA8  F010         	call	_PacketReadParamUART
  3968  000640  C0D8  F0A4         	movff	?_PacketReadParamUART,_temp
  3969  000644  C0D9  F0A5         	movff	?_PacketReadParamUART+1,_temp+1
  3970                           
  3971                           ;main.c: 614: CheckBroadcastPacket(PacketReadParamUART(1));
  3972  000648  0E01               	movlw	1
  3973  00064A  ECA8  F010         	call	_PacketReadParamUART
  3974  00064E  0100               	movlb	0	; () banked
  3975  000650  51D8               	movf	?_PacketReadParamUART& (0+255),w,b
  3976  000652  ECDC  F016         	call	_CheckBroadcastPacket
  3977                           
  3978                           ;main.c: 615: switch(PacketReadParamUART(1)){
  3979  000656  D18D               	goto	l5148
  3980  000658                     l5032:
  3981                           
  3982                           ;main.c: 618: BroadcastUC = 0b00000000;
  3983  000658  0E00               	movlw	0
  3984  00065A  0100               	movlb	0	; () banked
  3985  00065C  6FF3               	movwf	Receive_Pi_Packet@BroadcastUC& (0+255),b
  3986                           
  3987                           ;main.c: 619: if (BroadcastCheckUC)
  3988  00065E  503F               	movf	_BroadcastCheckUC,w,c
  3989  000660  B4D8               	btfsc	status,2,c
  3990  000662  D002               	goto	l5036
  3991                           
  3992                           ; BSR set to: 0
  3993                           ;main.c: 620: BroadcastUC |= 0b10000000;
  3994  000664  0100               	movlb	0	; () banked
  3995  000666  8FF3               	bsf	Receive_Pi_Packet@BroadcastUC& (0+255),7,b
  3996  000668                     l5036:
  3997                           
  3998                           ; BSR set to: 0
  3999                           ;main.c: 621: CreateMessageST7540(0x0010, PacketReadParamUART(2), BroadcastUC, 0, "");
  4000  000668  0E00               	movlw	0
  4001  00066A  0100               	movlb	0	; () banked
  4002  00066C  6FE0               	movwf	(CreateMessageST7540@packetSourceUS+1)& (0+255),b
  4003  00066E  0E10               	movlw	16
  4004  000670  6FDF               	movwf	CreateMessageST7540@packetSourceUS& (0+255),b
  4005  000672  0E02               	movlw	2
  4006  000674  ECA8  F010         	call	_PacketReadParamUART
  4007  000678  C0D8  F0E1         	movff	?_PacketReadParamUART,CreateMessageST7540@packetDestUS
  4008  00067C  C0D9  F0E2         	movff	?_PacketReadParamUART+1,CreateMessageST7540@packetDestUS+1
  4009  000680  C0F3  F0E3         	movff	Receive_Pi_Packet@BroadcastUC,CreateMessageST7540@commandUC
  4010  000684  0E00               	movlw	0
  4011  000686  0100               	movlb	0	; () banked
  4012  000688  6FE4               	movwf	CreateMessageST7540@dataLenUC& (0+255),b
  4013  00068A  0E37               	movlw	low STR_1
  4014  00068C  0100               	movlb	0	; () banked
  4015  00068E  6FE5               	movwf	CreateMessageST7540@dataBuf& (0+255),b
  4016  000690  0E06               	movlw	high STR_1
  4017  000692  0100               	movlb	0	; () banked
  4018  000694  6FE6               	movwf	(CreateMessageST7540@dataBuf+1)& (0+255),b
  4019  000696  EC94  F00B         	call	_CreateMessageST7540	;wreg free
  4020                           
  4021                           ;main.c: 622: ISC_Transmit_Packet_Ready = 1;
  4022  00069A  0E01               	movlw	1
  4023  00069C  0100               	movlb	0	; () banked
  4024  00069E  6FAE               	movwf	_ISC_Transmit_Packet_Ready& (0+255),b
  4025                           
  4026                           ; BSR set to: 0
  4027                           ;main.c: 623: return;
  4028  0006A0  0012               	return	
  4029  0006A2                     l5042:
  4030                           
  4031                           ; BSR set to: 0
  4032                           ;main.c: 626: BroadcastUC = 0b01000000;
  4033  0006A2  0E40               	movlw	64
  4034  0006A4  0100               	movlb	0	; () banked
  4035  0006A6  6FF3               	movwf	Receive_Pi_Packet@BroadcastUC& (0+255),b
  4036                           
  4037                           ;main.c: 627: if (BroadcastCheckUC)
  4038  0006A8  503F               	movf	_BroadcastCheckUC,w,c
  4039  0006AA  B4D8               	btfsc	status,2,c
  4040  0006AC  D002               	goto	l5046
  4041                           
  4042                           ; BSR set to: 0
  4043                           ;main.c: 628: BroadcastUC |= 0b10000000;
  4044  0006AE  0100               	movlb	0	; () banked
  4045  0006B0  8FF3               	bsf	Receive_Pi_Packet@BroadcastUC& (0+255),7,b
  4046  0006B2                     l5046:
  4047                           
  4048                           ; BSR set to: 0
  4049                           ;main.c: 629: CreateMessageST7540(0x0010, PacketReadParamUART(2), BroadcastUC, 0, "");
  4050  0006B2  0E00               	movlw	0
  4051  0006B4  0100               	movlb	0	; () banked
  4052  0006B6  6FE0               	movwf	(CreateMessageST7540@packetSourceUS+1)& (0+255),b
  4053  0006B8  0E10               	movlw	16
  4054  0006BA  6FDF               	movwf	CreateMessageST7540@packetSourceUS& (0+255),b
  4055  0006BC  0E02               	movlw	2
  4056  0006BE  ECA8  F010         	call	_PacketReadParamUART
  4057  0006C2  C0D8  F0E1         	movff	?_PacketReadParamUART,CreateMessageST7540@packetDestUS
  4058  0006C6  C0D9  F0E2         	movff	?_PacketReadParamUART+1,CreateMessageST7540@packetDestUS+1
  4059  0006CA  C0F3  F0E3         	movff	Receive_Pi_Packet@BroadcastUC,CreateMessageST7540@commandUC
  4060  0006CE  0E00               	movlw	0
  4061  0006D0  0100               	movlb	0	; () banked
  4062  0006D2  6FE4               	movwf	CreateMessageST7540@dataLenUC& (0+255),b
  4063  0006D4  0E37               	movlw	low STR_1
  4064  0006D6  0100               	movlb	0	; () banked
  4065  0006D8  6FE5               	movwf	CreateMessageST7540@dataBuf& (0+255),b
  4066  0006DA  0E06               	movlw	high STR_1
  4067  0006DC  0100               	movlb	0	; () banked
  4068  0006DE  6FE6               	movwf	(CreateMessageST7540@dataBuf+1)& (0+255),b
  4069  0006E0  EC94  F00B         	call	_CreateMessageST7540	;wreg free
  4070                           
  4071                           ;main.c: 630: ISC_Transmit_Packet_Ready = 1;
  4072  0006E4  0E01               	movlw	1
  4073  0006E6  0100               	movlb	0	; () banked
  4074  0006E8  6FAE               	movwf	_ISC_Transmit_Packet_Ready& (0+255),b
  4075                           
  4076                           ; BSR set to: 0
  4077                           ;main.c: 631: return;
  4078  0006EA  0012               	return	
  4079  0006EC                     l5052:
  4080                           
  4081                           ; BSR set to: 0
  4082                           ;main.c: 634: BroadcastUC = 0b00000111;
  4083  0006EC  0E07               	movlw	7
  4084  0006EE  0100               	movlb	0	; () banked
  4085  0006F0  6FF3               	movwf	Receive_Pi_Packet@BroadcastUC& (0+255),b
  4086                           
  4087                           ;main.c: 635: if (BroadcastCheckUC)
  4088  0006F2  503F               	movf	_BroadcastCheckUC,w,c
  4089  0006F4  B4D8               	btfsc	status,2,c
  4090  0006F6  D002               	goto	l5056
  4091                           
  4092                           ; BSR set to: 0
  4093                           ;main.c: 636: BroadcastUC |= 0b10000000;
  4094  0006F8  0100               	movlb	0	; () banked
  4095  0006FA  8FF3               	bsf	Receive_Pi_Packet@BroadcastUC& (0+255),7,b
  4096  0006FC                     l5056:
  4097                           
  4098                           ; BSR set to: 0
  4099                           ;main.c: 637: CreateMessageST7540(0x0010, PacketReadParamUART(2), BroadcastUC, 0, "");
  4100  0006FC  0E00               	movlw	0
  4101  0006FE  0100               	movlb	0	; () banked
  4102  000700  6FE0               	movwf	(CreateMessageST7540@packetSourceUS+1)& (0+255),b
  4103  000702  0E10               	movlw	16
  4104  000704  6FDF               	movwf	CreateMessageST7540@packetSourceUS& (0+255),b
  4105  000706  0E02               	movlw	2
  4106  000708  ECA8  F010         	call	_PacketReadParamUART
  4107  00070C  C0D8  F0E1         	movff	?_PacketReadParamUART,CreateMessageST7540@packetDestUS
  4108  000710  C0D9  F0E2         	movff	?_PacketReadParamUART+1,CreateMessageST7540@packetDestUS+1
  4109  000714  C0F3  F0E3         	movff	Receive_Pi_Packet@BroadcastUC,CreateMessageST7540@commandUC
  4110  000718  0E00               	movlw	0
  4111  00071A  0100               	movlb	0	; () banked
  4112  00071C  6FE4               	movwf	CreateMessageST7540@dataLenUC& (0+255),b
  4113  00071E  0E37               	movlw	low STR_1
  4114  000720  0100               	movlb	0	; () banked
  4115  000722  6FE5               	movwf	CreateMessageST7540@dataBuf& (0+255),b
  4116  000724  0E06               	movlw	high STR_1
  4117  000726  0100               	movlb	0	; () banked
  4118  000728  6FE6               	movwf	(CreateMessageST7540@dataBuf+1)& (0+255),b
  4119  00072A  EC94  F00B         	call	_CreateMessageST7540	;wreg free
  4120                           
  4121                           ;main.c: 638: ISC_Transmit_Packet_Ready = 1;
  4122  00072E  0E01               	movlw	1
  4123  000730  0100               	movlb	0	; () banked
  4124  000732  6FAE               	movwf	_ISC_Transmit_Packet_Ready& (0+255),b
  4125                           
  4126                           ; BSR set to: 0
  4127                           ;main.c: 639: return;
  4128  000734  0012               	return	
  4129  000736                     l5062:
  4130                           
  4131                           ; BSR set to: 0
  4132                           ;main.c: 642: Check_ALL_ISC();
  4133  000736  EC88  F015         	call	_Check_ALL_ISC	;wreg free
  4134                           
  4135                           ;main.c: 643: return;
  4136  00073A  0012               	return	
  4137  00073C                     l5066:
  4138                           
  4139                           ;main.c: 646: BroadcastUC = 0b00101001;
  4140  00073C  0E29               	movlw	41
  4141  00073E  0100               	movlb	0	; () banked
  4142  000740  6FF3               	movwf	Receive_Pi_Packet@BroadcastUC& (0+255),b
  4143                           
  4144                           ;main.c: 647: if (BroadcastCheckUC)
  4145  000742  503F               	movf	_BroadcastCheckUC,w,c
  4146  000744  B4D8               	btfsc	status,2,c
  4147  000746  D002               	goto	l5070
  4148                           
  4149                           ; BSR set to: 0
  4150                           ;main.c: 648: BroadcastUC |= 0b10000000;
  4151  000748  0100               	movlb	0	; () banked
  4152  00074A  8FF3               	bsf	Receive_Pi_Packet@BroadcastUC& (0+255),7,b
  4153  00074C                     l5070:
  4154                           
  4155                           ; BSR set to: 0
  4156                           ;main.c: 649: CreateMessageST7540(0x0010, PacketReadParamUART(2), BroadcastUC, 0, "");
  4157  00074C  0E00               	movlw	0
  4158  00074E  0100               	movlb	0	; () banked
  4159  000750  6FE0               	movwf	(CreateMessageST7540@packetSourceUS+1)& (0+255),b
  4160  000752  0E10               	movlw	16
  4161  000754  6FDF               	movwf	CreateMessageST7540@packetSourceUS& (0+255),b
  4162  000756  0E02               	movlw	2
  4163  000758  ECA8  F010         	call	_PacketReadParamUART
  4164  00075C  C0D8  F0E1         	movff	?_PacketReadParamUART,CreateMessageST7540@packetDestUS
  4165  000760  C0D9  F0E2         	movff	?_PacketReadParamUART+1,CreateMessageST7540@packetDestUS+1
  4166  000764  C0F3  F0E3         	movff	Receive_Pi_Packet@BroadcastUC,CreateMessageST7540@commandUC
  4167  000768  0E00               	movlw	0
  4168  00076A  0100               	movlb	0	; () banked
  4169  00076C  6FE4               	movwf	CreateMessageST7540@dataLenUC& (0+255),b
  4170  00076E  0E37               	movlw	low STR_1
  4171  000770  0100               	movlb	0	; () banked
  4172  000772  6FE5               	movwf	CreateMessageST7540@dataBuf& (0+255),b
  4173  000774  0E06               	movlw	high STR_1
  4174  000776  0100               	movlb	0	; () banked
  4175  000778  6FE6               	movwf	(CreateMessageST7540@dataBuf+1)& (0+255),b
  4176  00077A  EC94  F00B         	call	_CreateMessageST7540	;wreg free
  4177                           
  4178                           ;main.c: 650: ISC_Transmit_Packet_Ready = 1;
  4179  00077E  0E01               	movlw	1
  4180  000780  0100               	movlb	0	; () banked
  4181  000782  6FAE               	movwf	_ISC_Transmit_Packet_Ready& (0+255),b
  4182                           
  4183                           ; BSR set to: 0
  4184                           ;main.c: 651: Discover_ISC_ModeUCG = 0;
  4185  000784  0E00               	movlw	0
  4186  000786  0100               	movlb	0	; () banked
  4187  000788  6FA9               	movwf	_Discover_ISC_ModeUCG& (0+255),b
  4188                           
  4189                           ; BSR set to: 0
  4190                           ;main.c: 652: CF_STAUTS_TimerUIG = 0;
  4191  00078A  0E00               	movlw	0
  4192  00078C  0100               	movlb	0	; () banked
  4193  00078E  6F75               	movwf	(_CF_STAUTS_TimerUIG+1)& (0+255),b
  4194  000790  0E00               	movlw	0
  4195  000792  6F74               	movwf	_CF_STAUTS_TimerUIG& (0+255),b
  4196                           
  4197                           ; BSR set to: 0
  4198                           ;main.c: 653: return;
  4199  000794  0012               	return	
  4200  000796                     l5080:
  4201                           
  4202                           ; BSR set to: 0
  4203                           ;main.c: 656: BroadcastUC = 0b00101001;
  4204  000796  0E29               	movlw	41
  4205  000798  0100               	movlb	0	; () banked
  4206  00079A  6FF3               	movwf	Receive_Pi_Packet@BroadcastUC& (0+255),b
  4207                           
  4208                           ;main.c: 657: if (BroadcastCheckUC)
  4209  00079C  503F               	movf	_BroadcastCheckUC,w,c
  4210  00079E  B4D8               	btfsc	status,2,c
  4211  0007A0  D002               	goto	l5084
  4212                           
  4213                           ; BSR set to: 0
  4214                           ;main.c: 658: BroadcastUC |= 0b10000000;
  4215  0007A2  0100               	movlb	0	; () banked
  4216  0007A4  8FF3               	bsf	Receive_Pi_Packet@BroadcastUC& (0+255),7,b
  4217  0007A6                     l5084:
  4218                           
  4219                           ; BSR set to: 0
  4220                           ;main.c: 659: CreateMessageST7540(0x0010, PacketReadParamUART(2), BroadcastUC, 0, "");
  4221  0007A6  0E00               	movlw	0
  4222  0007A8  0100               	movlb	0	; () banked
  4223  0007AA  6FE0               	movwf	(CreateMessageST7540@packetSourceUS+1)& (0+255),b
  4224  0007AC  0E10               	movlw	16
  4225  0007AE  6FDF               	movwf	CreateMessageST7540@packetSourceUS& (0+255),b
  4226  0007B0  0E02               	movlw	2
  4227  0007B2  ECA8  F010         	call	_PacketReadParamUART
  4228  0007B6  C0D8  F0E1         	movff	?_PacketReadParamUART,CreateMessageST7540@packetDestUS
  4229  0007BA  C0D9  F0E2         	movff	?_PacketReadParamUART+1,CreateMessageST7540@packetDestUS+1
  4230  0007BE  C0F3  F0E3         	movff	Receive_Pi_Packet@BroadcastUC,CreateMessageST7540@commandUC
  4231  0007C2  0E00               	movlw	0
  4232  0007C4  0100               	movlb	0	; () banked
  4233  0007C6  6FE4               	movwf	CreateMessageST7540@dataLenUC& (0+255),b
  4234  0007C8  0E37               	movlw	low STR_1
  4235  0007CA  0100               	movlb	0	; () banked
  4236  0007CC  6FE5               	movwf	CreateMessageST7540@dataBuf& (0+255),b
  4237  0007CE  0E06               	movlw	high STR_1
  4238  0007D0  0100               	movlb	0	; () banked
  4239  0007D2  6FE6               	movwf	(CreateMessageST7540@dataBuf+1)& (0+255),b
  4240  0007D4  EC94  F00B         	call	_CreateMessageST7540	;wreg free
  4241                           
  4242                           ;main.c: 660: ISC_Transmit_Packet_Ready = 1;
  4243  0007D8  0E01               	movlw	1
  4244  0007DA  0100               	movlb	0	; () banked
  4245  0007DC  6FAE               	movwf	_ISC_Transmit_Packet_Ready& (0+255),b
  4246                           
  4247                           ; BSR set to: 0
  4248                           ;main.c: 661: return;
  4249  0007DE  0012               	return	
  4250  0007E0                     l5090:
  4251                           
  4252                           ; BSR set to: 0
  4253                           ;main.c: 664: BroadcastUC = 0b00110001;
  4254  0007E0  0E31               	movlw	49
  4255  0007E2  0100               	movlb	0	; () banked
  4256  0007E4  6FF3               	movwf	Receive_Pi_Packet@BroadcastUC& (0+255),b
  4257                           
  4258                           ;main.c: 665: if (BroadcastCheckUC)
  4259  0007E6  503F               	movf	_BroadcastCheckUC,w,c
  4260  0007E8  B4D8               	btfsc	status,2,c
  4261  0007EA  D002               	goto	l5094
  4262                           
  4263                           ; BSR set to: 0
  4264                           ;main.c: 666: BroadcastUC |= 0b10000000;
  4265  0007EC  0100               	movlb	0	; () banked
  4266  0007EE  8FF3               	bsf	Receive_Pi_Packet@BroadcastUC& (0+255),7,b
  4267  0007F0                     l5094:
  4268                           
  4269                           ; BSR set to: 0
  4270                           ;main.c: 667: CreateMessageST7540(0x0010, PacketReadParamUART(2), BroadcastUC, 0, "");
  4271  0007F0  0E00               	movlw	0
  4272  0007F2  0100               	movlb	0	; () banked
  4273  0007F4  6FE0               	movwf	(CreateMessageST7540@packetSourceUS+1)& (0+255),b
  4274  0007F6  0E10               	movlw	16
  4275  0007F8  6FDF               	movwf	CreateMessageST7540@packetSourceUS& (0+255),b
  4276  0007FA  0E02               	movlw	2
  4277  0007FC  ECA8  F010         	call	_PacketReadParamUART
  4278  000800  C0D8  F0E1         	movff	?_PacketReadParamUART,CreateMessageST7540@packetDestUS
  4279  000804  C0D9  F0E2         	movff	?_PacketReadParamUART+1,CreateMessageST7540@packetDestUS+1
  4280  000808  C0F3  F0E3         	movff	Receive_Pi_Packet@BroadcastUC,CreateMessageST7540@commandUC
  4281  00080C  0E00               	movlw	0
  4282  00080E  0100               	movlb	0	; () banked
  4283  000810  6FE4               	movwf	CreateMessageST7540@dataLenUC& (0+255),b
  4284  000812  0E37               	movlw	low STR_1
  4285  000814  0100               	movlb	0	; () banked
  4286  000816  6FE5               	movwf	CreateMessageST7540@dataBuf& (0+255),b
  4287  000818  0E06               	movlw	high STR_1
  4288  00081A  0100               	movlb	0	; () banked
  4289  00081C  6FE6               	movwf	(CreateMessageST7540@dataBuf+1)& (0+255),b
  4290  00081E  EC94  F00B         	call	_CreateMessageST7540	;wreg free
  4291                           
  4292                           ;main.c: 668: ISC_Transmit_Packet_Ready = 1;
  4293  000822  0E01               	movlw	1
  4294  000824  0100               	movlb	0	; () banked
  4295  000826  6FAE               	movwf	_ISC_Transmit_Packet_Ready& (0+255),b
  4296                           
  4297                           ; BSR set to: 0
  4298                           ;main.c: 669: return;
  4299  000828  0012               	return	
  4300  00082A                     l5100:
  4301                           
  4302                           ; BSR set to: 0
  4303                           ;main.c: 672: BroadcastUC = 0b00110000;
  4304  00082A  0E30               	movlw	48
  4305  00082C  0100               	movlb	0	; () banked
  4306  00082E  6FF3               	movwf	Receive_Pi_Packet@BroadcastUC& (0+255),b
  4307                           
  4308                           ;main.c: 673: if (BroadcastCheckUC)
  4309  000830  503F               	movf	_BroadcastCheckUC,w,c
  4310  000832  B4D8               	btfsc	status,2,c
  4311  000834  D002               	goto	l5104
  4312                           
  4313                           ; BSR set to: 0
  4314                           ;main.c: 674: BroadcastUC |= 0b10000000;
  4315  000836  0100               	movlb	0	; () banked
  4316  000838  8FF3               	bsf	Receive_Pi_Packet@BroadcastUC& (0+255),7,b
  4317  00083A                     l5104:
  4318                           
  4319                           ; BSR set to: 0
  4320                           ;main.c: 675: CreateMessageST7540(0x0010, PacketReadParamUART(2), BroadcastUC, 0, "");
  4321  00083A  0E00               	movlw	0
  4322  00083C  0100               	movlb	0	; () banked
  4323  00083E  6FE0               	movwf	(CreateMessageST7540@packetSourceUS+1)& (0+255),b
  4324  000840  0E10               	movlw	16
  4325  000842  6FDF               	movwf	CreateMessageST7540@packetSourceUS& (0+255),b
  4326  000844  0E02               	movlw	2
  4327  000846  ECA8  F010         	call	_PacketReadParamUART
  4328  00084A  C0D8  F0E1         	movff	?_PacketReadParamUART,CreateMessageST7540@packetDestUS
  4329  00084E  C0D9  F0E2         	movff	?_PacketReadParamUART+1,CreateMessageST7540@packetDestUS+1
  4330  000852  C0F3  F0E3         	movff	Receive_Pi_Packet@BroadcastUC,CreateMessageST7540@commandUC
  4331  000856  0E00               	movlw	0
  4332  000858  0100               	movlb	0	; () banked
  4333  00085A  6FE4               	movwf	CreateMessageST7540@dataLenUC& (0+255),b
  4334  00085C  0E37               	movlw	low STR_1
  4335  00085E  0100               	movlb	0	; () banked
  4336  000860  6FE5               	movwf	CreateMessageST7540@dataBuf& (0+255),b
  4337  000862  0E06               	movlw	high STR_1
  4338  000864  0100               	movlb	0	; () banked
  4339  000866  6FE6               	movwf	(CreateMessageST7540@dataBuf+1)& (0+255),b
  4340  000868  EC94  F00B         	call	_CreateMessageST7540	;wreg free
  4341                           
  4342                           ;main.c: 676: ISC_Transmit_Packet_Ready = 1;
  4343  00086C  0E01               	movlw	1
  4344  00086E  0100               	movlb	0	; () banked
  4345  000870  6FAE               	movwf	_ISC_Transmit_Packet_Ready& (0+255),b
  4346                           
  4347                           ; BSR set to: 0
  4348                           ;main.c: 677: return;
  4349  000872  0012               	return	
  4350  000874                     l5110:
  4351                           
  4352                           ; BSR set to: 0
  4353                           ;main.c: 680: BroadcastUC = 0b00000110;
  4354  000874  0E06               	movlw	6
  4355  000876  0100               	movlb	0	; () banked
  4356  000878  6FF3               	movwf	Receive_Pi_Packet@BroadcastUC& (0+255),b
  4357                           
  4358                           ;main.c: 681: if (BroadcastCheckUC)
  4359  00087A  503F               	movf	_BroadcastCheckUC,w,c
  4360  00087C  B4D8               	btfsc	status,2,c
  4361  00087E  D002               	goto	l5114
  4362                           
  4363                           ; BSR set to: 0
  4364                           ;main.c: 682: BroadcastUC |= 0b10000000;
  4365  000880  0100               	movlb	0	; () banked
  4366  000882  8FF3               	bsf	Receive_Pi_Packet@BroadcastUC& (0+255),7,b
  4367  000884                     l5114:
  4368                           
  4369                           ; BSR set to: 0
  4370                           ;main.c: 683: CreateMessageST7540(0x0010, PacketReadParamUART(2), BroadcastUC, 0, "");
  4371  000884  0E00               	movlw	0
  4372  000886  0100               	movlb	0	; () banked
  4373  000888  6FE0               	movwf	(CreateMessageST7540@packetSourceUS+1)& (0+255),b
  4374  00088A  0E10               	movlw	16
  4375  00088C  6FDF               	movwf	CreateMessageST7540@packetSourceUS& (0+255),b
  4376  00088E  0E02               	movlw	2
  4377  000890  ECA8  F010         	call	_PacketReadParamUART
  4378  000894  C0D8  F0E1         	movff	?_PacketReadParamUART,CreateMessageST7540@packetDestUS
  4379  000898  C0D9  F0E2         	movff	?_PacketReadParamUART+1,CreateMessageST7540@packetDestUS+1
  4380  00089C  C0F3  F0E3         	movff	Receive_Pi_Packet@BroadcastUC,CreateMessageST7540@commandUC
  4381  0008A0  0E00               	movlw	0
  4382  0008A2  0100               	movlb	0	; () banked
  4383  0008A4  6FE4               	movwf	CreateMessageST7540@dataLenUC& (0+255),b
  4384  0008A6  0E37               	movlw	low STR_1
  4385  0008A8  0100               	movlb	0	; () banked
  4386  0008AA  6FE5               	movwf	CreateMessageST7540@dataBuf& (0+255),b
  4387  0008AC  0E06               	movlw	high STR_1
  4388  0008AE  0100               	movlb	0	; () banked
  4389  0008B0  6FE6               	movwf	(CreateMessageST7540@dataBuf+1)& (0+255),b
  4390  0008B2  EC94  F00B         	call	_CreateMessageST7540	;wreg free
  4391                           
  4392                           ;main.c: 684: ISC_Transmit_Packet_Ready = 1;
  4393  0008B6  0E01               	movlw	1
  4394  0008B8  0100               	movlb	0	; () banked
  4395  0008BA  6FAE               	movwf	_ISC_Transmit_Packet_Ready& (0+255),b
  4396                           
  4397                           ; BSR set to: 0
  4398                           ;main.c: 685: return;
  4399  0008BC  0012               	return	
  4400  0008BE                     l5120:
  4401                           
  4402                           ; BSR set to: 0
  4403                           ;main.c: 688: BroadcastUC = 0b00001101;
  4404  0008BE  0E0D               	movlw	13
  4405  0008C0  0100               	movlb	0	; () banked
  4406  0008C2  6FF3               	movwf	Receive_Pi_Packet@BroadcastUC& (0+255),b
  4407                           
  4408                           ;main.c: 689: if (BroadcastCheckUC)
  4409  0008C4  503F               	movf	_BroadcastCheckUC,w,c
  4410  0008C6  B4D8               	btfsc	status,2,c
  4411  0008C8  D002               	goto	l5124
  4412                           
  4413                           ; BSR set to: 0
  4414                           ;main.c: 690: BroadcastUC |= 0b10000000;
  4415  0008CA  0100               	movlb	0	; () banked
  4416  0008CC  8FF3               	bsf	Receive_Pi_Packet@BroadcastUC& (0+255),7,b
  4417  0008CE                     l5124:
  4418                           
  4419                           ; BSR set to: 0
  4420                           ;main.c: 691: CreateMessageST7540(0x0010, PacketReadParamUART(2), BroadcastUC, 0, "");
  4421  0008CE  0E00               	movlw	0
  4422  0008D0  0100               	movlb	0	; () banked
  4423  0008D2  6FE0               	movwf	(CreateMessageST7540@packetSourceUS+1)& (0+255),b
  4424  0008D4  0E10               	movlw	16
  4425  0008D6  6FDF               	movwf	CreateMessageST7540@packetSourceUS& (0+255),b
  4426  0008D8  0E02               	movlw	2
  4427  0008DA  ECA8  F010         	call	_PacketReadParamUART
  4428  0008DE  C0D8  F0E1         	movff	?_PacketReadParamUART,CreateMessageST7540@packetDestUS
  4429  0008E2  C0D9  F0E2         	movff	?_PacketReadParamUART+1,CreateMessageST7540@packetDestUS+1
  4430  0008E6  C0F3  F0E3         	movff	Receive_Pi_Packet@BroadcastUC,CreateMessageST7540@commandUC
  4431  0008EA  0E00               	movlw	0
  4432  0008EC  0100               	movlb	0	; () banked
  4433  0008EE  6FE4               	movwf	CreateMessageST7540@dataLenUC& (0+255),b
  4434  0008F0  0E37               	movlw	low STR_1
  4435  0008F2  0100               	movlb	0	; () banked
  4436  0008F4  6FE5               	movwf	CreateMessageST7540@dataBuf& (0+255),b
  4437  0008F6  0E06               	movlw	high STR_1
  4438  0008F8  0100               	movlb	0	; () banked
  4439  0008FA  6FE6               	movwf	(CreateMessageST7540@dataBuf+1)& (0+255),b
  4440  0008FC  EC94  F00B         	call	_CreateMessageST7540	;wreg free
  4441                           
  4442                           ;main.c: 692: ISC_Transmit_Packet_Ready = 1;
  4443  000900  0E01               	movlw	1
  4444  000902  0100               	movlb	0	; () banked
  4445  000904  6FAE               	movwf	_ISC_Transmit_Packet_Ready& (0+255),b
  4446                           
  4447                           ; BSR set to: 0
  4448                           ;main.c: 693: return;
  4449  000906  0012               	return	
  4450  000908                     l5130:
  4451                           
  4452                           ; BSR set to: 0
  4453                           ;main.c: 696: for (int i = 0; i < ISC_SN_Array_SizeUCG; i++)
  4454  000908  0E00               	movlw	0
  4455  00090A  0100               	movlb	0	; () banked
  4456  00090C  6FF2               	movwf	(Receive_Pi_Packet@i+1)& (0+255),b
  4457  00090E  0E00               	movlw	0
  4458  000910  6FF1               	movwf	Receive_Pi_Packet@i& (0+255),b
  4459  000912  D012               	goto	l5136
  4460  000914                     l5132:
  4461                           
  4462                           ; BSR set to: 0
  4463                           ;main.c: 697: ISC_SN_ArrayUIG[i] = 0;
  4464  000914  90D8               	bcf	status,0,c
  4465  000916  0100               	movlb	0	; () banked
  4466  000918  35F1               	rlcf	Receive_Pi_Packet@i& (0+255),w,b
  4467  00091A  6ED9               	movwf	fsr2l,c
  4468  00091C  0100               	movlb	0	; () banked
  4469  00091E  35F2               	rlcf	(Receive_Pi_Packet@i+1)& (0+255),w,b
  4470  000920  6EDA               	movwf	fsr2h,c
  4471  000922  0E00               	movlw	low _ISC_SN_ArrayUIG
  4472  000924  26D9               	addwf	fsr2l,f,c
  4473  000926  0E02               	movlw	high _ISC_SN_ArrayUIG
  4474  000928  22DA               	addwfc	fsr2h,f,c
  4475  00092A  0E00               	movlw	0
  4476  00092C  6EDE               	movwf	postinc2,c
  4477  00092E  0E00               	movlw	0
  4478  000930  6EDD               	movwf	postdec2,c
  4479                           
  4480                           ; BSR set to: 0
  4481  000932  0100               	movlb	0	; () banked
  4482  000934  4BF1               	infsnz	Receive_Pi_Packet@i& (0+255),f,b
  4483  000936  2BF2               	incf	(Receive_Pi_Packet@i+1)& (0+255),f,b
  4484  000938                     l5136:
  4485                           
  4486                           ; BSR set to: 0
  4487  000938  0100               	movlb	0	; () banked
  4488  00093A  51AD               	movf	_ISC_SN_Array_SizeUCG& (0+255),w,b
  4489  00093C  0100               	movlb	0	; () banked
  4490  00093E  6FEE               	movwf	??_Receive_Pi_Packet& (0+255),b
  4491  000940  6BEF               	clrf	(??_Receive_Pi_Packet+1)& (0+255),b
  4492  000942  0100               	movlb	0	; () banked
  4493  000944  51EE               	movf	??_Receive_Pi_Packet& (0+255),w,b
  4494  000946  0100               	movlb	0	; () banked
  4495  000948  5DF1               	subwf	Receive_Pi_Packet@i& (0+255),w,b
  4496  00094A  0100               	movlb	0	; () banked
  4497  00094C  51F2               	movf	(Receive_Pi_Packet@i+1)& (0+255),w,b
  4498  00094E  0A80               	xorlw	128
  4499  000950  0100               	movlb	0	; () banked
  4500  000952  6FF0               	movwf	(??_Receive_Pi_Packet+2)& (0+255),b
  4501  000954  0100               	movlb	0	; () banked
  4502  000956  51EF               	movf	(??_Receive_Pi_Packet+1)& (0+255),w,b
  4503  000958  0A80               	xorlw	128
  4504  00095A  0100               	movlb	0	; () banked
  4505  00095C  59F0               	subwfb	(??_Receive_Pi_Packet+2)& (0+255),w,b
  4506  00095E  A0D8               	btfss	status,0,c
  4507  000960  D7D9               	goto	l5132
  4508                           
  4509                           ; BSR set to: 0
  4510                           ;main.c: 699: ISC_SN_Array_SizeUCG=0;
  4511                           
  4512                           ; BSR set to: 0
  4513  000962  0E00               	movlw	0
  4514  000964  0100               	movlb	0	; () banked
  4515  000966  6FAD               	movwf	_ISC_SN_Array_SizeUCG& (0+255),b
  4516                           
  4517                           ; BSR set to: 0
  4518                           ;main.c: 700: return;
  4519  000968  0012               	return	
  4520  00096A                     l5142:
  4521                           
  4522                           ; BSR set to: 0
  4523                           ;main.c: 703: AlarmStatusUCG = 0;
  4524  00096A  0E00               	movlw	0
  4525  00096C  0100               	movlb	0	; () banked
  4526  00096E  6FA6               	movwf	_AlarmStatusUCG& (0+255),b
  4527                           
  4528                           ; BSR set to: 0
  4529                           ;main.c: 709: }
  4530                           
  4531                           ; BSR set to: 0
  4532                           ;main.c: 707: return;
  4533                           
  4534                           ;main.c: 706: default :
  4535                           
  4536                           ; BSR set to: 0
  4537                           ;main.c: 704: return;
  4538  000970  0012               	return	
  4539  000972                     l5148:
  4540  000972  0E01               	movlw	1
  4541  000974  ECA8  F010         	call	_PacketReadParamUART
  4542                           
  4543                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4544                           ; Switch size 1, requested type "space"
  4545                           ; Number of cases is 1, Range of values is 0 to 0
  4546                           ; switch strategies available:
  4547                           ; Name         Instructions Cycles
  4548                           ; simple_byte            4     3 (average)
  4549                           ;	Chosen strategy is simple_byte
  4550  000978  0100               	movlb	0	; () banked
  4551  00097A  51D9               	movf	(?_PacketReadParamUART+1)& (0+255),w,b
  4552  00097C  0A00               	xorlw	0	; case 0
  4553  00097E  A4D8               	btfss	status,2,c
  4554  000980  0012               	return	
  4555                           
  4556                           ; BSR set to: 0
  4557                           ; Switch size 1, requested type "space"
  4558                           ; Number of cases is 12, Range of values is 1 to 177
  4559                           ; switch strategies available:
  4560                           ; Name         Instructions Cycles
  4561                           ; simple_byte           37    19 (average)
  4562                           ;	Chosen strategy is simple_byte
  4563  000982  0100               	movlb	0	; () banked
  4564  000984  51D8               	movf	?_PacketReadParamUART& (0+255),w,b
  4565  000986  0A01               	xorlw	1	; case 1
  4566  000988  B4D8               	btfsc	status,2,c
  4567  00098A  D6D5               	goto	l5062
  4568  00098C  0A03               	xorlw	3	; case 2
  4569  00098E  B4D8               	btfsc	status,2,c
  4570  000990  D6AD               	goto	l5052
  4571  000992  0A01               	xorlw	1	; case 3
  4572  000994  B4D8               	btfsc	status,2,c
  4573  000996  D660               	goto	l5032
  4574  000998  0A12               	xorlw	18	; case 17
  4575  00099A  B4D8               	btfsc	status,2,c
  4576  00099C  D790               	goto	l5120
  4577  00099E  0A03               	xorlw	3	; case 18
  4578  0009A0  B4D8               	btfsc	status,2,c
  4579  0009A2  D768               	goto	l5110
  4580  0009A4  0A01               	xorlw	1	; case 19
  4581  0009A6  B4D8               	btfsc	status,2,c
  4582  0009A8  D7AF               	goto	l5130
  4583  0009AA  0A06               	xorlw	6	; case 21
  4584  0009AC  B4D8               	btfsc	status,2,c
  4585  0009AE  D7DD               	goto	l5142
  4586  0009B0  0A3C               	xorlw	60	; case 41
  4587  0009B2  B4D8               	btfsc	status,2,c
  4588  0009B4  D6C3               	goto	l5066
  4589  0009B6  0A6A               	xorlw	106	; case 67
  4590  0009B8  B4D8               	btfsc	status,2,c
  4591  0009BA  D673               	goto	l5042
  4592  0009BC  0AEA               	xorlw	234	; case 169
  4593  0009BE  B4D8               	btfsc	status,2,c
  4594  0009C0  D6EA               	goto	l5080
  4595  0009C2  0A19               	xorlw	25	; case 176
  4596  0009C4  B4D8               	btfsc	status,2,c
  4597  0009C6  D731               	goto	l5100
  4598  0009C8  0A01               	xorlw	1	; case 177
  4599  0009CA  A4D8               	btfss	status,2,c
  4600  0009CC  0012               	return	
  4601  0009CE  D708               	goto	l5090
  4602  0009D0                     __end_of_Receive_Pi_Packet:
  4603                           	opt stack 0
  4604                           tblptru	equ	0xFF8
  4605                           tblptrh	equ	0xFF7
  4606                           tblptrl	equ	0xFF6
  4607                           tablat	equ	0xFF5
  4608                           prodh	equ	0xFF4
  4609                           prodl	equ	0xFF3
  4610                           postinc0	equ	0xFEE
  4611                           wreg	equ	0xFE8
  4612                           indf1	equ	0xFE7
  4613                           postdec1	equ	0xFE5
  4614                           fsr1h	equ	0xFE2
  4615                           fsr1l	equ	0xFE1
  4616                           indf2	equ	0xFDF
  4617                           postinc2	equ	0xFDE
  4618                           postdec2	equ	0xFDD
  4619                           fsr2h	equ	0xFDA
  4620                           fsr2l	equ	0xFD9
  4621                           status	equ	0xFD8
  4622                           
  4623 ;; *************** function _PacketReadParamUART *****************
  4624 ;; Defined at:
  4625 ;;		line 94 in file "Released IBC-1 Code - 03-06-2016/UART.c"
  4626 ;; Parameters:    Size  Location     Type
  4627 ;;  paramName       1    wreg     unsigned char 
  4628 ;; Auto vars:     Size  Location     Type
  4629 ;;  paramName       1   26[BANK0 ] unsigned char 
  4630 ;;  retValueUS      2   27[BANK0 ] unsigned short 
  4631 ;; Return value:  Size  Location     Type
  4632 ;;                  2   22[BANK0 ] unsigned short 
  4633 ;; Registers used:
  4634 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4635 ;; Tracked objects:
  4636 ;;		On entry : 0/0
  4637 ;;		On exit  : 0/0
  4638 ;;		Unchanged: 0/0
  4639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4640 ;;      Params:         0       2       0       0       0       0       0
  4641 ;;      Locals:         0       3       0       0       0       0       0
  4642 ;;      Temps:          0       2       0       0       0       0       0
  4643 ;;      Totals:         0       7       0       0       0       0       0
  4644 ;;Total ram usage:        7 bytes
  4645 ;; Hardware stack levels used:    1
  4646 ;; Hardware stack levels required when called:    7
  4647 ;; This function calls:
  4648 ;;		_CheckCRCUART
  4649 ;; This function is called by:
  4650 ;;		_main
  4651 ;;		_Receive_Pi_Packet
  4652 ;; This function uses a non-reentrant model
  4653 ;;
  4654                           
  4655                           	psect	text22
  4656  002150                     __ptext22:
  4657                           	opt stack 0
  4658  002150                     _PacketReadParamUART:
  4659                           	opt stack 22
  4660                           
  4661                           ;incstack = 0
  4662                           ;PacketReadParamUART@paramName stored from wreg
  4663  002150  0100               	movlb	0	; () banked
  4664  002152  6FDC               	movwf	PacketReadParamUART@paramName& (0+255),b
  4665                           
  4666                           ;UART.c: 95: unsigned short retValueUS = 0;
  4667  002154  0E00               	movlw	0
  4668  002156  0100               	movlb	0	; () banked
  4669  002158  6FDE               	movwf	(PacketReadParamUART@retValueUS+1)& (0+255),b
  4670  00215A  0E00               	movlw	0
  4671  00215C  6FDD               	movwf	PacketReadParamUART@retValueUS& (0+255),b
  4672                           
  4673                           ;UART.c: 97: switch(paramName){
  4674  00215E  D03B               	goto	l4342
  4675  002160                     l4324:
  4676                           
  4677                           ; BSR set to: 0
  4678                           ;UART.c: 99: retValueUS |= ((unsigned short) ReceivedPiBufferCG[0] << 8);
  4679  002160  0100               	movlb	0	; () banked
  4680  002162  51B9               	movf	_ReceivedPiBufferCG& (0+255),w,b
  4681  002164  0100               	movlb	0	; () banked
  4682  002166  6FDB               	movwf	(??_PacketReadParamUART+1)& (0+255),b
  4683  002168  6BDA               	clrf	??_PacketReadParamUART& (0+255),b
  4684  00216A  0100               	movlb	0	; () banked
  4685  00216C  51DA               	movf	??_PacketReadParamUART& (0+255),w,b
  4686  00216E  0100               	movlb	0	; () banked
  4687  002170  13DD               	iorwf	PacketReadParamUART@retValueUS& (0+255),f,b
  4688  002172  0100               	movlb	0	; () banked
  4689  002174  51DB               	movf	(??_PacketReadParamUART+1)& (0+255),w,b
  4690  002176  0100               	movlb	0	; () banked
  4691  002178  13DE               	iorwf	(PacketReadParamUART@retValueUS+1)& (0+255),f,b
  4692                           
  4693                           ;UART.c: 100: retValueUS |= ReceivedPiBufferCG[1];
  4694  00217A  0100               	movlb	0	; () banked
  4695  00217C  51BA               	movf	(_ReceivedPiBufferCG+1)& (0+255),w,b
  4696  00217E  0100               	movlb	0	; () banked
  4697  002180  13DD               	iorwf	PacketReadParamUART@retValueUS& (0+255),f,b
  4698                           
  4699                           ; BSR set to: 0
  4700                           ;UART.c: 101: return retValueUS;
  4701  002182  C0DD  F0D8         	movff	PacketReadParamUART@retValueUS,?_PacketReadParamUART
  4702  002186  C0DE  F0D9         	movff	PacketReadParamUART@retValueUS+1,?_PacketReadParamUART+1
  4703                           
  4704                           ; BSR set to: 0
  4705  00218A  0012               	return	
  4706  00218C                     l201:
  4707                           
  4708                           ; BSR set to: 0
  4709                           ;UART.c: 103: return ReceivedPiBufferCG[2];
  4710  00218C  C0BB  F0D8         	movff	_ReceivedPiBufferCG+2,?_PacketReadParamUART
  4711  002190  0100               	movlb	0	; () banked
  4712  002192  6BD9               	clrf	(?_PacketReadParamUART+1)& (0+255),b
  4713  002194  0012               	return	
  4714  002196                     l4330:
  4715                           
  4716                           ; BSR set to: 0
  4717                           ;UART.c: 105: retValueUS |= ((unsigned short) ReceivedPiBufferCG[3] << 8);
  4718  002196  0100               	movlb	0	; () banked
  4719  002198  51BC               	movf	(_ReceivedPiBufferCG+3)& (0+255),w,b
  4720  00219A  0100               	movlb	0	; () banked
  4721  00219C  6FDB               	movwf	(??_PacketReadParamUART+1)& (0+255),b
  4722  00219E  6BDA               	clrf	??_PacketReadParamUART& (0+255),b
  4723  0021A0  0100               	movlb	0	; () banked
  4724  0021A2  51DA               	movf	??_PacketReadParamUART& (0+255),w,b
  4725  0021A4  0100               	movlb	0	; () banked
  4726  0021A6  13DD               	iorwf	PacketReadParamUART@retValueUS& (0+255),f,b
  4727  0021A8  0100               	movlb	0	; () banked
  4728  0021AA  51DB               	movf	(??_PacketReadParamUART+1)& (0+255),w,b
  4729  0021AC  0100               	movlb	0	; () banked
  4730  0021AE  13DE               	iorwf	(PacketReadParamUART@retValueUS+1)& (0+255),f,b
  4731                           
  4732                           ;UART.c: 106: retValueUS |= ReceivedPiBufferCG[4];
  4733  0021B0  0100               	movlb	0	; () banked
  4734  0021B2  51BD               	movf	(_ReceivedPiBufferCG+4)& (0+255),w,b
  4735  0021B4  0100               	movlb	0	; () banked
  4736  0021B6  13DD               	iorwf	PacketReadParamUART@retValueUS& (0+255),f,b
  4737                           
  4738                           ; BSR set to: 0
  4739                           ;UART.c: 107: return retValueUS;
  4740  0021B8  C0DD  F0D8         	movff	PacketReadParamUART@retValueUS,?_PacketReadParamUART
  4741  0021BC  C0DE  F0D9         	movff	PacketReadParamUART@retValueUS+1,?_PacketReadParamUART+1
  4742                           
  4743                           ; BSR set to: 0
  4744  0021C0  0012               	return	
  4745  0021C2                     l4336:
  4746                           
  4747                           ; BSR set to: 0
  4748                           ;UART.c: 109: return CheckCRCUART();
  4749  0021C2  EC41  F012         	call	_CheckCRCUART	;wreg free
  4750  0021C6  0100               	movlb	0	; () banked
  4751  0021C8  6FDA               	movwf	??_PacketReadParamUART& (0+255),b
  4752  0021CA  0100               	movlb	0	; () banked
  4753  0021CC  51DA               	movf	??_PacketReadParamUART& (0+255),w,b
  4754  0021CE  0100               	movlb	0	; () banked
  4755  0021D0  6FD8               	movwf	?_PacketReadParamUART& (0+255),b
  4756  0021D2  6BD9               	clrf	(?_PacketReadParamUART+1)& (0+255),b
  4757                           
  4758                           ; BSR set to: 0
  4759  0021D4  0012               	return	
  4760  0021D6                     l4342:
  4761                           
  4762                           ; BSR set to: 0
  4763  0021D6  0100               	movlb	0	; () banked
  4764  0021D8  51DC               	movf	PacketReadParamUART@paramName& (0+255),w,b
  4765                           
  4766                           ; Switch size 1, requested type "space"
  4767                           ; Number of cases is 4, Range of values is 0 to 3
  4768                           ; switch strategies available:
  4769                           ; Name         Instructions Cycles
  4770                           ; simple_byte           13     7 (average)
  4771                           ;	Chosen strategy is simple_byte
  4772  0021DA  0A00               	xorlw	0	; case 0
  4773  0021DC  B4D8               	btfsc	status,2,c
  4774  0021DE  D7C0               	goto	l4324
  4775  0021E0  0A01               	xorlw	1	; case 1
  4776  0021E2  B4D8               	btfsc	status,2,c
  4777  0021E4  D7D3               	goto	l201
  4778  0021E6  0A03               	xorlw	3	; case 2
  4779  0021E8  B4D8               	btfsc	status,2,c
  4780  0021EA  D7D5               	goto	l4330
  4781  0021EC  0A01               	xorlw	1	; case 3
  4782  0021EE  B4D8               	btfsc	status,2,c
  4783  0021F0  D7E8               	goto	l4336
  4784                           
  4785                           ; BSR set to: 0
  4786                           ;UART.c: 112: return 0;
  4787                           
  4788                           ; BSR set to: 0
  4789  0021F2  0E00               	movlw	0
  4790  0021F4  0100               	movlb	0	; () banked
  4791  0021F6  6FD9               	movwf	(?_PacketReadParamUART+1)& (0+255),b
  4792  0021F8  0E00               	movlw	0
  4793  0021FA  6FD8               	movwf	?_PacketReadParamUART& (0+255),b
  4794  0021FC  0012               	return	
  4795  0021FE                     __end_of_PacketReadParamUART:
  4796                           	opt stack 0
  4797                           tblptru	equ	0xFF8
  4798                           tblptrh	equ	0xFF7
  4799                           tblptrl	equ	0xFF6
  4800                           tablat	equ	0xFF5
  4801                           prodh	equ	0xFF4
  4802                           prodl	equ	0xFF3
  4803                           postinc0	equ	0xFEE
  4804                           wreg	equ	0xFE8
  4805                           indf1	equ	0xFE7
  4806                           postdec1	equ	0xFE5
  4807                           fsr1h	equ	0xFE2
  4808                           fsr1l	equ	0xFE1
  4809                           indf2	equ	0xFDF
  4810                           postinc2	equ	0xFDE
  4811                           postdec2	equ	0xFDD
  4812                           fsr2h	equ	0xFDA
  4813                           fsr2l	equ	0xFD9
  4814                           status	equ	0xFD8
  4815                           
  4816 ;; *************** function _CheckCRCUART *****************
  4817 ;; Defined at:
  4818 ;;		line 115 in file "Released IBC-1 Code - 03-06-2016/UART.c"
  4819 ;; Parameters:    Size  Location     Type
  4820 ;;		None
  4821 ;; Auto vars:     Size  Location     Type
  4822 ;;  receivedCRCU    2   20[BANK0 ] unsigned short 
  4823 ;;  expectedCRCU    2   17[BANK0 ] unsigned short 
  4824 ;;  packetCRCUS     2   15[BANK0 ] unsigned short 
  4825 ;;  packetLenUC     1   19[BANK0 ] unsigned char 
  4826 ;; Return value:  Size  Location     Type
  4827 ;;                  1    wreg      unsigned char 
  4828 ;; Registers used:
  4829 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4830 ;; Tracked objects:
  4831 ;;		On entry : 0/0
  4832 ;;		On exit  : 0/0
  4833 ;;		Unchanged: 0/0
  4834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4835 ;;      Params:         0       0       0       0       0       0       0
  4836 ;;      Locals:         0       7       0       0       0       0       0
  4837 ;;      Temps:          0       2       0       0       0       0       0
  4838 ;;      Totals:         0       9       0       0       0       0       0
  4839 ;;Total ram usage:        9 bytes
  4840 ;; Hardware stack levels used:    1
  4841 ;; Hardware stack levels required when called:    6
  4842 ;; This function calls:
  4843 ;;		_CRC16
  4844 ;; This function is called by:
  4845 ;;		_PacketReadParamUART
  4846 ;; This function uses a non-reentrant model
  4847 ;;
  4848                           
  4849                           	psect	text23
  4850  002482                     __ptext23:
  4851                           	opt stack 0
  4852  002482                     _CheckCRCUART:
  4853                           	opt stack 22
  4854                           
  4855                           ;UART.c: 116: unsigned short expectedCRCUS = 0;
  4856                           
  4857                           ; BSR set to: 0
  4858                           ;incstack = 0
  4859  002482  0E00               	movlw	0
  4860  002484  0100               	movlb	0	; () banked
  4861  002486  6FD4               	movwf	(CheckCRCUART@expectedCRCUS+1)& (0+255),b
  4862  002488  0E00               	movlw	0
  4863  00248A  6FD3               	movwf	CheckCRCUART@expectedCRCUS& (0+255),b
  4864                           
  4865                           ;UART.c: 117: unsigned short receivedCRCUS = 0;
  4866  00248C  0E00               	movlw	0
  4867  00248E  0100               	movlb	0	; () banked
  4868  002490  6FD7               	movwf	(CheckCRCUART@receivedCRCUS+1)& (0+255),b
  4869  002492  0E00               	movlw	0
  4870  002494  6FD6               	movwf	CheckCRCUART@receivedCRCUS& (0+255),b
  4871                           
  4872                           ;UART.c: 118: unsigned char packetLenUC;
  4873                           ;UART.c: 119: unsigned short packetCRCUS = 0;
  4874  002496  0E00               	movlw	0
  4875  002498  0100               	movlb	0	; () banked
  4876  00249A  6FD2               	movwf	(CheckCRCUART@packetCRCUS+1)& (0+255),b
  4877  00249C  0E00               	movlw	0
  4878  00249E  6FD1               	movwf	CheckCRCUART@packetCRCUS& (0+255),b
  4879                           
  4880                           ;UART.c: 121: packetLenUC = 7-2;
  4881  0024A0  0E05               	movlw	5
  4882  0024A2  0100               	movlb	0	; () banked
  4883  0024A4  6FD5               	movwf	CheckCRCUART@packetLenUC& (0+255),b
  4884                           
  4885                           ; BSR set to: 0
  4886                           ;UART.c: 122: expectedCRCUS = CRC16(ReceivedPiBufferCG, packetLenUC);
  4887  0024A6  0EB9               	movlw	low _ReceivedPiBufferCG
  4888  0024A8  0100               	movlb	0	; () banked
  4889  0024AA  6FC2               	movwf	CRC16@data_p& (0+255),b
  4890  0024AC  0E00               	movlw	high _ReceivedPiBufferCG
  4891  0024AE  0100               	movlb	0	; () banked
  4892  0024B0  6FC3               	movwf	(CRC16@data_p+1)& (0+255),b
  4893  0024B2  C0D5  F0C4         	movff	CheckCRCUART@packetLenUC,CRC16@length
  4894  0024B6  0100               	movlb	0	; () banked
  4895  0024B8  6BC5               	clrf	(CRC16@length+1)& (0+255),b
  4896  0024BA  EC62  F00A         	call	_CRC16	;wreg free
  4897  0024BE  C0C2  F0D3         	movff	?_CRC16,CheckCRCUART@expectedCRCUS
  4898  0024C2  C0C3  F0D4         	movff	?_CRC16+1,CheckCRCUART@expectedCRCUS+1
  4899                           
  4900                           ;UART.c: 123: receivedCRCUS |= (((unsigned short) ReceivedPiBufferCG[5]) << 8);
  4901  0024C6  0100               	movlb	0	; () banked
  4902  0024C8  51BE               	movf	(_ReceivedPiBufferCG+5)& (0+255),w,b
  4903  0024CA  0100               	movlb	0	; () banked
  4904  0024CC  6FD0               	movwf	(??_CheckCRCUART+1)& (0+255),b
  4905  0024CE  6BCF               	clrf	??_CheckCRCUART& (0+255),b
  4906  0024D0  0100               	movlb	0	; () banked
  4907  0024D2  51CF               	movf	??_CheckCRCUART& (0+255),w,b
  4908  0024D4  0100               	movlb	0	; () banked
  4909  0024D6  13D6               	iorwf	CheckCRCUART@receivedCRCUS& (0+255),f,b
  4910  0024D8  0100               	movlb	0	; () banked
  4911  0024DA  51D0               	movf	(??_CheckCRCUART+1)& (0+255),w,b
  4912  0024DC  0100               	movlb	0	; () banked
  4913  0024DE  13D7               	iorwf	(CheckCRCUART@receivedCRCUS+1)& (0+255),f,b
  4914                           
  4915                           ; BSR set to: 0
  4916                           ;UART.c: 124: receivedCRCUS |= ReceivedPiBufferCG[5+1];
  4917  0024E0  0100               	movlb	0	; () banked
  4918  0024E2  51BF               	movf	(_ReceivedPiBufferCG+6)& (0+255),w,b
  4919  0024E4  0100               	movlb	0	; () banked
  4920  0024E6  13D6               	iorwf	CheckCRCUART@receivedCRCUS& (0+255),f,b
  4921                           
  4922                           ; BSR set to: 0
  4923                           ;UART.c: 126: return (expectedCRCUS == receivedCRCUS);
  4924  0024E8  0100               	movlb	0	; () banked
  4925  0024EA  51D6               	movf	CheckCRCUART@receivedCRCUS& (0+255),w,b
  4926  0024EC  0100               	movlb	0	; () banked
  4927  0024EE  19D3               	xorwf	CheckCRCUART@expectedCRCUS& (0+255),w,b
  4928  0024F0  E108               	bnz	u2700
  4929  0024F2  0100               	movlb	0	; () banked
  4930  0024F4  51D7               	movf	(CheckCRCUART@receivedCRCUS+1)& (0+255),w,b
  4931  0024F6  0100               	movlb	0	; () banked
  4932  0024F8  19D4               	xorwf	(CheckCRCUART@expectedCRCUS+1)& (0+255),w,b
  4933  0024FA  A4D8               	btfss	status,2,c
  4934  0024FC  D002               	goto	u2700
  4935  0024FE  0E01               	movlw	1
  4936  002500  0012               	return	
  4937  002502                     u2700:
  4938  002502  0E00               	movlw	0
  4939  002504  0012               	return	
  4940  002506                     __end_of_CheckCRCUART:
  4941                           	opt stack 0
  4942                           tblptru	equ	0xFF8
  4943                           tblptrh	equ	0xFF7
  4944                           tblptrl	equ	0xFF6
  4945                           tablat	equ	0xFF5
  4946                           prodh	equ	0xFF4
  4947                           prodl	equ	0xFF3
  4948                           postinc0	equ	0xFEE
  4949                           wreg	equ	0xFE8
  4950                           indf1	equ	0xFE7
  4951                           postdec1	equ	0xFE5
  4952                           fsr1h	equ	0xFE2
  4953                           fsr1l	equ	0xFE1
  4954                           indf2	equ	0xFDF
  4955                           postinc2	equ	0xFDE
  4956                           postdec2	equ	0xFDD
  4957                           fsr2h	equ	0xFDA
  4958                           fsr2l	equ	0xFD9
  4959                           status	equ	0xFD8
  4960                           
  4961 ;; *************** function _Check_ALL_ISC *****************
  4962 ;; Defined at:
  4963 ;;		line 725 in file "Released IBC-1 Code - 03-06-2016/main.c"
  4964 ;; Parameters:    Size  Location     Type
  4965 ;;		None
  4966 ;; Auto vars:     Size  Location     Type
  4967 ;;		None
  4968 ;; Return value:  Size  Location     Type
  4969 ;;                  1    wreg      void 
  4970 ;; Registers used:
  4971 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4972 ;; Tracked objects:
  4973 ;;		On entry : 0/0
  4974 ;;		On exit  : 0/0
  4975 ;;		Unchanged: 0/0
  4976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4977 ;;      Params:         0       0       0       0       0       0       0
  4978 ;;      Locals:         0       0       0       0       0       0       0
  4979 ;;      Temps:          0       0       0       0       0       0       0
  4980 ;;      Totals:         0       0       0       0       0       0       0
  4981 ;;Total ram usage:        0 bytes
  4982 ;; Hardware stack levels used:    1
  4983 ;; Hardware stack levels required when called:    7
  4984 ;; This function calls:
  4985 ;;		_CreateMessageST7540
  4986 ;; This function is called by:
  4987 ;;		_Receive_Pi_Packet
  4988 ;; This function uses a non-reentrant model
  4989 ;;
  4990                           
  4991                           	psect	text24
  4992  002B10                     __ptext24:
  4993                           	opt stack 0
  4994  002B10                     _Check_ALL_ISC:
  4995                           	opt stack 22
  4996                           
  4997                           ;main.c: 726: CreateMessageST7540(0x0010, 0x00, 0b00101001, 0, "");
  4998                           
  4999                           ; BSR set to: 0
  5000                           ;incstack = 0
  5001  002B10  0E00               	movlw	0
  5002  002B12  0100               	movlb	0	; () banked
  5003  002B14  6FE0               	movwf	(CreateMessageST7540@packetSourceUS+1)& (0+255),b
  5004  002B16  0E10               	movlw	16
  5005  002B18  6FDF               	movwf	CreateMessageST7540@packetSourceUS& (0+255),b
  5006  002B1A  0E00               	movlw	0
  5007  002B1C  0100               	movlb	0	; () banked
  5008  002B1E  6FE2               	movwf	(CreateMessageST7540@packetDestUS+1)& (0+255),b
  5009  002B20  0E00               	movlw	0
  5010  002B22  6FE1               	movwf	CreateMessageST7540@packetDestUS& (0+255),b
  5011  002B24  0E29               	movlw	41
  5012  002B26  0100               	movlb	0	; () banked
  5013  002B28  6FE3               	movwf	CreateMessageST7540@commandUC& (0+255),b
  5014  002B2A  0E00               	movlw	0
  5015  002B2C  0100               	movlb	0	; () banked
  5016  002B2E  6FE4               	movwf	CreateMessageST7540@dataLenUC& (0+255),b
  5017  002B30  0E37               	movlw	low STR_1
  5018  002B32  0100               	movlb	0	; () banked
  5019  002B34  6FE5               	movwf	CreateMessageST7540@dataBuf& (0+255),b
  5020  002B36  0E06               	movlw	high STR_1
  5021  002B38  0100               	movlb	0	; () banked
  5022  002B3A  6FE6               	movwf	(CreateMessageST7540@dataBuf+1)& (0+255),b
  5023  002B3C  EC94  F00B         	call	_CreateMessageST7540	;wreg free
  5024                           
  5025                           ;main.c: 727: ISC_Transmit_Packet_Ready = 1;
  5026  002B40  0E01               	movlw	1
  5027  002B42  0100               	movlb	0	; () banked
  5028  002B44  6FAE               	movwf	_ISC_Transmit_Packet_Ready& (0+255),b
  5029                           
  5030                           ; BSR set to: 0
  5031  002B46  0012               	return		;funcret
  5032  002B48                     __end_of_Check_ALL_ISC:
  5033                           	opt stack 0
  5034                           tblptru	equ	0xFF8
  5035                           tblptrh	equ	0xFF7
  5036                           tblptrl	equ	0xFF6
  5037                           tablat	equ	0xFF5
  5038                           prodh	equ	0xFF4
  5039                           prodl	equ	0xFF3
  5040                           postinc0	equ	0xFEE
  5041                           wreg	equ	0xFE8
  5042                           indf1	equ	0xFE7
  5043                           postdec1	equ	0xFE5
  5044                           fsr1h	equ	0xFE2
  5045                           fsr1l	equ	0xFE1
  5046                           indf2	equ	0xFDF
  5047                           postinc2	equ	0xFDE
  5048                           postdec2	equ	0xFDD
  5049                           fsr2h	equ	0xFDA
  5050                           fsr2l	equ	0xFD9
  5051                           status	equ	0xFD8
  5052                           
  5053 ;; *************** function _CreateMessageST7540 *****************
  5054 ;; Defined at:
  5055 ;;		line 212 in file "Released IBC-1 Code - 03-06-2016/ST7540.c"
  5056 ;; Parameters:    Size  Location     Type
  5057 ;;  packetSource    2   29[BANK0 ] unsigned short 
  5058 ;;  packetDestUS    2   31[BANK0 ] unsigned short 
  5059 ;;  commandUC       1   33[BANK0 ] unsigned char 
  5060 ;;  dataLenUC       1   34[BANK0 ] unsigned char 
  5061 ;;  dataBuf         2   35[BANK0 ] PTR unsigned char 
  5062 ;;		 -> Assign_ISC_New_SN@ISC_NEW_SN(2), STR_14(1), STR_13(1), STR_12(1), 
  5063 ;;		 -> STR_11(1), STR_10(1), STR_9(1), STR_8(1), 
  5064 ;;		 -> STR_7(1), STR_6(1), STR_5(1), STR_4(1), 
  5065 ;;		 -> STR_3(1), STR_2(1), STR_1(1), 
  5066 ;; Auto vars:     Size  Location     Type
  5067 ;;  packetCRCUS     2   41[BANK0 ] unsigned short 
  5068 ;;  dataBufLocUC    1   43[BANK0 ] unsigned char 
  5069 ;; Return value:  Size  Location     Type
  5070 ;;                  1    wreg      void 
  5071 ;; Registers used:
  5072 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5073 ;; Tracked objects:
  5074 ;;		On entry : 0/0
  5075 ;;		On exit  : 0/0
  5076 ;;		Unchanged: 0/0
  5077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5078 ;;      Params:         0       8       0       0       0       0       0
  5079 ;;      Locals:         0       3       0       0       0       0       0
  5080 ;;      Temps:          0       4       0       0       0       0       0
  5081 ;;      Totals:         0      15       0       0       0       0       0
  5082 ;;Total ram usage:       15 bytes
  5083 ;; Hardware stack levels used:    1
  5084 ;; Hardware stack levels required when called:    6
  5085 ;; This function calls:
  5086 ;;		_CRC16
  5087 ;; This function is called by:
  5088 ;;		_Receive_Pi_Packet
  5089 ;;		_Transmit_BLAST_Command_Packet
  5090 ;;		_Check_ALL_ISC
  5091 ;;		_Assign_ISC_New_SN
  5092 ;; This function uses a non-reentrant model
  5093 ;;
  5094                           
  5095                           	psect	text25
  5096  001728                     __ptext25:
  5097                           	opt stack 0
  5098  001728                     _CreateMessageST7540:
  5099                           	opt stack 23
  5100                           
  5101                           ;ST7540.c: 213: unsigned char dataBufLocUC;
  5102                           ;ST7540.c: 214: unsigned short packetCRCUS;
  5103                           ;ST7540.c: 216: bufferTXST7540UCA[0] = 0xAA;
  5104                           
  5105                           ; BSR set to: 0
  5106                           ;incstack = 0
  5107  001728  0EAA               	movlw	170
  5108  00172A  0101               	movlb	1	; () banked
  5109  00172C  6F50               	movwf	_bufferTXST7540UCA& (0+255),b
  5110                           
  5111                           ;ST7540.c: 217: bufferTXST7540UCA[1] = 0xAA;
  5112  00172E  0EAA               	movlw	170
  5113  001730  0101               	movlb	1	; () banked
  5114  001732  6F51               	movwf	(_bufferTXST7540UCA+1)& (0+255),b
  5115                           
  5116                           ;ST7540.c: 218: bufferTXST7540UCA[2] = (unsigned long short) 0x9b58 >> 8;
  5117  001734  0E9B               	movlw	155
  5118  001736  0101               	movlb	1	; () banked
  5119  001738  6F52               	movwf	(_bufferTXST7540UCA+2)& (0+255),b
  5120                           
  5121                           ;ST7540.c: 219: bufferTXST7540UCA[3] = (unsigned long short) 0x9b58;
  5122  00173A  0E58               	movlw	88
  5123  00173C  0101               	movlb	1	; () banked
  5124  00173E  6F53               	movwf	(_bufferTXST7540UCA+3)& (0+255),b
  5125                           
  5126                           ; BSR set to: 1
  5127                           ;ST7540.c: 220: bufferTXST7540UCA[4] = 9 + dataLenUC;
  5128  001740  0100               	movlb	0	; () banked
  5129  001742  51E4               	movf	CreateMessageST7540@dataLenUC& (0+255),w,b
  5130  001744  0F09               	addlw	9
  5131  001746  0101               	movlb	1	; () banked
  5132  001748  6F54               	movwf	(_bufferTXST7540UCA+4)& (0+255),b
  5133                           
  5134                           ; BSR set to: 1
  5135                           ;ST7540.c: 221: bufferTXST7540UCA[5] = packetSourceUS >> 8;
  5136  00174A  0100               	movlb	0	; () banked
  5137  00174C  51E0               	movf	(CreateMessageST7540@packetSourceUS+1)& (0+255),w,b
  5138  00174E  0101               	movlb	1	; () banked
  5139  001750  6F55               	movwf	(_bufferTXST7540UCA+5)& (0+255),b
  5140                           
  5141                           ; BSR set to: 1
  5142                           ;ST7540.c: 222: bufferTXST7540UCA[6] = packetSourceUS;
  5143  001752  C0DF  F156         	movff	CreateMessageST7540@packetSourceUS,_bufferTXST7540UCA+6
  5144                           
  5145                           ; BSR set to: 1
  5146                           ;ST7540.c: 223: bufferTXST7540UCA[7] = packetDestUS >> 8;
  5147  001756  0100               	movlb	0	; () banked
  5148  001758  51E2               	movf	(CreateMessageST7540@packetDestUS+1)& (0+255),w,b
  5149  00175A  0101               	movlb	1	; () banked
  5150  00175C  6F57               	movwf	(_bufferTXST7540UCA+7)& (0+255),b
  5151                           
  5152                           ; BSR set to: 1
  5153                           ;ST7540.c: 224: bufferTXST7540UCA[8] = packetDestUS;
  5154  00175E  C0E1  F158         	movff	CreateMessageST7540@packetDestUS,_bufferTXST7540UCA+8
  5155                           
  5156                           ; BSR set to: 1
  5157                           ;ST7540.c: 225: bufferTXST7540UCA[9] = packetNumberUC++;
  5158  001762  C0B8  F159         	movff	_packetNumberUC,_bufferTXST7540UCA+9
  5159                           
  5160                           ; BSR set to: 1
  5161  001766  0100               	movlb	0	; () banked
  5162  001768  2BB8               	incf	_packetNumberUC& (0+255),f,b
  5163                           
  5164                           ; BSR set to: 0
  5165                           ;ST7540.c: 226: bufferTXST7540UCA[10] = commandUC;
  5166  00176A  C0E3  F15A         	movff	CreateMessageST7540@commandUC,_bufferTXST7540UCA+10
  5167                           
  5168                           ; BSR set to: 0
  5169                           ;ST7540.c: 228: for(dataBufLocUC = 0; dataBufLocUC < dataLenUC; dataBufLocUC++)
  5170  00176E  0E00               	movlw	0
  5171  001770  0100               	movlb	0	; () banked
  5172  001772  6FED               	movwf	CreateMessageST7540@dataBufLocUC& (0+255),b
  5173  001774  D032               	goto	l3960
  5174  001776                     l3956:
  5175                           
  5176                           ; BSR set to: 0
  5177                           ;ST7540.c: 229: bufferTXST7540UCA[dataBufLocUC + 11] = dataBuf[dataBufLocUC];
  5178  001776  0100               	movlb	0	; () banked
  5179  001778  51ED               	movf	CreateMessageST7540@dataBufLocUC& (0+255),w,b
  5180  00177A  0D01               	mullw	1
  5181  00177C  C0E5  F0E7         	movff	CreateMessageST7540@dataBuf,??_CreateMessageST7540
  5182  001780  C0E6  F0E8         	movff	CreateMessageST7540@dataBuf+1,??_CreateMessageST7540+1
  5183  001784  50F3               	movf	prodl,w,c
  5184  001786  0100               	movlb	0	; () banked
  5185  001788  27E7               	addwf	??_CreateMessageST7540& (0+255),f,b
  5186  00178A  50F4               	movf	prodh,w,c
  5187  00178C  0100               	movlb	0	; () banked
  5188  00178E  23E8               	addwfc	(??_CreateMessageST7540+1)& (0+255),f,b
  5189  001790  C0E7  FFF6         	movff	??_CreateMessageST7540,tblptrl
  5190  001794  C0E8  FFF7         	movff	??_CreateMessageST7540+1,tblptrh
  5191  001798  6AF8               	clrf	tblptru,c
  5192  00179A  0100               	movlb	0	; () banked
  5193  00179C  51ED               	movf	CreateMessageST7540@dataBufLocUC& (0+255),w,b
  5194  00179E  0100               	movlb	0	; () banked
  5195  0017A0  6FE9               	movwf	(??_CreateMessageST7540+2)& (0+255),b
  5196  0017A2  6BEA               	clrf	(??_CreateMessageST7540+3)& (0+255),b
  5197  0017A4  0E0B               	movlw	11
  5198  0017A6  0100               	movlb	0	; () banked
  5199  0017A8  27E9               	addwf	(??_CreateMessageST7540+2)& (0+255),f,b
  5200  0017AA  0E00               	movlw	0
  5201  0017AC  23EA               	addwfc	(??_CreateMessageST7540+3)& (0+255),f,b
  5202  0017AE  0E50               	movlw	low _bufferTXST7540UCA
  5203  0017B0  0100               	movlb	0	; () banked
  5204  0017B2  25E9               	addwf	(??_CreateMessageST7540+2)& (0+255),w,b
  5205  0017B4  6ED9               	movwf	fsr2l,c
  5206  0017B6  0E01               	movlw	high _bufferTXST7540UCA
  5207  0017B8  0100               	movlb	0	; () banked
  5208  0017BA  21EA               	addwfc	(??_CreateMessageST7540+3)& (0+255),w,b
  5209  0017BC  6EDA               	movwf	fsr2h,c
  5210  0017BE  0E05               	movlw	(high __ramtop+-1)
  5211  0017C0  64F7               	cpfsgt	tblptrh,c
  5212  0017C2  D003               	bra	u2667
  5213  0017C4  0008               	tblrd		*
  5214  0017C6  50F5               	movf	tablat,w,c
  5215  0017C8  D005               	bra	u2660
  5216  0017CA                     u2667:
  5217  0017CA  CFF6 FFE9          	movff	tblptrl,fsr0l
  5218  0017CE  CFF7 FFEA          	movff	tblptrh,fsr0h
  5219  0017D2  50EF               	movf	indf0,w,c
  5220  0017D4                     u2660:
  5221  0017D4  6EDF               	movwf	indf2,c
  5222  0017D6  0100               	movlb	0	; () banked
  5223  0017D8  2BED               	incf	CreateMessageST7540@dataBufLocUC& (0+255),f,b
  5224  0017DA                     l3960:
  5225                           
  5226                           ; BSR set to: 0
  5227  0017DA  0100               	movlb	0	; () banked
  5228  0017DC  51E4               	movf	CreateMessageST7540@dataLenUC& (0+255),w,b
  5229  0017DE  0100               	movlb	0	; () banked
  5230  0017E0  5DED               	subwf	CreateMessageST7540@dataBufLocUC& (0+255),w,b
  5231  0017E2  A0D8               	btfss	status,0,c
  5232  0017E4  D7C8               	goto	l3956
  5233                           
  5234                           ; BSR set to: 0
  5235                           ;ST7540.c: 230: dataBufLocUC += 11;
  5236                           
  5237                           ; BSR set to: 0
  5238  0017E6  0E0B               	movlw	11
  5239  0017E8  0100               	movlb	0	; () banked
  5240  0017EA  27ED               	addwf	CreateMessageST7540@dataBufLocUC& (0+255),f,b
  5241                           
  5242                           ; BSR set to: 0
  5243                           ;ST7540.c: 232: packetCRCUS = CRC16(bufferTXST7540UCA + 4, 9 + dataLenUC - 2);
  5244  0017EC  0E54               	movlw	low (_bufferTXST7540UCA+4)
  5245  0017EE  0100               	movlb	0	; () banked
  5246  0017F0  6FC2               	movwf	CRC16@data_p& (0+255),b
  5247  0017F2  0E01               	movlw	high (_bufferTXST7540UCA+4)
  5248  0017F4  0100               	movlb	0	; () banked
  5249  0017F6  6FC3               	movwf	(CRC16@data_p+1)& (0+255),b
  5250  0017F8  0E07               	movlw	7
  5251  0017FA  0100               	movlb	0	; () banked
  5252  0017FC  25E4               	addwf	CreateMessageST7540@dataLenUC& (0+255),w,b
  5253  0017FE  0100               	movlb	0	; () banked
  5254  001800  6FC4               	movwf	CRC16@length& (0+255),b
  5255  001802  0100               	movlb	0	; () banked
  5256  001804  6BC5               	clrf	(CRC16@length+1)& (0+255),b
  5257  001806  0E00               	movlw	0
  5258  001808  23C5               	addwfc	(CRC16@length+1)& (0+255),f,b
  5259  00180A  EC62  F00A         	call	_CRC16	;wreg free
  5260  00180E  C0C2  F0EB         	movff	?_CRC16,CreateMessageST7540@packetCRCUS
  5261  001812  C0C3  F0EC         	movff	?_CRC16+1,CreateMessageST7540@packetCRCUS+1
  5262                           
  5263                           ;ST7540.c: 233: bufferTXST7540UCA[dataBufLocUC++] = packetCRCUS >> 8;
  5264  001816  0100               	movlb	0	; () banked
  5265  001818  51ED               	movf	CreateMessageST7540@dataBufLocUC& (0+255),w,b
  5266  00181A  0D01               	mullw	1
  5267  00181C  0E50               	movlw	low _bufferTXST7540UCA
  5268  00181E  24F3               	addwf	prodl,w,c
  5269  001820  6ED9               	movwf	fsr2l,c
  5270  001822  0E01               	movlw	high _bufferTXST7540UCA
  5271  001824  20F4               	addwfc	prodh,w,c
  5272  001826  6EDA               	movwf	fsr2h,c
  5273  001828  0100               	movlb	0	; () banked
  5274  00182A  51EC               	movf	(CreateMessageST7540@packetCRCUS+1)& (0+255),w,b
  5275  00182C  6EDF               	movwf	indf2,c
  5276                           
  5277                           ; BSR set to: 0
  5278  00182E  0100               	movlb	0	; () banked
  5279  001830  2BED               	incf	CreateMessageST7540@dataBufLocUC& (0+255),f,b
  5280                           
  5281                           ; BSR set to: 0
  5282                           ;ST7540.c: 234: bufferTXST7540UCA[dataBufLocUC] = packetCRCUS;
  5283  001832  0100               	movlb	0	; () banked
  5284  001834  51ED               	movf	CreateMessageST7540@dataBufLocUC& (0+255),w,b
  5285  001836  0D01               	mullw	1
  5286  001838  0E50               	movlw	low _bufferTXST7540UCA
  5287  00183A  24F3               	addwf	prodl,w,c
  5288  00183C  6ED9               	movwf	fsr2l,c
  5289  00183E  0E01               	movlw	high _bufferTXST7540UCA
  5290  001840  20F4               	addwfc	prodh,w,c
  5291  001842  6EDA               	movwf	fsr2h,c
  5292  001844  C0EB  FFDF         	movff	CreateMessageST7540@packetCRCUS,indf2
  5293                           
  5294                           ; BSR set to: 0
  5295                           ;ST7540.c: 235: bufferTXLenUCA = dataBufLocUC;
  5296  001848  C0ED  F057         	movff	CreateMessageST7540@dataBufLocUC,_bufferTXLenUCA
  5297                           
  5298                           ; BSR set to: 0
  5299  00184C  0012               	return		;funcret
  5300  00184E                     __end_of_CreateMessageST7540:
  5301                           	opt stack 0
  5302                           tblptru	equ	0xFF8
  5303                           tblptrh	equ	0xFF7
  5304                           tblptrl	equ	0xFF6
  5305                           tablat	equ	0xFF5
  5306                           prodh	equ	0xFF4
  5307                           prodl	equ	0xFF3
  5308                           indf0	equ	0xFEF
  5309                           postinc0	equ	0xFEE
  5310                           fsr0h	equ	0xFEA
  5311                           fsr0l	equ	0xFE9
  5312                           wreg	equ	0xFE8
  5313                           indf1	equ	0xFE7
  5314                           postdec1	equ	0xFE5
  5315                           fsr1h	equ	0xFE2
  5316                           fsr1l	equ	0xFE1
  5317                           indf2	equ	0xFDF
  5318                           postinc2	equ	0xFDE
  5319                           postdec2	equ	0xFDD
  5320                           fsr2h	equ	0xFDA
  5321                           fsr2l	equ	0xFD9
  5322                           status	equ	0xFD8
  5323                           
  5324 ;; *************** function _CRC16 *****************
  5325 ;; Defined at:
  5326 ;;		line 19 in file "Released IBC-1 Code - 03-06-2016/crc16.c"
  5327 ;; Parameters:    Size  Location     Type
  5328 ;;  data_p          2    0[BANK0 ] PTR unsigned char 
  5329 ;;		 -> TransmitPiBufferCG(80), ReceivedPiBufferCG(7), bufferRXST7540UCA(75), bufferTXST7540UCA(79), 
  5330 ;;  length          2    2[BANK0 ] unsigned short 
  5331 ;; Auto vars:     Size  Location     Type
  5332 ;;  crc             2   11[BANK0 ] unsigned int 
  5333 ;;  data            2    8[BANK0 ] unsigned int 
  5334 ;;  i               1   10[BANK0 ] unsigned char 
  5335 ;; Return value:  Size  Location     Type
  5336 ;;                  2    0[BANK0 ] unsigned short 
  5337 ;; Registers used:
  5338 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5339 ;; Tracked objects:
  5340 ;;		On entry : 0/0
  5341 ;;		On exit  : 0/0
  5342 ;;		Unchanged: 0/0
  5343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5344 ;;      Params:         0       4       0       0       0       0       0
  5345 ;;      Locals:         0       5       0       0       0       0       0
  5346 ;;      Temps:          0       4       0       0       0       0       0
  5347 ;;      Totals:         0      13       0       0       0       0       0
  5348 ;;Total ram usage:       13 bytes
  5349 ;; Hardware stack levels used:    1
  5350 ;; Hardware stack levels required when called:    5
  5351 ;; This function calls:
  5352 ;;		Nothing
  5353 ;; This function is called by:
  5354 ;;		_CreateMessageST7540
  5355 ;;		_CheckCRCUART
  5356 ;;		_CreateMessageUART
  5357 ;;		_CreatePiToIBCUARTMessage
  5358 ;;		_CreateMessageUARTTest
  5359 ;;		_CreateMessageUARTDEBUG
  5360 ;; This function uses a non-reentrant model
  5361 ;;
  5362                           
  5363                           	psect	text26
  5364  0014C4                     __ptext26:
  5365                           	opt stack 0
  5366  0014C4                     _CRC16:
  5367                           	opt stack 23
  5368                           
  5369                           ;crc16.c: 21: unsigned char i;
  5370                           ;crc16.c: 22: unsigned int data;
  5371                           ;crc16.c: 23: unsigned int crc = 0xffff;
  5372                           
  5373                           ; BSR set to: 0
  5374                           ;incstack = 0
  5375  0014C4  0100               	movlb	0	; () banked
  5376  0014C6  69CD               	setf	CRC16@crc& (0+255),b
  5377  0014C8  69CE               	setf	(CRC16@crc+1)& (0+255),b
  5378                           
  5379                           ; BSR set to: 0
  5380                           ;crc16.c: 25: if (length == 0)
  5381  0014CA  0100               	movlb	0	; () banked
  5382  0014CC  51C4               	movf	CRC16@length& (0+255),w,b
  5383  0014CE  0100               	movlb	0	; () banked
  5384  0014D0  11C5               	iorwf	(CRC16@length+1)& (0+255),w,b
  5385  0014D2  A4D8               	btfss	status,2,c
  5386  0014D4  D009               	goto	l3806
  5387                           
  5388                           ; BSR set to: 0
  5389                           ;crc16.c: 26: return (~crc);
  5390  0014D6  0100               	movlb	0	; () banked
  5391  0014D8  1DCD               	comf	CRC16@crc& (0+255),w,b
  5392  0014DA  0100               	movlb	0	; () banked
  5393  0014DC  6FC2               	movwf	?_CRC16& (0+255),b
  5394  0014DE  0100               	movlb	0	; () banked
  5395  0014E0  1DCE               	comf	(CRC16@crc+1)& (0+255),w,b
  5396  0014E2  0100               	movlb	0	; () banked
  5397  0014E4  6FC3               	movwf	(?_CRC16+1)& (0+255),b
  5398                           
  5399                           ; BSR set to: 0
  5400  0014E6  0012               	return	
  5401  0014E8                     l3806:
  5402                           
  5403                           ; BSR set to: 0
  5404                           ;crc16.c: 29: {
  5405                           ;crc16.c: 30: for (i=0, data=(unsigned int)0xff & *data_p++;
  5406  0014E8  0E00               	movlw	0
  5407  0014EA  0100               	movlb	0	; () banked
  5408  0014EC  6FCC               	movwf	CRC16@i& (0+255),b
  5409                           
  5410                           ; BSR set to: 0
  5411  0014EE  C0C2  FFD9         	movff	CRC16@data_p,fsr2l
  5412  0014F2  C0C3  FFDA         	movff	CRC16@data_p+1,fsr2h
  5413  0014F6  50DF               	movf	indf2,w,c
  5414  0014F8  0100               	movlb	0	; () banked
  5415  0014FA  6FC6               	movwf	??_CRC16& (0+255),b
  5416  0014FC  0100               	movlb	0	; () banked
  5417  0014FE  51C6               	movf	??_CRC16& (0+255),w,b
  5418  001500  0100               	movlb	0	; () banked
  5419  001502  6FCA               	movwf	CRC16@data& (0+255),b
  5420  001504  6BCB               	clrf	(CRC16@data+1)& (0+255),b
  5421                           
  5422                           ; BSR set to: 0
  5423  001506  0100               	movlb	0	; () banked
  5424  001508  4BC2               	infsnz	CRC16@data_p& (0+255),f,b
  5425  00150A  2BC3               	incf	(CRC16@data_p+1)& (0+255),f,b
  5426  00150C                     l3812:
  5427                           
  5428                           ; BSR set to: 0
  5429                           ;crc16.c: 31: i < 8;
  5430                           ;crc16.c: 32: i++, data >>= 1)
  5431  00150C  0E07               	movlw	7
  5432  00150E  0100               	movlb	0	; () banked
  5433  001510  65CC               	cpfsgt	CRC16@i& (0+255),b
  5434  001512  D001               	goto	l3816
  5435  001514  D041               	goto	l3824
  5436  001516                     l3816:
  5437                           
  5438                           ; BSR set to: 0
  5439                           ;crc16.c: 33: {
  5440                           ;crc16.c: 34: if ((crc & 0x0001) ^ (data & 0x0001))
  5441  001516  0E01               	movlw	1
  5442  001518  0100               	movlb	0	; () banked
  5443  00151A  15CA               	andwf	CRC16@data& (0+255),w,b
  5444  00151C  0100               	movlb	0	; () banked
  5445  00151E  6FC6               	movwf	??_CRC16& (0+255),b
  5446  001520  0E00               	movlw	0
  5447  001522  0100               	movlb	0	; () banked
  5448  001524  15CB               	andwf	(CRC16@data+1)& (0+255),w,b
  5449  001526  0100               	movlb	0	; () banked
  5450  001528  6FC7               	movwf	(??_CRC16+1)& (0+255),b
  5451  00152A  0E01               	movlw	1
  5452  00152C  0100               	movlb	0	; () banked
  5453  00152E  15CD               	andwf	CRC16@crc& (0+255),w,b
  5454  001530  0100               	movlb	0	; () banked
  5455  001532  6FC8               	movwf	(??_CRC16+2)& (0+255),b
  5456  001534  0E00               	movlw	0
  5457  001536  0100               	movlb	0	; () banked
  5458  001538  15CE               	andwf	(CRC16@crc+1)& (0+255),w,b
  5459  00153A  0100               	movlb	0	; () banked
  5460  00153C  6FC9               	movwf	(??_CRC16+3)& (0+255),b
  5461  00153E  0100               	movlb	0	; () banked
  5462  001540  51C6               	movf	??_CRC16& (0+255),w,b
  5463  001542  0100               	movlb	0	; () banked
  5464  001544  1BC8               	xorwf	(??_CRC16+2)& (0+255),f,b
  5465  001546  0100               	movlb	0	; () banked
  5466  001548  51C7               	movf	(??_CRC16+1)& (0+255),w,b
  5467  00154A  0100               	movlb	0	; () banked
  5468  00154C  1BC9               	xorwf	(??_CRC16+3)& (0+255),f,b
  5469  00154E  0100               	movlb	0	; () banked
  5470  001550  51C8               	movf	(??_CRC16+2)& (0+255),w,b
  5471  001552  0100               	movlb	0	; () banked
  5472  001554  11C9               	iorwf	(??_CRC16+3)& (0+255),w,b
  5473  001556  B4D8               	btfsc	status,2,c
  5474  001558  D014               	goto	l3820
  5475                           
  5476                           ; BSR set to: 0
  5477                           ;crc16.c: 35: crc = (crc >> 1) ^ 0x8408;
  5478  00155A  90D8               	bcf	status,0,c
  5479  00155C  0100               	movlb	0	; () banked
  5480  00155E  31CE               	rrcf	(CRC16@crc+1)& (0+255),w,b
  5481  001560  0100               	movlb	0	; () banked
  5482  001562  6FC7               	movwf	(??_CRC16+1)& (0+255),b
  5483  001564  0100               	movlb	0	; () banked
  5484  001566  31CD               	rrcf	CRC16@crc& (0+255),w,b
  5485  001568  0100               	movlb	0	; () banked
  5486  00156A  6FC6               	movwf	??_CRC16& (0+255),b
  5487  00156C  0E08               	movlw	8
  5488  00156E  0100               	movlb	0	; () banked
  5489  001570  19C6               	xorwf	??_CRC16& (0+255),w,b
  5490  001572  0100               	movlb	0	; () banked
  5491  001574  6FCD               	movwf	CRC16@crc& (0+255),b
  5492  001576  0E84               	movlw	132
  5493  001578  0100               	movlb	0	; () banked
  5494  00157A  19C7               	xorwf	(??_CRC16+1)& (0+255),w,b
  5495  00157C  0100               	movlb	0	; () banked
  5496  00157E  6FCE               	movwf	(CRC16@crc+1)& (0+255),b
  5497  001580  D004               	goto	l254
  5498  001582                     l3820:
  5499                           
  5500                           ; BSR set to: 0
  5501                           ;crc16.c: 36: else crc >>= 1;
  5502  001582  0100               	movlb	0	; () banked
  5503  001584  90D8               	bcf	status,0,c
  5504  001586  33CE               	rrcf	(CRC16@crc+1)& (0+255),f,b
  5505  001588  33CD               	rrcf	CRC16@crc& (0+255),f,b
  5506  00158A                     l254:
  5507                           
  5508                           ; BSR set to: 0
  5509  00158A  0100               	movlb	0	; () banked
  5510  00158C  2BCC               	incf	CRC16@i& (0+255),f,b
  5511  00158E  0100               	movlb	0	; () banked
  5512  001590  90D8               	bcf	status,0,c
  5513  001592  33CB               	rrcf	(CRC16@data+1)& (0+255),f,b
  5514  001594  33CA               	rrcf	CRC16@data& (0+255),f,b
  5515  001596  D7BA               	goto	l3812
  5516  001598                     l3824:
  5517                           
  5518                           ; BSR set to: 0
  5519                           ;crc16.c: 37: }
  5520                           ;crc16.c: 38: } while (--length);
  5521  001598  0100               	movlb	0	; () banked
  5522  00159A  07C4               	decf	CRC16@length& (0+255),f,b
  5523  00159C  A0D8               	btfss	status,0,c
  5524  00159E  07C5               	decf	(CRC16@length+1)& (0+255),f,b
  5525  0015A0  0100               	movlb	0	; () banked
  5526  0015A2  51C4               	movf	CRC16@length& (0+255),w,b
  5527  0015A4  0100               	movlb	0	; () banked
  5528  0015A6  11C5               	iorwf	(CRC16@length+1)& (0+255),w,b
  5529  0015A8  A4D8               	btfss	status,2,c
  5530  0015AA  D79E               	goto	l3806
  5531                           
  5532                           ; BSR set to: 0
  5533                           ;crc16.c: 40: crc = ~crc;
  5534                           
  5535                           ; BSR set to: 0
  5536  0015AC  0100               	movlb	0	; () banked
  5537  0015AE  1FCD               	comf	CRC16@crc& (0+255),f,b
  5538  0015B0  1FCE               	comf	(CRC16@crc+1)& (0+255),f,b
  5539                           
  5540                           ; BSR set to: 0
  5541                           ;crc16.c: 41: data = crc;
  5542  0015B2  C0CD  F0CA         	movff	CRC16@crc,CRC16@data
  5543  0015B6  C0CE  F0CB         	movff	CRC16@crc+1,CRC16@data+1
  5544                           
  5545                           ; BSR set to: 0
  5546                           ;crc16.c: 42: crc = (crc << 8) | (data >> 8 & 0xff);
  5547  0015BA  C0CA  F0C6         	movff	CRC16@data,??_CRC16
  5548  0015BE  C0CB  F0C7         	movff	CRC16@data+1,??_CRC16+1
  5549  0015C2  C0C7  F0C6         	movff	??_CRC16+1,??_CRC16
  5550  0015C6  0100               	movlb	0	; () banked
  5551  0015C8  6BC7               	clrf	(??_CRC16+1)& (0+255),b
  5552  0015CA  0100               	movlb	0	; () banked
  5553  0015CC  51C6               	movf	??_CRC16& (0+255),w,b
  5554  0015CE  C0CD  F0C8         	movff	CRC16@crc,??_CRC16+2
  5555  0015D2  C0CE  F0C9         	movff	CRC16@crc+1,??_CRC16+3
  5556  0015D6  C0C8  F0C9         	movff	??_CRC16+2,??_CRC16+3
  5557  0015DA  0100               	movlb	0	; () banked
  5558  0015DC  6BC8               	clrf	(??_CRC16+2)& (0+255),b
  5559  0015DE  0100               	movlb	0	; () banked
  5560  0015E0  11C8               	iorwf	(??_CRC16+2)& (0+255),w,b
  5561  0015E2  0100               	movlb	0	; () banked
  5562  0015E4  6FCD               	movwf	CRC16@crc& (0+255),b
  5563  0015E6  0100               	movlb	0	; () banked
  5564  0015E8  51C9               	movf	(??_CRC16+3)& (0+255),w,b
  5565  0015EA  0100               	movlb	0	; () banked
  5566  0015EC  6FCE               	movwf	(CRC16@crc+1)& (0+255),b
  5567                           
  5568                           ; BSR set to: 0
  5569                           ;crc16.c: 44: return (crc);
  5570  0015EE  C0CD  F0C2         	movff	CRC16@crc,?_CRC16
  5571  0015F2  C0CE  F0C3         	movff	CRC16@crc+1,?_CRC16+1
  5572  0015F6  0012               	return	
  5573  0015F8                     __end_of_CRC16:
  5574                           	opt stack 0
  5575                           tblptru	equ	0xFF8
  5576                           tblptrh	equ	0xFF7
  5577                           tblptrl	equ	0xFF6
  5578                           tablat	equ	0xFF5
  5579                           prodh	equ	0xFF4
  5580                           prodl	equ	0xFF3
  5581                           indf0	equ	0xFEF
  5582                           postinc0	equ	0xFEE
  5583                           fsr0h	equ	0xFEA
  5584                           fsr0l	equ	0xFE9
  5585                           wreg	equ	0xFE8
  5586                           indf1	equ	0xFE7
  5587                           postdec1	equ	0xFE5
  5588                           fsr1h	equ	0xFE2
  5589                           fsr1l	equ	0xFE1
  5590                           indf2	equ	0xFDF
  5591                           postinc2	equ	0xFDE
  5592                           postdec2	equ	0xFDD
  5593                           fsr2h	equ	0xFDA
  5594                           fsr2l	equ	0xFD9
  5595                           status	equ	0xFD8
  5596                           
  5597 ;; *************** function _CheckBroadcastPacket *****************
  5598 ;; Defined at:
  5599 ;;		line 739 in file "Released IBC-1 Code - 03-06-2016/main.c"
  5600 ;; Parameters:    Size  Location     Type
  5601 ;;  Command         1    wreg     unsigned char 
  5602 ;; Auto vars:     Size  Location     Type
  5603 ;;  Command         1    0[BANK0 ] unsigned char 
  5604 ;; Return value:  Size  Location     Type
  5605 ;;                  1    wreg      void 
  5606 ;; Registers used:
  5607 ;;		wreg, status,2, status,0
  5608 ;; Tracked objects:
  5609 ;;		On entry : 0/0
  5610 ;;		On exit  : 0/0
  5611 ;;		Unchanged: 0/0
  5612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5613 ;;      Params:         0       0       0       0       0       0       0
  5614 ;;      Locals:         0       1       0       0       0       0       0
  5615 ;;      Temps:          0       0       0       0       0       0       0
  5616 ;;      Totals:         0       1       0       0       0       0       0
  5617 ;;Total ram usage:        1 bytes
  5618 ;; Hardware stack levels used:    1
  5619 ;; Hardware stack levels required when called:    5
  5620 ;; This function calls:
  5621 ;;		Nothing
  5622 ;; This function is called by:
  5623 ;;		_Receive_Pi_Packet
  5624 ;; This function uses a non-reentrant model
  5625 ;;
  5626                           
  5627                           	psect	text27
  5628  002DB8                     __ptext27:
  5629                           	opt stack 0
  5630  002DB8                     _CheckBroadcastPacket:
  5631                           	opt stack 24
  5632                           
  5633                           ; BSR set to: 0
  5634                           ;incstack = 0
  5635                           ;CheckBroadcastPacket@Command stored from wreg
  5636  002DB8  0100               	movlb	0	; () banked
  5637  002DBA  6FC2               	movwf	CheckBroadcastPacket@Command& (0+255),b
  5638                           
  5639                           ;main.c: 741: BroadcastCheckUC = (Command & 0b10000000);
  5640  002DBC  0100               	movlb	0	; () banked
  5641  002DBE  51C2               	movf	CheckBroadcastPacket@Command& (0+255),w,b
  5642  002DC0  0B80               	andlw	128
  5643  002DC2  6E3F               	movwf	_BroadcastCheckUC,c
  5644                           
  5645                           ; BSR set to: 0
  5646  002DC4  0012               	return		;funcret
  5647  002DC6                     __end_of_CheckBroadcastPacket:
  5648                           	opt stack 0
  5649                           tblptru	equ	0xFF8
  5650                           tblptrh	equ	0xFF7
  5651                           tblptrl	equ	0xFF6
  5652                           tablat	equ	0xFF5
  5653                           prodh	equ	0xFF4
  5654                           prodl	equ	0xFF3
  5655                           indf0	equ	0xFEF
  5656                           postinc0	equ	0xFEE
  5657                           fsr0h	equ	0xFEA
  5658                           fsr0l	equ	0xFE9
  5659                           wreg	equ	0xFE8
  5660                           indf1	equ	0xFE7
  5661                           postdec1	equ	0xFE5
  5662                           fsr1h	equ	0xFE2
  5663                           fsr1l	equ	0xFE1
  5664                           indf2	equ	0xFDF
  5665                           postinc2	equ	0xFDE
  5666                           postdec2	equ	0xFDD
  5667                           fsr2h	equ	0xFDA
  5668                           fsr2l	equ	0xFD9
  5669                           status	equ	0xFD8
  5670                           
  5671 ;; *************** function _ReadFireOut *****************
  5672 ;; Defined at:
  5673 ;;		line 1230 in file "Released IBC-1 Code - 03-06-2016/main.c"
  5674 ;; Parameters:    Size  Location     Type
  5675 ;;		None
  5676 ;; Auto vars:     Size  Location     Type
  5677 ;;  i               2   23[BANK0 ] int 
  5678 ;; Return value:  Size  Location     Type
  5679 ;;                  1    wreg      void 
  5680 ;; Registers used:
  5681 ;;		wreg, status,2, status,0, cstack
  5682 ;; Tracked objects:
  5683 ;;		On entry : 0/0
  5684 ;;		On exit  : 0/0
  5685 ;;		Unchanged: 0/0
  5686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5687 ;;      Params:         0       0       0       0       0       0       0
  5688 ;;      Locals:         0       2       0       0       0       0       0
  5689 ;;      Temps:          0       0       0       0       0       0       0
  5690 ;;      Totals:         0       2       0       0       0       0       0
  5691 ;;Total ram usage:        2 bytes
  5692 ;; Hardware stack levels used:    1
  5693 ;; Hardware stack levels required when called:    8
  5694 ;; This function calls:
  5695 ;;		_ReadAnalogVoltage
  5696 ;;		_ReadMAINS_ZeroCrossing
  5697 ;;		___ftadd
  5698 ;;		___ftdiv
  5699 ;;		___lwtoft
  5700 ;; This function is called by:
  5701 ;;		_main
  5702 ;; This function uses a non-reentrant model
  5703 ;;
  5704                           
  5705                           	psect	text28
  5706  0022A8                     __ptext28:
  5707                           	opt stack 0
  5708  0022A8                     _ReadFireOut:
  5709                           	opt stack 22
  5710                           
  5711                           ;main.c: 1232: for (int i = 0; i < 50; i++){
  5712                           
  5713                           ; BSR set to: 0
  5714                           ;incstack = 0
  5715  0022A8  0E00               	movlw	0
  5716  0022AA  0100               	movlb	0	; () banked
  5717  0022AC  6FDA               	movwf	(ReadFireOut@i+1)& (0+255),b
  5718  0022AE  0E00               	movlw	0
  5719  0022B0  6FD9               	movwf	ReadFireOut@i& (0+255),b
  5720  0022B2                     l5288:
  5721                           
  5722                           ; BSR set to: 0
  5723  0022B2  0100               	movlb	0	; () banked
  5724  0022B4  BFDA               	btfsc	(ReadFireOut@i+1)& (0+255),7,b
  5725  0022B6  D008               	goto	l5292
  5726  0022B8  0100               	movlb	0	; () banked
  5727  0022BA  51DA               	movf	(ReadFireOut@i+1)& (0+255),w,b
  5728  0022BC  E130               	bnz	l5302
  5729  0022BE  0E32               	movlw	50
  5730  0022C0  0100               	movlb	0	; () banked
  5731  0022C2  5DD9               	subwf	ReadFireOut@i& (0+255),w,b
  5732  0022C4  B0D8               	btfsc	status,0,c
  5733  0022C6  D02B               	goto	l5302
  5734  0022C8                     l5292:
  5735  0022C8  EC4D  F014         	call	_ReadMAINS_ZeroCrossing	;wreg free
  5736  0022CC  0900               	iorlw	0
  5737  0022CE  B4D8               	btfsc	status,2,c
  5738  0022D0  D7FB               	goto	l5292
  5739                           
  5740                           ;main.c: 1234: FireOutFloat += (float)ReadAnalogVoltage(3);
  5741  0022D2  C06A  F0CD         	movff	_FireOutFloat,___ftadd@f1
  5742  0022D6  C06B  F0CE         	movff	_FireOutFloat+1,___ftadd@f1+1
  5743  0022DA  C06C  F0CF         	movff	_FireOutFloat+2,___ftadd@f1+2
  5744  0022DE  0E03               	movlw	3
  5745  0022E0  ECA8  F014         	call	_ReadAnalogVoltage
  5746  0022E4  C0C2  F0CA         	movff	?_ReadAnalogVoltage,___lwtoft@c
  5747  0022E8  C0C3  F0CB         	movff	?_ReadAnalogVoltage+1,___lwtoft@c+1
  5748  0022EC  ECEC  F015         	call	___lwtoft	;wreg free
  5749  0022F0  C0CA  F0D0         	movff	?___lwtoft,___ftadd@f2
  5750  0022F4  C0CB  F0D1         	movff	?___lwtoft+1,___ftadd@f2+1
  5751  0022F8  C0CC  F0D2         	movff	?___lwtoft+2,___ftadd@f2+2
  5752  0022FC  ECD7  F007         	call	___ftadd	;wreg free
  5753  002300  C0CD  F06A         	movff	?___ftadd,_FireOutFloat
  5754  002304  C0CE  F06B         	movff	?___ftadd+1,_FireOutFloat+1
  5755  002308  C0CF  F06C         	movff	?___ftadd+2,_FireOutFloat+2
  5756  00230C                     l5296:
  5757  00230C  EC4D  F014         	call	_ReadMAINS_ZeroCrossing	;wreg free
  5758  002310  06E8               	decf	wreg,f,c
  5759  002312  B4D8               	btfsc	status,2,c
  5760  002314  D7FB               	goto	l5296
  5761  002316  0100               	movlb	0	; () banked
  5762  002318  4BD9               	infsnz	ReadFireOut@i& (0+255),f,b
  5763  00231A  2BDA               	incf	(ReadFireOut@i+1)& (0+255),f,b
  5764  00231C  D7CA               	goto	l5288
  5765  00231E                     l5302:
  5766                           
  5767                           ; BSR set to: 0
  5768                           ;main.c: 1236: }
  5769                           ;main.c: 1237: FireOutFloat = FireOutFloat/50.0;
  5770  00231E  C06A  F0CA         	movff	_FireOutFloat,___ftdiv@f1
  5771  002322  C06B  F0CB         	movff	_FireOutFloat+1,___ftdiv@f1+1
  5772  002326  C06C  F0CC         	movff	_FireOutFloat+2,___ftdiv@f1+2
  5773  00232A  0E00               	movlw	0
  5774  00232C  0100               	movlb	0	; () banked
  5775  00232E  6FCD               	movwf	___ftdiv@f2& (0+255),b
  5776  002330  0E48               	movlw	72
  5777  002332  0100               	movlb	0	; () banked
  5778  002334  6FCE               	movwf	(___ftdiv@f2+1)& (0+255),b
  5779  002336  0E42               	movlw	66
  5780  002338  0100               	movlb	0	; () banked
  5781  00233A  6FCF               	movwf	(___ftdiv@f2+2)& (0+255),b
  5782  00233C  ECBC  F009         	call	___ftdiv	;wreg free
  5783  002340  C0CA  F06A         	movff	?___ftdiv,_FireOutFloat
  5784  002344  C0CB  F06B         	movff	?___ftdiv+1,_FireOutFloat+1
  5785  002348  C0CC  F06C         	movff	?___ftdiv+2,_FireOutFloat+2
  5786  00234C  0012               	return		;funcret
  5787  00234E                     __end_of_ReadFireOut:
  5788                           	opt stack 0
  5789                           tblptru	equ	0xFF8
  5790                           tblptrh	equ	0xFF7
  5791                           tblptrl	equ	0xFF6
  5792                           tablat	equ	0xFF5
  5793                           prodh	equ	0xFF4
  5794                           prodl	equ	0xFF3
  5795                           indf0	equ	0xFEF
  5796                           postinc0	equ	0xFEE
  5797                           fsr0h	equ	0xFEA
  5798                           fsr0l	equ	0xFE9
  5799                           wreg	equ	0xFE8
  5800                           indf1	equ	0xFE7
  5801                           postdec1	equ	0xFE5
  5802                           fsr1h	equ	0xFE2
  5803                           fsr1l	equ	0xFE1
  5804                           indf2	equ	0xFDF
  5805                           postinc2	equ	0xFDE
  5806                           postdec2	equ	0xFDD
  5807                           fsr2h	equ	0xFDA
  5808                           fsr2l	equ	0xFD9
  5809                           status	equ	0xFD8
  5810                           
  5811 ;; *************** function ___lwtoft *****************
  5812 ;; Defined at:
  5813 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lwtoft.c"
  5814 ;; Parameters:    Size  Location     Type
  5815 ;;  c               2    8[BANK0 ] unsigned int 
  5816 ;; Auto vars:     Size  Location     Type
  5817 ;;		None
  5818 ;; Return value:  Size  Location     Type
  5819 ;;                  3    8[BANK0 ] float 
  5820 ;; Registers used:
  5821 ;;		wreg, status,2, status,0, cstack
  5822 ;; Tracked objects:
  5823 ;;		On entry : 0/0
  5824 ;;		On exit  : 0/0
  5825 ;;		Unchanged: 0/0
  5826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5827 ;;      Params:         0       3       0       0       0       0       0
  5828 ;;      Locals:         0       0       0       0       0       0       0
  5829 ;;      Temps:          0       0       0       0       0       0       0
  5830 ;;      Totals:         0       3       0       0       0       0       0
  5831 ;;Total ram usage:        3 bytes
  5832 ;; Hardware stack levels used:    1
  5833 ;; Hardware stack levels required when called:    6
  5834 ;; This function calls:
  5835 ;;		___ftpack
  5836 ;; This function is called by:
  5837 ;;		_ReadFireOut
  5838 ;; This function uses a non-reentrant model
  5839 ;;
  5840                           
  5841                           	psect	text29
  5842  002BD8                     __ptext29:
  5843                           	opt stack 0
  5844  002BD8                     ___lwtoft:
  5845                           	opt stack 23
  5846                           
  5847                           ;incstack = 0
  5848  002BD8  C0CA  F0C2         	movff	___lwtoft@c,___ftpack@arg
  5849  002BDC  C0CB  F0C3         	movff	___lwtoft@c+1,___ftpack@arg+1
  5850  002BE0  0100               	movlb	0	; () banked
  5851  002BE2  6BC4               	clrf	(___ftpack@arg+2)& (0+255),b
  5852  002BE4  0E8E               	movlw	142
  5853  002BE6  0100               	movlb	0	; () banked
  5854  002BE8  6FC5               	movwf	___ftpack@exp& (0+255),b
  5855  002BEA  0E00               	movlw	0
  5856  002BEC  0100               	movlb	0	; () banked
  5857  002BEE  6FC6               	movwf	___ftpack@sign& (0+255),b
  5858  002BF0  ECB4  F00C         	call	___ftpack	;wreg free
  5859  002BF4  C0C2  F0CA         	movff	?___ftpack,?___lwtoft
  5860  002BF8  C0C3  F0CB         	movff	?___ftpack+1,?___lwtoft+1
  5861  002BFC  C0C4  F0CC         	movff	?___ftpack+2,?___lwtoft+2
  5862  002C00  0012               	return	
  5863  002C02                     __end_of___lwtoft:
  5864                           	opt stack 0
  5865                           tblptru	equ	0xFF8
  5866                           tblptrh	equ	0xFF7
  5867                           tblptrl	equ	0xFF6
  5868                           tablat	equ	0xFF5
  5869                           prodh	equ	0xFF4
  5870                           prodl	equ	0xFF3
  5871                           indf0	equ	0xFEF
  5872                           postinc0	equ	0xFEE
  5873                           fsr0h	equ	0xFEA
  5874                           fsr0l	equ	0xFE9
  5875                           wreg	equ	0xFE8
  5876                           indf1	equ	0xFE7
  5877                           postdec1	equ	0xFE5
  5878                           fsr1h	equ	0xFE2
  5879                           fsr1l	equ	0xFE1
  5880                           indf2	equ	0xFDF
  5881                           postinc2	equ	0xFDE
  5882                           postdec2	equ	0xFDD
  5883                           fsr2h	equ	0xFDA
  5884                           fsr2l	equ	0xFD9
  5885                           status	equ	0xFD8
  5886                           
  5887 ;; *************** function ___ftdiv *****************
  5888 ;; Defined at:
  5889 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\ftdiv.c"
  5890 ;; Parameters:    Size  Location     Type
  5891 ;;  f1              3    8[BANK0 ] float 
  5892 ;;  f2              3   11[BANK0 ] float 
  5893 ;; Auto vars:     Size  Location     Type
  5894 ;;  f3              3   18[BANK0 ] float 
  5895 ;;  sign            1   22[BANK0 ] unsigned char 
  5896 ;;  exp             1   21[BANK0 ] unsigned char 
  5897 ;;  cntr            1   17[BANK0 ] unsigned char 
  5898 ;; Return value:  Size  Location     Type
  5899 ;;                  3    8[BANK0 ] float 
  5900 ;; Registers used:
  5901 ;;		wreg, status,2, status,0, cstack
  5902 ;; Tracked objects:
  5903 ;;		On entry : 0/0
  5904 ;;		On exit  : 0/0
  5905 ;;		Unchanged: 0/0
  5906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5907 ;;      Params:         0       6       0       0       0       0       0
  5908 ;;      Locals:         0       6       0       0       0       0       0
  5909 ;;      Temps:          0       3       0       0       0       0       0
  5910 ;;      Totals:         0      15       0       0       0       0       0
  5911 ;;Total ram usage:       15 bytes
  5912 ;; Hardware stack levels used:    1
  5913 ;; Hardware stack levels required when called:    6
  5914 ;; This function calls:
  5915 ;;		___ftpack
  5916 ;; This function is called by:
  5917 ;;		_ReadFireOut
  5918 ;; This function uses a non-reentrant model
  5919 ;;
  5920                           
  5921                           	psect	text30
  5922  001378                     __ptext30:
  5923                           	opt stack 0
  5924  001378                     ___ftdiv:
  5925                           	opt stack 23
  5926                           
  5927                           ;incstack = 0
  5928  001378  C0CC  F0D0         	movff	___ftdiv@f1+2,??___ftdiv
  5929  00137C  0100               	movlb	0	; () banked
  5930  00137E  6BD1               	clrf	(??___ftdiv+1)& (0+255),b
  5931  001380  6BD2               	clrf	(??___ftdiv+2)& (0+255),b
  5932  001382  0100               	movlb	0	; () banked
  5933  001384  35CB               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  5934  001386  0100               	movlb	0	; () banked
  5935  001388  37D0               	rlcf	??___ftdiv& (0+255),f,b
  5936  00138A  E301               	bnc	u3541
  5937  00138C  81D1               	bsf	(??___ftdiv+1)& (0+255),0,b
  5938  00138E                     u3541:
  5939  00138E  0100               	movlb	0	; () banked
  5940  001390  51D0               	movf	??___ftdiv& (0+255),w,b
  5941  001392  0100               	movlb	0	; () banked
  5942  001394  6FD7               	movwf	___ftdiv@exp& (0+255),b
  5943  001396  0100               	movlb	0	; () banked
  5944  001398  51D7               	movf	___ftdiv@exp& (0+255),w,b
  5945  00139A  A4D8               	btfss	status,2,c
  5946  00139C  D00A               	goto	l4582
  5947                           
  5948                           ; BSR set to: 0
  5949  00139E  0E00               	movlw	0
  5950  0013A0  0100               	movlb	0	; () banked
  5951  0013A2  6FCA               	movwf	?___ftdiv& (0+255),b
  5952  0013A4  0E00               	movlw	0
  5953  0013A6  0100               	movlb	0	; () banked
  5954  0013A8  6FCB               	movwf	(?___ftdiv+1)& (0+255),b
  5955  0013AA  0E00               	movlw	0
  5956  0013AC  0100               	movlb	0	; () banked
  5957  0013AE  6FCC               	movwf	(?___ftdiv+2)& (0+255),b
  5958                           
  5959                           ; BSR set to: 0
  5960  0013B0  0012               	return	
  5961  0013B2                     l4582:
  5962                           
  5963                           ; BSR set to: 0
  5964  0013B2  C0CF  F0D0         	movff	___ftdiv@f2+2,??___ftdiv
  5965  0013B6  0100               	movlb	0	; () banked
  5966  0013B8  6BD1               	clrf	(??___ftdiv+1)& (0+255),b
  5967  0013BA  6BD2               	clrf	(??___ftdiv+2)& (0+255),b
  5968  0013BC  0100               	movlb	0	; () banked
  5969  0013BE  35CE               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  5970  0013C0  0100               	movlb	0	; () banked
  5971  0013C2  37D0               	rlcf	??___ftdiv& (0+255),f,b
  5972  0013C4  E301               	bnc	u3561
  5973  0013C6  81D1               	bsf	(??___ftdiv+1)& (0+255),0,b
  5974  0013C8                     u3561:
  5975  0013C8  0100               	movlb	0	; () banked
  5976  0013CA  51D0               	movf	??___ftdiv& (0+255),w,b
  5977  0013CC  0100               	movlb	0	; () banked
  5978  0013CE  6FD8               	movwf	___ftdiv@sign& (0+255),b
  5979  0013D0  0100               	movlb	0	; () banked
  5980  0013D2  51D8               	movf	___ftdiv@sign& (0+255),w,b
  5981  0013D4  A4D8               	btfss	status,2,c
  5982  0013D6  D00A               	goto	l4588
  5983                           
  5984                           ; BSR set to: 0
  5985  0013D8  0E00               	movlw	0
  5986  0013DA  0100               	movlb	0	; () banked
  5987  0013DC  6FCA               	movwf	?___ftdiv& (0+255),b
  5988  0013DE  0E00               	movlw	0
  5989  0013E0  0100               	movlb	0	; () banked
  5990  0013E2  6FCB               	movwf	(?___ftdiv+1)& (0+255),b
  5991  0013E4  0E00               	movlw	0
  5992  0013E6  0100               	movlb	0	; () banked
  5993  0013E8  6FCC               	movwf	(?___ftdiv+2)& (0+255),b
  5994                           
  5995                           ; BSR set to: 0
  5996  0013EA  0012               	return	
  5997  0013EC                     l4588:
  5998                           
  5999                           ; BSR set to: 0
  6000  0013EC  0E00               	movlw	0
  6001  0013EE  0100               	movlb	0	; () banked
  6002  0013F0  6FD4               	movwf	___ftdiv@f3& (0+255),b
  6003  0013F2  0E00               	movlw	0
  6004  0013F4  0100               	movlb	0	; () banked
  6005  0013F6  6FD5               	movwf	(___ftdiv@f3+1)& (0+255),b
  6006  0013F8  0E00               	movlw	0
  6007  0013FA  0100               	movlb	0	; () banked
  6008  0013FC  6FD6               	movwf	(___ftdiv@f3+2)& (0+255),b
  6009                           
  6010                           ; BSR set to: 0
  6011  0013FE  0100               	movlb	0	; () banked
  6012  001400  51D8               	movf	___ftdiv@sign& (0+255),w,b
  6013  001402  0F89               	addlw	137
  6014  001404  0100               	movlb	0	; () banked
  6015  001406  5FD7               	subwf	___ftdiv@exp& (0+255),f,b
  6016                           
  6017                           ; BSR set to: 0
  6018  001408  C0CC  F0D8         	movff	___ftdiv@f1+2,___ftdiv@sign
  6019                           
  6020                           ; BSR set to: 0
  6021  00140C  0100               	movlb	0	; () banked
  6022  00140E  51CF               	movf	(___ftdiv@f2+2)& (0+255),w,b
  6023  001410  0100               	movlb	0	; () banked
  6024  001412  1BD8               	xorwf	___ftdiv@sign& (0+255),f,b
  6025                           
  6026                           ; BSR set to: 0
  6027  001414  0E80               	movlw	128
  6028  001416  0100               	movlb	0	; () banked
  6029  001418  17D8               	andwf	___ftdiv@sign& (0+255),f,b
  6030                           
  6031                           ; BSR set to: 0
  6032  00141A  0100               	movlb	0	; () banked
  6033  00141C  8FCB               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  6034                           
  6035                           ; BSR set to: 0
  6036  00141E  0EFF               	movlw	255
  6037  001420  0100               	movlb	0	; () banked
  6038  001422  17CA               	andwf	___ftdiv@f1& (0+255),f,b
  6039  001424  0EFF               	movlw	255
  6040  001426  0100               	movlb	0	; () banked
  6041  001428  17CB               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  6042  00142A  0E00               	movlw	0
  6043  00142C  0100               	movlb	0	; () banked
  6044  00142E  17CC               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  6045                           
  6046                           ; BSR set to: 0
  6047  001430  0100               	movlb	0	; () banked
  6048  001432  8FCE               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  6049                           
  6050                           ; BSR set to: 0
  6051  001434  0EFF               	movlw	255
  6052  001436  0100               	movlb	0	; () banked
  6053  001438  17CD               	andwf	___ftdiv@f2& (0+255),f,b
  6054  00143A  0EFF               	movlw	255
  6055  00143C  0100               	movlb	0	; () banked
  6056  00143E  17CE               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  6057  001440  0E00               	movlw	0
  6058  001442  0100               	movlb	0	; () banked
  6059  001444  17CF               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  6060                           
  6061                           ; BSR set to: 0
  6062  001446  0E18               	movlw	24
  6063  001448  0100               	movlb	0	; () banked
  6064  00144A  6FD3               	movwf	___ftdiv@cntr& (0+255),b
  6065  00144C                     l4608:
  6066                           
  6067                           ; BSR set to: 0
  6068  00144C  0100               	movlb	0	; () banked
  6069  00144E  90D8               	bcf	status,0,c
  6070  001450  37D4               	rlcf	___ftdiv@f3& (0+255),f,b
  6071  001452  37D5               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  6072  001454  37D6               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  6073                           
  6074                           ; BSR set to: 0
  6075  001456  0100               	movlb	0	; () banked
  6076  001458  51CD               	movf	___ftdiv@f2& (0+255),w,b
  6077  00145A  0100               	movlb	0	; () banked
  6078  00145C  5DCA               	subwf	___ftdiv@f1& (0+255),w,b
  6079  00145E  0100               	movlb	0	; () banked
  6080  001460  51CE               	movf	(___ftdiv@f2+1)& (0+255),w,b
  6081  001462  0100               	movlb	0	; () banked
  6082  001464  59CB               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  6083  001466  0100               	movlb	0	; () banked
  6084  001468  51CF               	movf	(___ftdiv@f2+2)& (0+255),w,b
  6085  00146A  0100               	movlb	0	; () banked
  6086  00146C  59CC               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  6087  00146E  A0D8               	btfss	status,0,c
  6088  001470  D00E               	goto	l1303
  6089                           
  6090                           ; BSR set to: 0
  6091  001472  0100               	movlb	0	; () banked
  6092  001474  51CD               	movf	___ftdiv@f2& (0+255),w,b
  6093  001476  0100               	movlb	0	; () banked
  6094  001478  5FCA               	subwf	___ftdiv@f1& (0+255),f,b
  6095  00147A  0100               	movlb	0	; () banked
  6096  00147C  51CE               	movf	(___ftdiv@f2+1)& (0+255),w,b
  6097  00147E  0100               	movlb	0	; () banked
  6098  001480  5BCB               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  6099  001482  0100               	movlb	0	; () banked
  6100  001484  51CF               	movf	(___ftdiv@f2+2)& (0+255),w,b
  6101  001486  0100               	movlb	0	; () banked
  6102  001488  5BCC               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  6103                           
  6104                           ; BSR set to: 0
  6105  00148A  0100               	movlb	0	; () banked
  6106  00148C  81D4               	bsf	___ftdiv@f3& (0+255),0,b
  6107  00148E                     l1303:
  6108                           
  6109                           ; BSR set to: 0
  6110  00148E  0100               	movlb	0	; () banked
  6111  001490  90D8               	bcf	status,0,c
  6112  001492  37CA               	rlcf	___ftdiv@f1& (0+255),f,b
  6113  001494  37CB               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  6114  001496  37CC               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  6115                           
  6116                           ; BSR set to: 0
  6117  001498  0100               	movlb	0	; () banked
  6118  00149A  2FD3               	decfsz	___ftdiv@cntr& (0+255),f,b
  6119  00149C  D7D7               	goto	l4608
  6120                           
  6121                           ; BSR set to: 0
  6122                           
  6123                           ; BSR set to: 0
  6124  00149E  C0D4  F0C2         	movff	___ftdiv@f3,___ftpack@arg
  6125  0014A2  C0D5  F0C3         	movff	___ftdiv@f3+1,___ftpack@arg+1
  6126  0014A6  C0D6  F0C4         	movff	___ftdiv@f3+2,___ftpack@arg+2
  6127  0014AA  C0D7  F0C5         	movff	___ftdiv@exp,___ftpack@exp
  6128  0014AE  C0D8  F0C6         	movff	___ftdiv@sign,___ftpack@sign
  6129  0014B2  ECB4  F00C         	call	___ftpack	;wreg free
  6130  0014B6  C0C2  F0CA         	movff	?___ftpack,?___ftdiv
  6131  0014BA  C0C3  F0CB         	movff	?___ftpack+1,?___ftdiv+1
  6132  0014BE  C0C4  F0CC         	movff	?___ftpack+2,?___ftdiv+2
  6133  0014C2  0012               	return	
  6134  0014C4                     __end_of___ftdiv:
  6135                           	opt stack 0
  6136                           tblptru	equ	0xFF8
  6137                           tblptrh	equ	0xFF7
  6138                           tblptrl	equ	0xFF6
  6139                           tablat	equ	0xFF5
  6140                           prodh	equ	0xFF4
  6141                           prodl	equ	0xFF3
  6142                           indf0	equ	0xFEF
  6143                           postinc0	equ	0xFEE
  6144                           fsr0h	equ	0xFEA
  6145                           fsr0l	equ	0xFE9
  6146                           wreg	equ	0xFE8
  6147                           indf1	equ	0xFE7
  6148                           postdec1	equ	0xFE5
  6149                           fsr1h	equ	0xFE2
  6150                           fsr1l	equ	0xFE1
  6151                           indf2	equ	0xFDF
  6152                           postinc2	equ	0xFDE
  6153                           postdec2	equ	0xFDD
  6154                           fsr2h	equ	0xFDA
  6155                           fsr2l	equ	0xFD9
  6156                           status	equ	0xFD8
  6157                           
  6158 ;; *************** function ___ftadd *****************
  6159 ;; Defined at:
  6160 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\ftadd.c"
  6161 ;; Parameters:    Size  Location     Type
  6162 ;;  f1              3   11[BANK0 ] float 
  6163 ;;  f2              3   14[BANK0 ] float 
  6164 ;; Auto vars:     Size  Location     Type
  6165 ;;  exp1            1   22[BANK0 ] unsigned char 
  6166 ;;  exp2            1   21[BANK0 ] unsigned char 
  6167 ;;  sign            1   20[BANK0 ] unsigned char 
  6168 ;; Return value:  Size  Location     Type
  6169 ;;                  3   11[BANK0 ] float 
  6170 ;; Registers used:
  6171 ;;		wreg, status,2, status,0, cstack
  6172 ;; Tracked objects:
  6173 ;;		On entry : 0/0
  6174 ;;		On exit  : 0/0
  6175 ;;		Unchanged: 0/0
  6176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6177 ;;      Params:         0       6       0       0       0       0       0
  6178 ;;      Locals:         0       3       0       0       0       0       0
  6179 ;;      Temps:          0       3       0       0       0       0       0
  6180 ;;      Totals:         0      12       0       0       0       0       0
  6181 ;;Total ram usage:       12 bytes
  6182 ;; Hardware stack levels used:    1
  6183 ;; Hardware stack levels required when called:    6
  6184 ;; This function calls:
  6185 ;;		___ftpack
  6186 ;; This function is called by:
  6187 ;;		_ReadFireOut
  6188 ;; This function uses a non-reentrant model
  6189 ;;
  6190                           
  6191                           	psect	text31
  6192  000FAE                     __ptext31:
  6193                           	opt stack 0
  6194  000FAE                     ___ftadd:
  6195                           	opt stack 23
  6196                           
  6197                           ;incstack = 0
  6198  000FAE  C0CF  F0D3         	movff	___ftadd@f1+2,??___ftadd
  6199  000FB2  0100               	movlb	0	; () banked
  6200  000FB4  6BD4               	clrf	(??___ftadd+1)& (0+255),b
  6201  000FB6  6BD5               	clrf	(??___ftadd+2)& (0+255),b
  6202  000FB8  0100               	movlb	0	; () banked
  6203  000FBA  35CE               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  6204  000FBC  0100               	movlb	0	; () banked
  6205  000FBE  37D3               	rlcf	??___ftadd& (0+255),f,b
  6206  000FC0  E301               	bnc	u3331
  6207  000FC2  81D4               	bsf	(??___ftadd+1)& (0+255),0,b
  6208  000FC4                     u3331:
  6209  000FC4  0100               	movlb	0	; () banked
  6210  000FC6  51D3               	movf	??___ftadd& (0+255),w,b
  6211  000FC8  0100               	movlb	0	; () banked
  6212  000FCA  6FD8               	movwf	___ftadd@exp1& (0+255),b
  6213  000FCC  C0D2  F0D3         	movff	___ftadd@f2+2,??___ftadd
  6214  000FD0  0100               	movlb	0	; () banked
  6215  000FD2  6BD4               	clrf	(??___ftadd+1)& (0+255),b
  6216  000FD4  6BD5               	clrf	(??___ftadd+2)& (0+255),b
  6217  000FD6  0100               	movlb	0	; () banked
  6218  000FD8  35D1               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  6219  000FDA  0100               	movlb	0	; () banked
  6220  000FDC  37D3               	rlcf	??___ftadd& (0+255),f,b
  6221  000FDE  E301               	bnc	u3341
  6222  000FE0  81D4               	bsf	(??___ftadd+1)& (0+255),0,b
  6223  000FE2                     u3341:
  6224  000FE2  0100               	movlb	0	; () banked
  6225  000FE4  51D3               	movf	??___ftadd& (0+255),w,b
  6226  000FE6  0100               	movlb	0	; () banked
  6227  000FE8  6FD7               	movwf	___ftadd@exp2& (0+255),b
  6228                           
  6229                           ; BSR set to: 0
  6230  000FEA  0100               	movlb	0	; () banked
  6231  000FEC  51D8               	movf	___ftadd@exp1& (0+255),w,b
  6232  000FEE  0100               	movlb	0	; () banked
  6233  000FF0  B4D8               	btfsc	status,2,c
  6234  000FF2  D011               	goto	l1268
  6235                           
  6236                           ; BSR set to: 0
  6237  000FF4  0100               	movlb	0	; () banked
  6238  000FF6  51D7               	movf	___ftadd@exp2& (0+255),w,b
  6239  000FF8  0100               	movlb	0	; () banked
  6240  000FFA  5DD8               	subwf	___ftadd@exp1& (0+255),w,b
  6241  000FFC  B0D8               	btfsc	status,0,c
  6242  000FFE  D012               	goto	l4514
  6243                           
  6244                           ; BSR set to: 0
  6245  001000  0100               	movlb	0	; () banked
  6246  001002  51D8               	movf	___ftadd@exp1& (0+255),w,b
  6247  001004  0800               	sublw	0
  6248  001006  0100               	movlb	0	; () banked
  6249  001008  25D7               	addwf	___ftadd@exp2& (0+255),w,b
  6250  00100A  0100               	movlb	0	; () banked
  6251  00100C  6FD3               	movwf	??___ftadd& (0+255),b
  6252  00100E  0E18               	movlw	24
  6253  001010  0100               	movlb	0	; () banked
  6254  001012  65D3               	cpfsgt	??___ftadd& (0+255),b
  6255  001014  D007               	goto	l4514
  6256  001016                     l1268:
  6257                           
  6258                           ; BSR set to: 0
  6259  001016  C0D0  F0CD         	movff	___ftadd@f2,?___ftadd
  6260  00101A  C0D1  F0CE         	movff	___ftadd@f2+1,?___ftadd+1
  6261  00101E  C0D2  F0CF         	movff	___ftadd@f2+2,?___ftadd+2
  6262  001022  0012               	return	
  6263  001024                     l4514:
  6264                           
  6265                           ; BSR set to: 0
  6266  001024  0100               	movlb	0	; () banked
  6267  001026  51D7               	movf	___ftadd@exp2& (0+255),w,b
  6268  001028  0100               	movlb	0	; () banked
  6269  00102A  B4D8               	btfsc	status,2,c
  6270  00102C  D011               	goto	l1272
  6271                           
  6272                           ; BSR set to: 0
  6273  00102E  0100               	movlb	0	; () banked
  6274  001030  51D8               	movf	___ftadd@exp1& (0+255),w,b
  6275  001032  0100               	movlb	0	; () banked
  6276  001034  5DD7               	subwf	___ftadd@exp2& (0+255),w,b
  6277  001036  B0D8               	btfsc	status,0,c
  6278  001038  D012               	goto	l4520
  6279                           
  6280                           ; BSR set to: 0
  6281  00103A  0100               	movlb	0	; () banked
  6282  00103C  51D7               	movf	___ftadd@exp2& (0+255),w,b
  6283  00103E  0800               	sublw	0
  6284  001040  0100               	movlb	0	; () banked
  6285  001042  25D8               	addwf	___ftadd@exp1& (0+255),w,b
  6286  001044  0100               	movlb	0	; () banked
  6287  001046  6FD3               	movwf	??___ftadd& (0+255),b
  6288  001048  0E18               	movlw	24
  6289  00104A  0100               	movlb	0	; () banked
  6290  00104C  65D3               	cpfsgt	??___ftadd& (0+255),b
  6291  00104E  D007               	goto	l4520
  6292  001050                     l1272:
  6293                           
  6294                           ; BSR set to: 0
  6295  001050  C0CD  F0CD         	movff	___ftadd@f1,?___ftadd
  6296  001054  C0CE  F0CE         	movff	___ftadd@f1+1,?___ftadd+1
  6297  001058  C0CF  F0CF         	movff	___ftadd@f1+2,?___ftadd+2
  6298  00105C  0012               	return	
  6299  00105E                     l4520:
  6300                           
  6301                           ; BSR set to: 0
  6302  00105E  0E06               	movlw	6
  6303  001060  0100               	movlb	0	; () banked
  6304  001062  6FD6               	movwf	___ftadd@sign& (0+255),b
  6305                           
  6306                           ; BSR set to: 0
  6307  001064  0100               	movlb	0	; () banked
  6308  001066  AFCF               	btfss	(___ftadd@f1+2)& (0+255),7,b
  6309  001068  D002               	goto	l4526
  6310                           
  6311                           ; BSR set to: 0
  6312  00106A  0100               	movlb	0	; () banked
  6313  00106C  8FD6               	bsf	___ftadd@sign& (0+255),7,b
  6314  00106E                     l4526:
  6315                           
  6316                           ; BSR set to: 0
  6317  00106E  0100               	movlb	0	; () banked
  6318  001070  AFD2               	btfss	(___ftadd@f2+2)& (0+255),7,b
  6319  001072  D002               	goto	l1274
  6320                           
  6321                           ; BSR set to: 0
  6322  001074  0100               	movlb	0	; () banked
  6323  001076  8DD6               	bsf	___ftadd@sign& (0+255),6,b
  6324  001078                     l1274:
  6325                           
  6326                           ; BSR set to: 0
  6327  001078  0100               	movlb	0	; () banked
  6328  00107A  8FCE               	bsf	(___ftadd@f1+1)& (0+255),7,b
  6329                           
  6330                           ; BSR set to: 0
  6331  00107C  0EFF               	movlw	255
  6332  00107E  0100               	movlb	0	; () banked
  6333  001080  17CD               	andwf	___ftadd@f1& (0+255),f,b
  6334  001082  0EFF               	movlw	255
  6335  001084  0100               	movlb	0	; () banked
  6336  001086  17CE               	andwf	(___ftadd@f1+1)& (0+255),f,b
  6337  001088  0E00               	movlw	0
  6338  00108A  0100               	movlb	0	; () banked
  6339  00108C  17CF               	andwf	(___ftadd@f1+2)& (0+255),f,b
  6340  00108E  0100               	movlb	0	; () banked
  6341  001090  8FD1               	bsf	(___ftadd@f2+1)& (0+255),7,b
  6342                           
  6343                           ; BSR set to: 0
  6344  001092  0EFF               	movlw	255
  6345  001094  0100               	movlb	0	; () banked
  6346  001096  17D0               	andwf	___ftadd@f2& (0+255),f,b
  6347  001098  0EFF               	movlw	255
  6348  00109A  0100               	movlb	0	; () banked
  6349  00109C  17D1               	andwf	(___ftadd@f2+1)& (0+255),f,b
  6350  00109E  0E00               	movlw	0
  6351  0010A0  0100               	movlb	0	; () banked
  6352  0010A2  17D2               	andwf	(___ftadd@f2+2)& (0+255),f,b
  6353                           
  6354                           ; BSR set to: 0
  6355  0010A4  0100               	movlb	0	; () banked
  6356  0010A6  51D7               	movf	___ftadd@exp2& (0+255),w,b
  6357  0010A8  0100               	movlb	0	; () banked
  6358  0010AA  5DD8               	subwf	___ftadd@exp1& (0+255),w,b
  6359  0010AC  B0D8               	btfsc	status,0,c
  6360  0010AE  D025               	goto	l4546
  6361  0010B0                     l4536:
  6362                           
  6363                           ; BSR set to: 0
  6364  0010B0  0100               	movlb	0	; () banked
  6365  0010B2  90D8               	bcf	status,0,c
  6366  0010B4  37D0               	rlcf	___ftadd@f2& (0+255),f,b
  6367  0010B6  37D1               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  6368  0010B8  37D2               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  6369  0010BA  0100               	movlb	0	; () banked
  6370  0010BC  07D7               	decf	___ftadd@exp2& (0+255),f,b
  6371                           
  6372                           ; BSR set to: 0
  6373  0010BE  0100               	movlb	0	; () banked
  6374  0010C0  51D8               	movf	___ftadd@exp1& (0+255),w,b
  6375  0010C2  0100               	movlb	0	; () banked
  6376  0010C4  19D7               	xorwf	___ftadd@exp2& (0+255),w,b
  6377  0010C6  B4D8               	btfsc	status,2,c
  6378  0010C8  D011               	goto	l4544
  6379                           
  6380                           ; BSR set to: 0
  6381  0010CA  0100               	movlb	0	; () banked
  6382  0010CC  07D6               	decf	___ftadd@sign& (0+255),f,b
  6383  0010CE  C0D6  F0D3         	movff	___ftadd@sign,??___ftadd
  6384  0010D2  0E07               	movlw	7
  6385  0010D4  0100               	movlb	0	; () banked
  6386  0010D6  17D3               	andwf	??___ftadd& (0+255),f,b
  6387  0010D8  B4D8               	btfsc	status,2,c
  6388  0010DA  D008               	goto	l4544
  6389  0010DC  D7E9               	goto	l4536
  6390  0010DE                     l4542:
  6391                           
  6392                           ; BSR set to: 0
  6393  0010DE  0100               	movlb	0	; () banked
  6394  0010E0  90D8               	bcf	status,0,c
  6395  0010E2  33CF               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  6396  0010E4  33CE               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  6397  0010E6  33CD               	rrcf	___ftadd@f1& (0+255),f,b
  6398  0010E8  0100               	movlb	0	; () banked
  6399  0010EA  2BD8               	incf	___ftadd@exp1& (0+255),f,b
  6400  0010EC                     l4544:
  6401                           
  6402                           ; BSR set to: 0
  6403  0010EC  0100               	movlb	0	; () banked
  6404  0010EE  51D7               	movf	___ftadd@exp2& (0+255),w,b
  6405  0010F0  0100               	movlb	0	; () banked
  6406  0010F2  19D8               	xorwf	___ftadd@exp1& (0+255),w,b
  6407  0010F4  B4D8               	btfsc	status,2,c
  6408  0010F6  D02B               	goto	l1283
  6409  0010F8  D7F2               	goto	l4542
  6410  0010FA                     l4546:
  6411                           
  6412                           ; BSR set to: 0
  6413  0010FA  0100               	movlb	0	; () banked
  6414  0010FC  51D8               	movf	___ftadd@exp1& (0+255),w,b
  6415  0010FE  0100               	movlb	0	; () banked
  6416  001100  5DD7               	subwf	___ftadd@exp2& (0+255),w,b
  6417  001102  B0D8               	btfsc	status,0,c
  6418  001104  D024               	goto	l1283
  6419  001106                     l4548:
  6420                           
  6421                           ; BSR set to: 0
  6422  001106  0100               	movlb	0	; () banked
  6423  001108  90D8               	bcf	status,0,c
  6424  00110A  37CD               	rlcf	___ftadd@f1& (0+255),f,b
  6425  00110C  37CE               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  6426  00110E  37CF               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  6427  001110  0100               	movlb	0	; () banked
  6428  001112  07D8               	decf	___ftadd@exp1& (0+255),f,b
  6429                           
  6430                           ; BSR set to: 0
  6431  001114  0100               	movlb	0	; () banked
  6432  001116  51D8               	movf	___ftadd@exp1& (0+255),w,b
  6433  001118  0100               	movlb	0	; () banked
  6434  00111A  19D7               	xorwf	___ftadd@exp2& (0+255),w,b
  6435  00111C  B4D8               	btfsc	status,2,c
  6436  00111E  D011               	goto	l4556
  6437                           
  6438                           ; BSR set to: 0
  6439  001120  0100               	movlb	0	; () banked
  6440  001122  07D6               	decf	___ftadd@sign& (0+255),f,b
  6441  001124  C0D6  F0D3         	movff	___ftadd@sign,??___ftadd
  6442  001128  0E07               	movlw	7
  6443  00112A  0100               	movlb	0	; () banked
  6444  00112C  17D3               	andwf	??___ftadd& (0+255),f,b
  6445  00112E  B4D8               	btfsc	status,2,c
  6446  001130  D008               	goto	l4556
  6447  001132  D7E9               	goto	l4548
  6448  001134                     l4554:
  6449                           
  6450                           ; BSR set to: 0
  6451  001134  0100               	movlb	0	; () banked
  6452  001136  90D8               	bcf	status,0,c
  6453  001138  33D2               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  6454  00113A  33D1               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  6455  00113C  33D0               	rrcf	___ftadd@f2& (0+255),f,b
  6456  00113E  0100               	movlb	0	; () banked
  6457  001140  2BD7               	incf	___ftadd@exp2& (0+255),f,b
  6458  001142                     l4556:
  6459                           
  6460                           ; BSR set to: 0
  6461  001142  0100               	movlb	0	; () banked
  6462  001144  51D7               	movf	___ftadd@exp2& (0+255),w,b
  6463  001146  0100               	movlb	0	; () banked
  6464  001148  19D8               	xorwf	___ftadd@exp1& (0+255),w,b
  6465  00114A  A4D8               	btfss	status,2,c
  6466  00114C  D7F3               	goto	l4554
  6467  00114E                     l1283:
  6468                           
  6469                           ; BSR set to: 0
  6470  00114E  0100               	movlb	0	; () banked
  6471  001150  AFD6               	btfss	___ftadd@sign& (0+255),7,b
  6472  001152  D012               	goto	l1292
  6473                           
  6474                           ; BSR set to: 0
  6475  001154  0EFF               	movlw	255
  6476  001156  0100               	movlb	0	; () banked
  6477  001158  1BCD               	xorwf	___ftadd@f1& (0+255),f,b
  6478  00115A  0EFF               	movlw	255
  6479  00115C  0100               	movlb	0	; () banked
  6480  00115E  1BCE               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  6481  001160  0EFF               	movlw	255
  6482  001162  0100               	movlb	0	; () banked
  6483  001164  1BCF               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  6484  001166  0E01               	movlw	1
  6485  001168  0100               	movlb	0	; () banked
  6486  00116A  27CD               	addwf	___ftadd@f1& (0+255),f,b
  6487  00116C  0E00               	movlw	0
  6488  00116E  0100               	movlb	0	; () banked
  6489  001170  23CE               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  6490  001172  0E00               	movlw	0
  6491  001174  0100               	movlb	0	; () banked
  6492  001176  23CF               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  6493  001178                     l1292:
  6494                           
  6495                           ; BSR set to: 0
  6496  001178  0100               	movlb	0	; () banked
  6497  00117A  ADD6               	btfss	___ftadd@sign& (0+255),6,b
  6498  00117C  D012               	goto	l4562
  6499                           
  6500                           ; BSR set to: 0
  6501  00117E  0EFF               	movlw	255
  6502  001180  0100               	movlb	0	; () banked
  6503  001182  1BD0               	xorwf	___ftadd@f2& (0+255),f,b
  6504  001184  0EFF               	movlw	255
  6505  001186  0100               	movlb	0	; () banked
  6506  001188  1BD1               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  6507  00118A  0EFF               	movlw	255
  6508  00118C  0100               	movlb	0	; () banked
  6509  00118E  1BD2               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  6510  001190  0E01               	movlw	1
  6511  001192  0100               	movlb	0	; () banked
  6512  001194  27D0               	addwf	___ftadd@f2& (0+255),f,b
  6513  001196  0E00               	movlw	0
  6514  001198  0100               	movlb	0	; () banked
  6515  00119A  23D1               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  6516  00119C  0E00               	movlw	0
  6517  00119E  0100               	movlb	0	; () banked
  6518  0011A0  23D2               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  6519  0011A2                     l4562:
  6520                           
  6521                           ; BSR set to: 0
  6522  0011A2  0E00               	movlw	0
  6523  0011A4  0100               	movlb	0	; () banked
  6524  0011A6  6FD6               	movwf	___ftadd@sign& (0+255),b
  6525                           
  6526                           ; BSR set to: 0
  6527  0011A8  0100               	movlb	0	; () banked
  6528  0011AA  51CD               	movf	___ftadd@f1& (0+255),w,b
  6529  0011AC  0100               	movlb	0	; () banked
  6530  0011AE  27D0               	addwf	___ftadd@f2& (0+255),f,b
  6531  0011B0  0100               	movlb	0	; () banked
  6532  0011B2  51CE               	movf	(___ftadd@f1+1)& (0+255),w,b
  6533  0011B4  0100               	movlb	0	; () banked
  6534  0011B6  23D1               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  6535  0011B8  0100               	movlb	0	; () banked
  6536  0011BA  51CF               	movf	(___ftadd@f1+2)& (0+255),w,b
  6537  0011BC  0100               	movlb	0	; () banked
  6538  0011BE  23D2               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  6539                           
  6540                           ; BSR set to: 0
  6541  0011C0  0100               	movlb	0	; () banked
  6542  0011C2  AFD2               	btfss	(___ftadd@f2+2)& (0+255),7,b
  6543  0011C4  D015               	goto	l4572
  6544                           
  6545                           ; BSR set to: 0
  6546  0011C6  0EFF               	movlw	255
  6547  0011C8  0100               	movlb	0	; () banked
  6548  0011CA  1BD0               	xorwf	___ftadd@f2& (0+255),f,b
  6549  0011CC  0EFF               	movlw	255
  6550  0011CE  0100               	movlb	0	; () banked
  6551  0011D0  1BD1               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  6552  0011D2  0EFF               	movlw	255
  6553  0011D4  0100               	movlb	0	; () banked
  6554  0011D6  1BD2               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  6555  0011D8  0E01               	movlw	1
  6556  0011DA  0100               	movlb	0	; () banked
  6557  0011DC  27D0               	addwf	___ftadd@f2& (0+255),f,b
  6558  0011DE  0E00               	movlw	0
  6559  0011E0  0100               	movlb	0	; () banked
  6560  0011E2  23D1               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  6561  0011E4  0E00               	movlw	0
  6562  0011E6  0100               	movlb	0	; () banked
  6563  0011E8  23D2               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  6564                           
  6565                           ; BSR set to: 0
  6566  0011EA  0E01               	movlw	1
  6567  0011EC  0100               	movlb	0	; () banked
  6568  0011EE  6FD6               	movwf	___ftadd@sign& (0+255),b
  6569  0011F0                     l4572:
  6570                           
  6571                           ; BSR set to: 0
  6572  0011F0  C0D0  F0C2         	movff	___ftadd@f2,___ftpack@arg
  6573  0011F4  C0D1  F0C3         	movff	___ftadd@f2+1,___ftpack@arg+1
  6574  0011F8  C0D2  F0C4         	movff	___ftadd@f2+2,___ftpack@arg+2
  6575  0011FC  C0D8  F0C5         	movff	___ftadd@exp1,___ftpack@exp
  6576  001200  C0D6  F0C6         	movff	___ftadd@sign,___ftpack@sign
  6577  001204  ECB4  F00C         	call	___ftpack	;wreg free
  6578  001208  C0C2  F0CD         	movff	?___ftpack,?___ftadd
  6579  00120C  C0C3  F0CE         	movff	?___ftpack+1,?___ftadd+1
  6580  001210  C0C4  F0CF         	movff	?___ftpack+2,?___ftadd+2
  6581  001214  0012               	return	
  6582  001216                     __end_of___ftadd:
  6583                           	opt stack 0
  6584                           tblptru	equ	0xFF8
  6585                           tblptrh	equ	0xFF7
  6586                           tblptrl	equ	0xFF6
  6587                           tablat	equ	0xFF5
  6588                           prodh	equ	0xFF4
  6589                           prodl	equ	0xFF3
  6590                           indf0	equ	0xFEF
  6591                           postinc0	equ	0xFEE
  6592                           fsr0h	equ	0xFEA
  6593                           fsr0l	equ	0xFE9
  6594                           wreg	equ	0xFE8
  6595                           indf1	equ	0xFE7
  6596                           postdec1	equ	0xFE5
  6597                           fsr1h	equ	0xFE2
  6598                           fsr1l	equ	0xFE1
  6599                           indf2	equ	0xFDF
  6600                           postinc2	equ	0xFDE
  6601                           postdec2	equ	0xFDD
  6602                           fsr2h	equ	0xFDA
  6603                           fsr2l	equ	0xFD9
  6604                           status	equ	0xFD8
  6605                           
  6606 ;; *************** function ___ftpack *****************
  6607 ;; Defined at:
  6608 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\float.c"
  6609 ;; Parameters:    Size  Location     Type
  6610 ;;  arg             3    0[BANK0 ] unsigned um
  6611 ;;  exp             1    3[BANK0 ] unsigned char 
  6612 ;;  sign            1    4[BANK0 ] unsigned char 
  6613 ;; Auto vars:     Size  Location     Type
  6614 ;;		None
  6615 ;; Return value:  Size  Location     Type
  6616 ;;                  3    0[BANK0 ] float 
  6617 ;; Registers used:
  6618 ;;		wreg, status,2, status,0
  6619 ;; Tracked objects:
  6620 ;;		On entry : 0/0
  6621 ;;		On exit  : 0/0
  6622 ;;		Unchanged: 0/0
  6623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6624 ;;      Params:         0       5       0       0       0       0       0
  6625 ;;      Locals:         0       0       0       0       0       0       0
  6626 ;;      Temps:          0       3       0       0       0       0       0
  6627 ;;      Totals:         0       8       0       0       0       0       0
  6628 ;;Total ram usage:        8 bytes
  6629 ;; Hardware stack levels used:    1
  6630 ;; Hardware stack levels required when called:    5
  6631 ;; This function calls:
  6632 ;;		Nothing
  6633 ;; This function is called by:
  6634 ;;		___ftadd
  6635 ;;		___ftdiv
  6636 ;;		___lwtoft
  6637 ;; This function uses a non-reentrant model
  6638 ;;
  6639                           
  6640                           	psect	text32
  6641  001968                     __ptext32:
  6642                           	opt stack 0
  6643  001968                     ___ftpack:
  6644                           	opt stack 23
  6645                           
  6646                           ;incstack = 0
  6647  001968  0100               	movlb	0	; () banked
  6648  00196A  51C5               	movf	___ftpack@exp& (0+255),w,b
  6649  00196C  0100               	movlb	0	; () banked
  6650  00196E  B4D8               	btfsc	status,2,c
  6651  001970  D008               	goto	l4126
  6652                           
  6653                           ; BSR set to: 0
  6654  001972  0100               	movlb	0	; () banked
  6655  001974  51C2               	movf	___ftpack@arg& (0+255),w,b
  6656  001976  0100               	movlb	0	; () banked
  6657  001978  11C3               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  6658  00197A  0100               	movlb	0	; () banked
  6659  00197C  11C4               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  6660  00197E  A4D8               	btfss	status,2,c
  6661  001980  D011               	goto	l4132
  6662  001982                     l4126:
  6663                           
  6664                           ; BSR set to: 0
  6665  001982  0E00               	movlw	0
  6666  001984  0100               	movlb	0	; () banked
  6667  001986  6FC2               	movwf	?___ftpack& (0+255),b
  6668  001988  0E00               	movlw	0
  6669  00198A  0100               	movlb	0	; () banked
  6670  00198C  6FC3               	movwf	(?___ftpack+1)& (0+255),b
  6671  00198E  0E00               	movlw	0
  6672  001990  0100               	movlb	0	; () banked
  6673  001992  6FC4               	movwf	(?___ftpack+2)& (0+255),b
  6674                           
  6675                           ; BSR set to: 0
  6676  001994  0012               	return	
  6677  001996                     l4130:
  6678                           
  6679                           ; BSR set to: 0
  6680  001996  0100               	movlb	0	; () banked
  6681  001998  2BC5               	incf	___ftpack@exp& (0+255),f,b
  6682  00199A  0100               	movlb	0	; () banked
  6683  00199C  90D8               	bcf	status,0,c
  6684  00199E  33C4               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  6685  0019A0  33C3               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  6686  0019A2  33C2               	rrcf	___ftpack@arg& (0+255),f,b
  6687  0019A4                     l4132:
  6688                           
  6689                           ; BSR set to: 0
  6690  0019A4  0E00               	movlw	0
  6691  0019A6  0100               	movlb	0	; () banked
  6692  0019A8  15C2               	andwf	___ftpack@arg& (0+255),w,b
  6693  0019AA  0100               	movlb	0	; () banked
  6694  0019AC  6FC7               	movwf	??___ftpack& (0+255),b
  6695  0019AE  0E00               	movlw	0
  6696  0019B0  0100               	movlb	0	; () banked
  6697  0019B2  15C3               	andwf	(___ftpack@arg+1)& (0+255),w,b
  6698  0019B4  0100               	movlb	0	; () banked
  6699  0019B6  6FC8               	movwf	(??___ftpack+1)& (0+255),b
  6700  0019B8  0EFE               	movlw	254
  6701  0019BA  0100               	movlb	0	; () banked
  6702  0019BC  15C4               	andwf	(___ftpack@arg+2)& (0+255),w,b
  6703  0019BE  0100               	movlb	0	; () banked
  6704  0019C0  6FC9               	movwf	(??___ftpack+2)& (0+255),b
  6705  0019C2  0100               	movlb	0	; () banked
  6706  0019C4  51C7               	movf	??___ftpack& (0+255),w,b
  6707  0019C6  0100               	movlb	0	; () banked
  6708  0019C8  11C8               	iorwf	(??___ftpack+1)& (0+255),w,b
  6709  0019CA  0100               	movlb	0	; () banked
  6710  0019CC  11C9               	iorwf	(??___ftpack+2)& (0+255),w,b
  6711  0019CE  B4D8               	btfsc	status,2,c
  6712  0019D0  D011               	goto	l4138
  6713  0019D2  D7E1               	goto	l4130
  6714  0019D4                     l4134:
  6715                           
  6716                           ; BSR set to: 0
  6717  0019D4  0100               	movlb	0	; () banked
  6718  0019D6  2BC5               	incf	___ftpack@exp& (0+255),f,b
  6719                           
  6720                           ; BSR set to: 0
  6721  0019D8  0E01               	movlw	1
  6722  0019DA  0100               	movlb	0	; () banked
  6723  0019DC  27C2               	addwf	___ftpack@arg& (0+255),f,b
  6724  0019DE  0E00               	movlw	0
  6725  0019E0  0100               	movlb	0	; () banked
  6726  0019E2  23C3               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  6727  0019E4  0E00               	movlw	0
  6728  0019E6  0100               	movlb	0	; () banked
  6729  0019E8  23C4               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  6730  0019EA  0100               	movlb	0	; () banked
  6731  0019EC  90D8               	bcf	status,0,c
  6732  0019EE  33C4               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  6733  0019F0  33C3               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  6734  0019F2  33C2               	rrcf	___ftpack@arg& (0+255),f,b
  6735  0019F4                     l4138:
  6736                           
  6737                           ; BSR set to: 0
  6738  0019F4  0E00               	movlw	0
  6739  0019F6  0100               	movlb	0	; () banked
  6740  0019F8  15C2               	andwf	___ftpack@arg& (0+255),w,b
  6741  0019FA  0100               	movlb	0	; () banked
  6742  0019FC  6FC7               	movwf	??___ftpack& (0+255),b
  6743  0019FE  0E00               	movlw	0
  6744  001A00  0100               	movlb	0	; () banked
  6745  001A02  15C3               	andwf	(___ftpack@arg+1)& (0+255),w,b
  6746  001A04  0100               	movlb	0	; () banked
  6747  001A06  6FC8               	movwf	(??___ftpack+1)& (0+255),b
  6748  001A08  0EFF               	movlw	255
  6749  001A0A  0100               	movlb	0	; () banked
  6750  001A0C  15C4               	andwf	(___ftpack@arg+2)& (0+255),w,b
  6751  001A0E  0100               	movlb	0	; () banked
  6752  001A10  6FC9               	movwf	(??___ftpack+2)& (0+255),b
  6753  001A12  0100               	movlb	0	; () banked
  6754  001A14  51C7               	movf	??___ftpack& (0+255),w,b
  6755  001A16  0100               	movlb	0	; () banked
  6756  001A18  11C8               	iorwf	(??___ftpack+1)& (0+255),w,b
  6757  001A1A  0100               	movlb	0	; () banked
  6758  001A1C  11C9               	iorwf	(??___ftpack+2)& (0+255),w,b
  6759  001A1E  B4D8               	btfsc	status,2,c
  6760  001A20  D008               	goto	l4142
  6761  001A22  D7D8               	goto	l4134
  6762  001A24                     l4140:
  6763                           
  6764                           ; BSR set to: 0
  6765  001A24  0100               	movlb	0	; () banked
  6766  001A26  07C5               	decf	___ftpack@exp& (0+255),f,b
  6767  001A28  0100               	movlb	0	; () banked
  6768  001A2A  90D8               	bcf	status,0,c
  6769  001A2C  37C2               	rlcf	___ftpack@arg& (0+255),f,b
  6770  001A2E  37C3               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  6771  001A30  37C4               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  6772  001A32                     l4142:
  6773                           
  6774                           ; BSR set to: 0
  6775  001A32  0100               	movlb	0	; () banked
  6776  001A34  BFC3               	btfsc	(___ftpack@arg+1)& (0+255),7,b
  6777  001A36  D004               	goto	l1245
  6778                           
  6779                           ; BSR set to: 0
  6780  001A38  0E02               	movlw	2
  6781  001A3A  0100               	movlb	0	; () banked
  6782  001A3C  61C5               	cpfslt	___ftpack@exp& (0+255),b
  6783  001A3E  D7F2               	goto	l4140
  6784  001A40                     l1245:
  6785                           
  6786                           ; BSR set to: 0
  6787  001A40  0100               	movlb	0	; () banked
  6788  001A42  B1C5               	btfsc	___ftpack@exp& (0+255),0,b
  6789  001A44  D002               	goto	l4148
  6790                           
  6791                           ; BSR set to: 0
  6792  001A46  0100               	movlb	0	; () banked
  6793  001A48  9FC3               	bcf	(___ftpack@arg+1)& (0+255),7,b
  6794  001A4A                     l4148:
  6795                           
  6796                           ; BSR set to: 0
  6797  001A4A  0100               	movlb	0	; () banked
  6798  001A4C  90D8               	bcf	status,0,c
  6799  001A4E  33C5               	rrcf	___ftpack@exp& (0+255),f,b
  6800  001A50  0100               	movlb	0	; () banked
  6801  001A52  51C5               	movf	___ftpack@exp& (0+255),w,b
  6802  001A54  0100               	movlb	0	; () banked
  6803  001A56  13C4               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  6804                           
  6805                           ; BSR set to: 0
  6806  001A58  0100               	movlb	0	; () banked
  6807  001A5A  51C6               	movf	___ftpack@sign& (0+255),w,b
  6808  001A5C  0100               	movlb	0	; () banked
  6809  001A5E  B4D8               	btfsc	status,2,c
  6810  001A60  D002               	goto	l4154
  6811                           
  6812                           ; BSR set to: 0
  6813  001A62  0100               	movlb	0	; () banked
  6814  001A64  8FC4               	bsf	(___ftpack@arg+2)& (0+255),7,b
  6815  001A66                     l4154:
  6816                           
  6817                           ; BSR set to: 0
  6818  001A66  C0C2  F0C2         	movff	___ftpack@arg,?___ftpack
  6819  001A6A  C0C3  F0C3         	movff	___ftpack@arg+1,?___ftpack+1
  6820  001A6E  C0C4  F0C4         	movff	___ftpack@arg+2,?___ftpack+2
  6821  001A72  0012               	return	
  6822  001A74                     __end_of___ftpack:
  6823                           	opt stack 0
  6824                           tblptru	equ	0xFF8
  6825                           tblptrh	equ	0xFF7
  6826                           tblptrl	equ	0xFF6
  6827                           tablat	equ	0xFF5
  6828                           prodh	equ	0xFF4
  6829                           prodl	equ	0xFF3
  6830                           indf0	equ	0xFEF
  6831                           postinc0	equ	0xFEE
  6832                           fsr0h	equ	0xFEA
  6833                           fsr0l	equ	0xFE9
  6834                           wreg	equ	0xFE8
  6835                           indf1	equ	0xFE7
  6836                           postdec1	equ	0xFE5
  6837                           fsr1h	equ	0xFE2
  6838                           fsr1l	equ	0xFE1
  6839                           indf2	equ	0xFDF
  6840                           postinc2	equ	0xFDE
  6841                           postdec2	equ	0xFDD
  6842                           fsr2h	equ	0xFDA
  6843                           fsr2l	equ	0xFD9
  6844                           status	equ	0xFD8
  6845                           
  6846 ;; *************** function _InitSystem *****************
  6847 ;; Defined at:
  6848 ;;		line 1010 in file "Released IBC-1 Code - 03-06-2016/main.c"
  6849 ;; Parameters:    Size  Location     Type
  6850 ;;		None
  6851 ;; Auto vars:     Size  Location     Type
  6852 ;;		None
  6853 ;; Return value:  Size  Location     Type
  6854 ;;                  1    wreg      void 
  6855 ;; Registers used:
  6856 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6857 ;; Tracked objects:
  6858 ;;		On entry : 0/0
  6859 ;;		On exit  : 0/0
  6860 ;;		Unchanged: 0/0
  6861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6862 ;;      Params:         0       0       0       0       0       0       0
  6863 ;;      Locals:         0       0       0       0       0       0       0
  6864 ;;      Temps:          0       0       0       0       0       0       0
  6865 ;;      Totals:         0       0       0       0       0       0       0
  6866 ;;Total ram usage:        0 bytes
  6867 ;; Hardware stack levels used:    1
  6868 ;; Hardware stack levels required when called:    9
  6869 ;; This function calls:
  6870 ;;		_EEPROMClearReset
  6871 ;;		_EEPROMRead
  6872 ;;		_InitST7540
  6873 ;;		_ReceiveNewDataST7540
  6874 ;;		_TurnRelayOff
  6875 ;;		_TurnSSR1Off
  6876 ;;		_UART_Init
  6877 ;;		_checkCableFaults
  6878 ;; This function is called by:
  6879 ;;		_main
  6880 ;; This function uses a non-reentrant model
  6881 ;;
  6882                           
  6883                           	psect	text33
  6884  001A74                     __ptext33:
  6885                           	opt stack 0
  6886  001A74                     _InitSystem:
  6887                           	opt stack 21
  6888                           
  6889                           ;main.c: 1012: OSCTUNEbits.PLLEN = 1;
  6890                           
  6891                           ; BSR set to: 0
  6892                           ;incstack = 0
  6893  001A74  8C9B               	bsf	3995,6,c	;volatile
  6894                           
  6895                           ;main.c: 1013: OSCCONbits.IRCF = 0b111;
  6896  001A76  88D3               	bsf	4051,4,c	;volatile
  6897  001A78  8AD3               	bsf	4051,5,c	;volatile
  6898  001A7A  8CD3               	bsf	4051,6,c	;volatile
  6899                           
  6900                           ;main.c: 1014: OSCCONbits.OSTS = 0;
  6901  001A7C  96D3               	bcf	4051,3,c	;volatile
  6902                           
  6903                           ;main.c: 1015: OSCCONbits.SCS = 0b11;
  6904  001A7E  0E03               	movlw	3
  6905  001A80  12D3               	iorwf	4051,f,c	;volatile
  6906                           
  6907                           ;main.c: 1018: TRISAbits.TRISA0 = 1;
  6908  001A82  8092               	bsf	3986,0,c	;volatile
  6909                           
  6910                           ;main.c: 1019: TRISAbits.TRISA1 = 1;
  6911  001A84  8292               	bsf	3986,1,c	;volatile
  6912                           
  6913                           ;main.c: 1020: ANSELAbits.ANSA1 = 0;
  6914  001A86  010F               	movlb	15	; () banked
  6915  001A88  9338               	bcf	56,1,b	;volatile
  6916                           
  6917                           ; BSR set to: 15
  6918                           ;main.c: 1021: TRISCbits.TRISC2 = 1;
  6919  001A8A  8494               	bsf	3988,2,c	;volatile
  6920                           
  6921                           ; BSR set to: 15
  6922                           ;main.c: 1022: TRISBbits.TRISB5 = 1;
  6923  001A8C  8A93               	bsf	3987,5,c	;volatile
  6924                           
  6925                           ; BSR set to: 15
  6926                           ;main.c: 1025: TRISAbits.TRISA3 = 1;
  6927  001A8E  8692               	bsf	3986,3,c	;volatile
  6928                           
  6929                           ; BSR set to: 15
  6930                           ;main.c: 1026: ANSELAbits.ANSA3 = 0;
  6931  001A90  010F               	movlb	15	; () banked
  6932  001A92  9738               	bcf	56,3,b	;volatile
  6933                           
  6934                           ; BSR set to: 15
  6935                           ;main.c: 1027: TRISAbits.TRISA6 = 1;
  6936  001A94  8C92               	bsf	3986,6,c	;volatile
  6937                           
  6938                           ; BSR set to: 15
  6939                           ;main.c: 1030: TRISAbits.TRISA2 = 0;
  6940  001A96  9492               	bcf	3986,2,c	;volatile
  6941                           
  6942                           ; BSR set to: 15
  6943                           ;main.c: 1031: LATAbits.LATA2 = 0;
  6944  001A98  9489               	bcf	3977,2,c	;volatile
  6945                           
  6946                           ; BSR set to: 15
  6947                           ;main.c: 1032: TRISBbits.TRISB6 = 0;
  6948  001A9A  9C93               	bcf	3987,6,c	;volatile
  6949                           
  6950                           ; BSR set to: 15
  6951                           ;main.c: 1033: LATBbits.LATB6 = 0;
  6952  001A9C  9C8A               	bcf	3978,6,c	;volatile
  6953                           
  6954                           ; BSR set to: 15
  6955                           ;main.c: 1034: TRISBbits.TRISB7 = 0;
  6956  001A9E  9E93               	bcf	3987,7,c	;volatile
  6957                           
  6958                           ; BSR set to: 15
  6959                           ;main.c: 1035: LATBbits.LATB7 = 0;
  6960  001AA0  9E8A               	bcf	3978,7,c	;volatile
  6961                           
  6962                           ; BSR set to: 15
  6963                           ;main.c: 1036: TRISCbits.TRISC1 = 0;
  6964  001AA2  9294               	bcf	3988,1,c	;volatile
  6965                           
  6966                           ; BSR set to: 15
  6967                           ;main.c: 1037: LATCbits.LATC1 = 1;
  6968  001AA4  828B               	bsf	3979,1,c	;volatile
  6969                           
  6970                           ; BSR set to: 15
  6971                           ;main.c: 1040: TRISAbits.TRISA5 = 0;
  6972  001AA6  9A92               	bcf	3986,5,c	;volatile
  6973                           
  6974                           ; BSR set to: 15
  6975                           ;main.c: 1041: LATAbits.LATA5 = 0;
  6976  001AA8  9A89               	bcf	3977,5,c	;volatile
  6977                           
  6978                           ; BSR set to: 15
  6979                           ;main.c: 1042: TRISCbits.TRISC0 = 0;
  6980  001AAA  9094               	bcf	3988,0,c	;volatile
  6981                           
  6982                           ; BSR set to: 15
  6983                           ;main.c: 1043: LATCbits.LATC0 = 0;
  6984  001AAC  908B               	bcf	3979,0,c	;volatile
  6985                           
  6986                           ; BSR set to: 15
  6987                           ;main.c: 1044: TRISAbits.TRISA7 = 0;
  6988  001AAE  9E92               	bcf	3986,7,c	;volatile
  6989                           
  6990                           ; BSR set to: 15
  6991                           ;main.c: 1045: LATAbits.LATA7 = 0;
  6992  001AB0  9E89               	bcf	3977,7,c	;volatile
  6993                           
  6994                           ; BSR set to: 15
  6995                           ;main.c: 1048: ANSELCbits.ANSC7 = 0;
  6996  001AB2  010F               	movlb	15	; () banked
  6997  001AB4  9F3A               	bcf	58,7,b	;volatile
  6998                           
  6999                           ; BSR set to: 15
  7000                           ;main.c: 1049: ANSELCbits.ANSC6 = 0;
  7001  001AB6  010F               	movlb	15	; () banked
  7002  001AB8  9D3A               	bcf	58,6,b	;volatile
  7003                           
  7004                           ; BSR set to: 15
  7005                           ;main.c: 1050: TRISCbits.TRISC7 = 1;
  7006  001ABA  8E94               	bsf	3988,7,c	;volatile
  7007                           
  7008                           ; BSR set to: 15
  7009                           ;main.c: 1051: TRISCbits.TRISC6 = 1;
  7010  001ABC  8C94               	bsf	3988,6,c	;volatile
  7011                           
  7012                           ; BSR set to: 15
  7013                           ;main.c: 1060: PMD0bits.TMR2MD = 0;
  7014  001ABE  010F               	movlb	15	; () banked
  7015  001AC0  933F               	bcf	63,1,b	;volatile
  7016                           
  7017                           ; BSR set to: 15
  7018                           ;main.c: 1061: T2CONbits.T2OUTPS = 0b0000;
  7019  001AC2  96BA               	bcf	4026,3,c	;volatile
  7020  001AC4  98BA               	bcf	4026,4,c	;volatile
  7021  001AC6  9ABA               	bcf	4026,5,c	;volatile
  7022  001AC8  9CBA               	bcf	4026,6,c	;volatile
  7023                           
  7024                           ; BSR set to: 15
  7025                           ;main.c: 1062: T2CONbits.TMR2ON = 0;
  7026  001ACA  94BA               	bcf	4026,2,c	;volatile
  7027                           
  7028                           ;main.c: 1063: T2CONbits.T2CKPS = 0b11;
  7029  001ACC  0E03               	movlw	3
  7030  001ACE  12BA               	iorwf	4026,f,c	;volatile
  7031                           
  7032                           ;main.c: 1064: TMR2 = 0;
  7033  001AD0  0E00               	movlw	0
  7034  001AD2  6EBC               	movwf	4028,c	;volatile
  7035                           
  7036                           ; BSR set to: 15
  7037                           ;main.c: 1077: PIE1bits.RC1IE = 1;
  7038  001AD4  8A9D               	bsf	3997,5,c	;volatile
  7039                           
  7040                           ; BSR set to: 15
  7041                           ;main.c: 1078: INTCONbits.RBIE = 1;
  7042  001AD6  86F2               	bsf	intcon,3,c	;volatile
  7043                           
  7044                           ; BSR set to: 15
  7045                           ;main.c: 1079: IOCBbits.IOCB4 = 1;
  7046  001AD8  8862               	bsf	3938,4,c	;volatile
  7047                           
  7048                           ; BSR set to: 15
  7049                           ;main.c: 1081: TXSTA1bits.BRGH = 0;
  7050  001ADA  94AC               	bcf	4012,2,c	;volatile
  7051                           
  7052                           ; BSR set to: 15
  7053                           ;main.c: 1082: BAUDCONbits.BRG16 = 0;
  7054  001ADC  96B8               	bcf	4024,3,c	;volatile
  7055                           
  7056                           ; BSR set to: 15
  7057                           ;main.c: 1083: UART_Init(9600);
  7058  001ADE  0E80               	movlw	128
  7059  001AE0  0100               	movlb	0	; () banked
  7060  001AE2  6FD0               	movwf	UART_Init@baudrate& (0+255),b
  7061  001AE4  0E25               	movlw	37
  7062  001AE6  6FD1               	movwf	(UART_Init@baudrate+1)& (0+255),b
  7063  001AE8  0E00               	movlw	0
  7064  001AEA  6FD2               	movwf	(UART_Init@baudrate+2)& (0+255),b
  7065  001AEC  0E00               	movlw	0
  7066  001AEE  6FD3               	movwf	(UART_Init@baudrate+3)& (0+255),b
  7067  001AF0  EC0B  F009         	call	_UART_Init	;wreg free
  7068                           
  7069                           ;main.c: 1087: ADCON2bits.ADFM = 1;
  7070  001AF4  8EC0               	bsf	4032,7,c	;volatile
  7071                           
  7072                           ;main.c: 1088: ADCON2bits.ACQT = 0b010;
  7073  001AF6  50C0               	movf	4032,w,c	;volatile
  7074  001AF8  0BC7               	andlw	-57
  7075  001AFA  0910               	iorlw	16
  7076  001AFC  6EC0               	movwf	4032,c	;volatile
  7077                           
  7078                           ;main.c: 1089: ADCON2bits.ADCS = 0b110;
  7079  001AFE  50C0               	movf	4032,w,c	;volatile
  7080  001B00  0BF8               	andlw	-8
  7081  001B02  0906               	iorlw	6
  7082  001B04  6EC0               	movwf	4032,c	;volatile
  7083                           
  7084                           ;main.c: 1090: ADCON0bits.ADON = 1;
  7085  001B06  80C2               	bsf	4034,0,c	;volatile
  7086                           
  7087                           ;main.c: 1092: INTCONbits.PEIE = 1;
  7088  001B08  8CF2               	bsf	intcon,6,c	;volatile
  7089                           
  7090                           ;main.c: 1093: PIR1bits.TMR2IF = 0;
  7091  001B0A  929E               	bcf	3998,1,c	;volatile
  7092                           
  7093                           ;main.c: 1094: PIE1bits.TMR2IE = 1;
  7094  001B0C  829D               	bsf	3997,1,c	;volatile
  7095                           
  7096                           ;main.c: 1095: IPR1bits.TMR2IP = 0;
  7097  001B0E  929F               	bcf	3999,1,c	;volatile
  7098                           
  7099                           ;main.c: 1096: PR2 = 122;
  7100  001B10  0E7A               	movlw	122
  7101  001B12  6EBB               	movwf	4027,c	;volatile
  7102                           
  7103                           ;main.c: 1097: T2CONbits.TMR2ON = 1;
  7104  001B14  84BA               	bsf	4026,2,c	;volatile
  7105                           
  7106                           ;main.c: 1098: INTCONbits.GIEH = 1;
  7107  001B16  8EF2               	bsf	intcon,7,c	;volatile
  7108                           
  7109                           ;main.c: 1101: TurnRelayOff();
  7110  001B18  EC63  F016         	call	_TurnRelayOff	;wreg free
  7111                           
  7112                           ;main.c: 1102: TurnSSR1Off();
  7113  001B1C  EC1F  F017         	call	_TurnSSR1Off	;wreg free
  7114                           
  7115                           ;main.c: 1104: FiringStatusUCG = 0;
  7116  001B20  0E00               	movlw	0
  7117  001B22  0100               	movlb	0	; () banked
  7118  001B24  6FAB               	movwf	_FiringStatusUCG& (0+255),b
  7119                           
  7120                           ; BSR set to: 0
  7121                           ;main.c: 1105: ResetStatusUCG = 0;
  7122  001B26  0E00               	movlw	0
  7123  001B28  0100               	movlb	0	; () banked
  7124  001B2A  6FB5               	movwf	_ResetStatusUCG& (0+255),b
  7125                           
  7126                           ; BSR set to: 0
  7127                           ;main.c: 1107: EEPROMRead();
  7128  001B2C  EC00  F015         	call	_EEPROMRead	;wreg free
  7129                           
  7130                           ;main.c: 1108: if(EEPRead[2]!= 0xAA)
  7131  001B30  0EAA               	movlw	170
  7132  001B32  0100               	movlb	0	; () banked
  7133  001B34  1962               	xorwf	(_EEPRead+2)& (0+255),w,b
  7134  001B36  B4D8               	btfsc	status,2,c
  7135  001B38  D006               	goto	l5010
  7136                           
  7137                           ; BSR set to: 0
  7138                           ;main.c: 1109: {
  7139                           ;main.c: 1110: AlarmStatusUCG = 1;
  7140  001B3A  0E01               	movlw	1
  7141  001B3C  0100               	movlb	0	; () banked
  7142  001B3E  6FA6               	movwf	_AlarmStatusUCG& (0+255),b
  7143                           
  7144                           ; BSR set to: 0
  7145                           ;main.c: 1111: checkCableFaults();
  7146  001B40  ECF9  F011         	call	_checkCableFaults	;wreg free
  7147                           
  7148                           ;main.c: 1112: }
  7149  001B44  D003               	goto	l5012
  7150  001B46                     l5010:
  7151                           
  7152                           ;main.c: 1113: else
  7153                           ;main.c: 1114: AlarmStatusUCG = 0;
  7154  001B46  0E00               	movlw	0
  7155  001B48  0100               	movlb	0	; () banked
  7156  001B4A  6FA6               	movwf	_AlarmStatusUCG& (0+255),b
  7157  001B4C                     l5012:
  7158                           
  7159                           ;main.c: 1116: EEPROMClearReset();
  7160  001B4C  EC16  F016         	call	_EEPROMClearReset	;wreg free
  7161                           
  7162                           ;main.c: 1118: NewCFStatusUCG = 0;
  7163  001B50  0E00               	movlw	0
  7164  001B52  0100               	movlb	0	; () banked
  7165  001B54  6FB1               	movwf	_NewCFStatusUCG& (0+255),b
  7166                           
  7167                           ; BSR set to: 0
  7168                           ;main.c: 1119: ClearToFire = 0;
  7169  001B56  0E00               	movlw	0
  7170  001B58  0100               	movlb	0	; () banked
  7171  001B5A  6FA8               	movwf	_ClearToFire& (0+255),b
  7172                           
  7173                           ; BSR set to: 0
  7174                           ;main.c: 1120: CFLEDFlashEnable = 0;
  7175  001B5C  0E00               	movlw	0
  7176  001B5E  6E40               	movwf	_CFLEDFlashEnable,c
  7177                           
  7178                           ; BSR set to: 0
  7179                           ;main.c: 1121: CFLEDFlashState = 0;
  7180  001B60  0E00               	movlw	0
  7181  001B62  6E41               	movwf	_CFLEDFlashState,c
  7182                           
  7183                           ; BSR set to: 0
  7184                           ;main.c: 1123: DeArmTimerEnabled = 0;
  7185  001B64  0E00               	movlw	0
  7186  001B66  6E43               	movwf	_DeArmTimerEnabled,c
  7187                           
  7188                           ; BSR set to: 0
  7189                           ;main.c: 1124: DeArmTickCG = 0;
  7190  001B68  0E00               	movlw	0
  7191  001B6A  6E42               	movwf	_DeArmTickCG,c
  7192                           
  7193                           ; BSR set to: 0
  7194                           ;main.c: 1126: if(InitST7540()){
  7195  001B6C  ECBE  F00D         	call	_InitST7540	;wreg free
  7196  001B70  0900               	iorlw	0
  7197  001B72  B4D8               	btfsc	status,2,c
  7198  001B74  0012               	return	
  7199                           
  7200                           ;main.c: 1127: ReceiveNewDataST7540();
  7201  001B76  ECA1  F016         	call	_ReceiveNewDataST7540	;wreg free
  7202  001B7A  0012               	return	
  7203  001B7C                     __end_of_InitSystem:
  7204                           	opt stack 0
  7205                           tblptru	equ	0xFF8
  7206                           tblptrh	equ	0xFF7
  7207                           tblptrl	equ	0xFF6
  7208                           tablat	equ	0xFF5
  7209                           prodh	equ	0xFF4
  7210                           prodl	equ	0xFF3
  7211                           intcon	equ	0xFF2
  7212                           indf0	equ	0xFEF
  7213                           postinc0	equ	0xFEE
  7214                           fsr0h	equ	0xFEA
  7215                           fsr0l	equ	0xFE9
  7216                           wreg	equ	0xFE8
  7217                           indf1	equ	0xFE7
  7218                           postdec1	equ	0xFE5
  7219                           fsr1h	equ	0xFE2
  7220                           fsr1l	equ	0xFE1
  7221                           indf2	equ	0xFDF
  7222                           postinc2	equ	0xFDE
  7223                           postdec2	equ	0xFDD
  7224                           fsr2h	equ	0xFDA
  7225                           fsr2l	equ	0xFD9
  7226                           status	equ	0xFD8
  7227                           
  7228 ;; *************** function _checkCableFaults *****************
  7229 ;; Defined at:
  7230 ;;		line 928 in file "Released IBC-1 Code - 03-06-2016/main.c"
  7231 ;; Parameters:    Size  Location     Type
  7232 ;;		None
  7233 ;; Auto vars:     Size  Location     Type
  7234 ;;		None
  7235 ;; Return value:  Size  Location     Type
  7236 ;;                  1    wreg      void 
  7237 ;; Registers used:
  7238 ;;		wreg, status,2, status,0, cstack
  7239 ;; Tracked objects:
  7240 ;;		On entry : 0/0
  7241 ;;		On exit  : 0/0
  7242 ;;		Unchanged: 0/0
  7243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7244 ;;      Params:         0       0       0       0       0       0       0
  7245 ;;      Locals:         0       0       0       0       0       0       0
  7246 ;;      Temps:          0       0       0       0       0       0       0
  7247 ;;      Totals:         0       0       0       0       0       0       0
  7248 ;;Total ram usage:        0 bytes
  7249 ;; Hardware stack levels used:    1
  7250 ;; Hardware stack levels required when called:    7
  7251 ;; This function calls:
  7252 ;;		_ReadCableFault
  7253 ;;		_ReadEarthLeakage
  7254 ;;		_TurnCableFaultDetectOff
  7255 ;;		_TurnCableFaultDetectOn
  7256 ;; This function is called by:
  7257 ;;		_main
  7258 ;;		_InitSystem
  7259 ;; This function uses a non-reentrant model
  7260 ;;
  7261                           
  7262                           	psect	text34
  7263  0023F2                     __ptext34:
  7264                           	opt stack 0
  7265  0023F2                     _checkCableFaults:
  7266                           	opt stack 23
  7267                           
  7268                           ;main.c: 932: if(earthLeakageStart==1){
  7269                           
  7270                           ;incstack = 0
  7271  0023F2  0100               	movlb	0	; () banked
  7272  0023F4  059E               	decf	_earthLeakageStart& (0+255),w,b
  7273  0023F6  0100               	movlb	0	; () banked
  7274  0023F8  119F               	iorwf	(_earthLeakageStart+1)& (0+255),w,b
  7275  0023FA  A4D8               	btfss	status,2,c
  7276  0023FC  D00F               	goto	l4396
  7277                           
  7278                           ; BSR set to: 0
  7279                           ;main.c: 933: ReadEarthLeakage();
  7280  0023FE  EC4F  F010         	call	_ReadEarthLeakage	;wreg free
  7281                           
  7282                           ;main.c: 934: earthLeakageStart=0;
  7283  002402  0E00               	movlw	0
  7284  002404  0100               	movlb	0	; () banked
  7285  002406  6F9F               	movwf	(_earthLeakageStart+1)& (0+255),b
  7286  002408  0E00               	movlw	0
  7287  00240A  6F9E               	movwf	_earthLeakageStart& (0+255),b
  7288                           
  7289                           ; BSR set to: 0
  7290                           ;main.c: 935: ELT_Counter=0;
  7291  00240C  0E00               	movlw	0
  7292  00240E  0100               	movlb	0	; () banked
  7293  002410  6F7B               	movwf	(_ELT_Counter+1)& (0+255),b
  7294  002412  0E00               	movlw	0
  7295  002414  6F7A               	movwf	_ELT_Counter& (0+255),b
  7296                           
  7297                           ; BSR set to: 0
  7298                           ;main.c: 936: TurnCableFaultDetectOff();
  7299  002416  EC1B  F017         	call	_TurnCableFaultDetectOff	;wreg free
  7300                           
  7301                           ;main.c: 938: }
  7302  00241A  D002               	goto	l4398
  7303  00241C                     l4396:
  7304                           
  7305                           ;main.c: 939: else{
  7306                           ;main.c: 940: ReadCableFault();
  7307  00241C  ECF0  F013         	call	_ReadCableFault	;wreg free
  7308  002420                     l4398:
  7309                           
  7310                           ;main.c: 941: }
  7311                           ;main.c: 943: if((ELT_Counter >= 500 && earthLeakageCounter > 0) || ELT_Counter >= 3000)
      +                          {
  7312  002420  0EF4               	movlw	244
  7313  002422  0100               	movlb	0	; () banked
  7314  002424  5D7A               	subwf	_ELT_Counter& (0+255),w,b
  7315  002426  0E01               	movlw	1
  7316  002428  0100               	movlb	0	; () banked
  7317  00242A  597B               	subwfb	(_ELT_Counter+1)& (0+255),w,b
  7318  00242C  A0D8               	btfss	status,0,c
  7319  00242E  D006               	goto	l4402
  7320                           
  7321                           ; BSR set to: 0
  7322  002430  0100               	movlb	0	; () banked
  7323  002432  519C               	movf	_earthLeakageCounter& (0+255),w,b
  7324  002434  0100               	movlb	0	; () banked
  7325  002436  119D               	iorwf	(_earthLeakageCounter+1)& (0+255),w,b
  7326  002438  A4D8               	btfss	status,2,c
  7327  00243A  D008               	goto	l4404
  7328  00243C                     l4402:
  7329                           
  7330                           ; BSR set to: 0
  7331  00243C  0EB8               	movlw	184
  7332  00243E  0100               	movlb	0	; () banked
  7333  002440  5D7A               	subwf	_ELT_Counter& (0+255),w,b
  7334  002442  0E0B               	movlw	11
  7335  002444  0100               	movlb	0	; () banked
  7336  002446  597B               	subwfb	(_ELT_Counter+1)& (0+255),w,b
  7337  002448  A0D8               	btfss	status,0,c
  7338  00244A  D007               	goto	l4408
  7339  00244C                     l4404:
  7340                           
  7341                           ; BSR set to: 0
  7342                           ;main.c: 944: earthLeakageStart=1;
  7343  00244C  0E00               	movlw	0
  7344  00244E  0100               	movlb	0	; () banked
  7345  002450  6F9F               	movwf	(_earthLeakageStart+1)& (0+255),b
  7346  002452  0E01               	movlw	1
  7347  002454  6F9E               	movwf	_earthLeakageStart& (0+255),b
  7348                           
  7349                           ; BSR set to: 0
  7350                           ;main.c: 945: TurnCableFaultDetectOn();
  7351  002456  EC19  F017         	call	_TurnCableFaultDetectOn	;wreg free
  7352  00245A                     l4408:
  7353                           
  7354                           ;main.c: 946: }
  7355                           ;main.c: 948: if (cableFaultProblemUCG == 1){
  7356  00245A  0100               	movlb	0	; () banked
  7357  00245C  05B6               	decf	_cableFaultProblemUCG& (0+255),w,b
  7358  00245E  A4D8               	btfss	status,2,c
  7359  002460  D004               	goto	l4412
  7360                           
  7361                           ; BSR set to: 0
  7362                           ;main.c: 949: CableFaultStatusUCG = 1;
  7363  002462  0E01               	movlw	1
  7364  002464  0100               	movlb	0	; () banked
  7365  002466  6FA7               	movwf	_CableFaultStatusUCG& (0+255),b
  7366                           
  7367                           ;main.c: 950: }
  7368  002468  0012               	return	
  7369  00246A                     l4412:
  7370                           
  7371                           ; BSR set to: 0
  7372                           ;main.c: 951: else if (earthLeakageProblemUCG == 1){
  7373  00246A  0100               	movlb	0	; () banked
  7374  00246C  05B7               	decf	_earthLeakageProblemUCG& (0+255),w,b
  7375  00246E  A4D8               	btfss	status,2,c
  7376  002470  D004               	goto	l4416
  7377                           
  7378                           ; BSR set to: 0
  7379                           ;main.c: 952: CableFaultStatusUCG = 2;
  7380  002472  0E02               	movlw	2
  7381  002474  0100               	movlb	0	; () banked
  7382  002476  6FA7               	movwf	_CableFaultStatusUCG& (0+255),b
  7383                           
  7384                           ;main.c: 953: }
  7385  002478  0012               	return	
  7386  00247A                     l4416:
  7387                           
  7388                           ; BSR set to: 0
  7389                           ;main.c: 954: else{
  7390                           ;main.c: 955: CableFaultStatusUCG = 0;
  7391  00247A  0E00               	movlw	0
  7392  00247C  0100               	movlb	0	; () banked
  7393  00247E  6FA7               	movwf	_CableFaultStatusUCG& (0+255),b
  7394                           
  7395                           ; BSR set to: 0
  7396  002480  0012               	return	
  7397  002482                     __end_of_checkCableFaults:
  7398                           	opt stack 0
  7399                           tblptru	equ	0xFF8
  7400                           tblptrh	equ	0xFF7
  7401                           tblptrl	equ	0xFF6
  7402                           tablat	equ	0xFF5
  7403                           prodh	equ	0xFF4
  7404                           prodl	equ	0xFF3
  7405                           intcon	equ	0xFF2
  7406                           indf0	equ	0xFEF
  7407                           postinc0	equ	0xFEE
  7408                           fsr0h	equ	0xFEA
  7409                           fsr0l	equ	0xFE9
  7410                           wreg	equ	0xFE8
  7411                           indf1	equ	0xFE7
  7412                           postdec1	equ	0xFE5
  7413                           fsr1h	equ	0xFE2
  7414                           fsr1l	equ	0xFE1
  7415                           indf2	equ	0xFDF
  7416                           postinc2	equ	0xFDE
  7417                           postdec2	equ	0xFDD
  7418                           fsr2h	equ	0xFDA
  7419                           fsr2l	equ	0xFD9
  7420                           status	equ	0xFD8
  7421                           
  7422 ;; *************** function _TurnCableFaultDetectOn *****************
  7423 ;; Defined at:
  7424 ;;		line 1262 in file "Released IBC-1 Code - 03-06-2016/main.c"
  7425 ;; Parameters:    Size  Location     Type
  7426 ;;		None
  7427 ;; Auto vars:     Size  Location     Type
  7428 ;;		None
  7429 ;; Return value:  Size  Location     Type
  7430 ;;                  1    wreg      void 
  7431 ;; Registers used:
  7432 ;;		None
  7433 ;; Tracked objects:
  7434 ;;		On entry : 0/0
  7435 ;;		On exit  : 0/0
  7436 ;;		Unchanged: 0/0
  7437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7438 ;;      Params:         0       0       0       0       0       0       0
  7439 ;;      Locals:         0       0       0       0       0       0       0
  7440 ;;      Temps:          0       0       0       0       0       0       0
  7441 ;;      Totals:         0       0       0       0       0       0       0
  7442 ;;Total ram usage:        0 bytes
  7443 ;; Hardware stack levels used:    1
  7444 ;; Hardware stack levels required when called:    5
  7445 ;; This function calls:
  7446 ;;		Nothing
  7447 ;; This function is called by:
  7448 ;;		_checkCableFaults
  7449 ;; This function uses a non-reentrant model
  7450 ;;
  7451                           
  7452                           	psect	text35
  7453  002E32                     __ptext35:
  7454                           	opt stack 0
  7455  002E32                     _TurnCableFaultDetectOn:
  7456                           	opt stack 24
  7457                           
  7458                           ;main.c: 1263: LATBbits.LATB7 = 1;
  7459                           
  7460                           ; BSR set to: 0
  7461                           ;incstack = 0
  7462  002E32  8E8A               	bsf	3978,7,c	;volatile
  7463  002E34  0012               	return		;funcret
  7464  002E36                     __end_of_TurnCableFaultDetectOn:
  7465                           	opt stack 0
  7466                           tblptru	equ	0xFF8
  7467                           tblptrh	equ	0xFF7
  7468                           tblptrl	equ	0xFF6
  7469                           tablat	equ	0xFF5
  7470                           prodh	equ	0xFF4
  7471                           prodl	equ	0xFF3
  7472                           intcon	equ	0xFF2
  7473                           indf0	equ	0xFEF
  7474                           postinc0	equ	0xFEE
  7475                           fsr0h	equ	0xFEA
  7476                           fsr0l	equ	0xFE9
  7477                           wreg	equ	0xFE8
  7478                           indf1	equ	0xFE7
  7479                           postdec1	equ	0xFE5
  7480                           fsr1h	equ	0xFE2
  7481                           fsr1l	equ	0xFE1
  7482                           indf2	equ	0xFDF
  7483                           postinc2	equ	0xFDE
  7484                           postdec2	equ	0xFDD
  7485                           fsr2h	equ	0xFDA
  7486                           fsr2l	equ	0xFD9
  7487                           status	equ	0xFD8
  7488                           
  7489 ;; *************** function _TurnCableFaultDetectOff *****************
  7490 ;; Defined at:
  7491 ;;		line 1266 in file "Released IBC-1 Code - 03-06-2016/main.c"
  7492 ;; Parameters:    Size  Location     Type
  7493 ;;		None
  7494 ;; Auto vars:     Size  Location     Type
  7495 ;;		None
  7496 ;; Return value:  Size  Location     Type
  7497 ;;                  1    wreg      void 
  7498 ;; Registers used:
  7499 ;;		None
  7500 ;; Tracked objects:
  7501 ;;		On entry : 0/0
  7502 ;;		On exit  : 0/0
  7503 ;;		Unchanged: 0/0
  7504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7505 ;;      Params:         0       0       0       0       0       0       0
  7506 ;;      Locals:         0       0       0       0       0       0       0
  7507 ;;      Temps:          0       0       0       0       0       0       0
  7508 ;;      Totals:         0       0       0       0       0       0       0
  7509 ;;Total ram usage:        0 bytes
  7510 ;; Hardware stack levels used:    1
  7511 ;; Hardware stack levels required when called:    5
  7512 ;; This function calls:
  7513 ;;		Nothing
  7514 ;; This function is called by:
  7515 ;;		_checkCableFaults
  7516 ;; This function uses a non-reentrant model
  7517 ;;
  7518                           
  7519                           	psect	text36
  7520  002E36                     __ptext36:
  7521                           	opt stack 0
  7522  002E36                     _TurnCableFaultDetectOff:
  7523                           	opt stack 24
  7524                           
  7525                           ;main.c: 1267: LATBbits.LATB7 = 0;
  7526                           
  7527                           ;incstack = 0
  7528  002E36  9E8A               	bcf	3978,7,c	;volatile
  7529  002E38  0012               	return		;funcret
  7530  002E3A                     __end_of_TurnCableFaultDetectOff:
  7531                           	opt stack 0
  7532                           tblptru	equ	0xFF8
  7533                           tblptrh	equ	0xFF7
  7534                           tblptrl	equ	0xFF6
  7535                           tablat	equ	0xFF5
  7536                           prodh	equ	0xFF4
  7537                           prodl	equ	0xFF3
  7538                           intcon	equ	0xFF2
  7539                           indf0	equ	0xFEF
  7540                           postinc0	equ	0xFEE
  7541                           fsr0h	equ	0xFEA
  7542                           fsr0l	equ	0xFE9
  7543                           wreg	equ	0xFE8
  7544                           indf1	equ	0xFE7
  7545                           postdec1	equ	0xFE5
  7546                           fsr1h	equ	0xFE2
  7547                           fsr1l	equ	0xFE1
  7548                           indf2	equ	0xFDF
  7549                           postinc2	equ	0xFDE
  7550                           postdec2	equ	0xFDD
  7551                           fsr2h	equ	0xFDA
  7552                           fsr2l	equ	0xFD9
  7553                           status	equ	0xFD8
  7554                           
  7555 ;; *************** function _ReadEarthLeakage *****************
  7556 ;; Defined at:
  7557 ;;		line 1158 in file "Released IBC-1 Code - 03-06-2016/main.c"
  7558 ;; Parameters:    Size  Location     Type
  7559 ;;		None
  7560 ;; Auto vars:     Size  Location     Type
  7561 ;;  i               2    7[BANK0 ] int 
  7562 ;;  Failed          2    5[BANK0 ] int 
  7563 ;;  earthLeakage    2    3[BANK0 ] unsigned short 
  7564 ;; Return value:  Size  Location     Type
  7565 ;;                  1    wreg      void 
  7566 ;; Registers used:
  7567 ;;		wreg, status,2, status,0, cstack
  7568 ;; Tracked objects:
  7569 ;;		On entry : 0/0
  7570 ;;		On exit  : 0/0
  7571 ;;		Unchanged: 0/0
  7572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7573 ;;      Params:         0       0       0       0       0       0       0
  7574 ;;      Locals:         0       6       0       0       0       0       0
  7575 ;;      Temps:          0       0       0       0       0       0       0
  7576 ;;      Totals:         0       6       0       0       0       0       0
  7577 ;;Total ram usage:        6 bytes
  7578 ;; Hardware stack levels used:    1
  7579 ;; Hardware stack levels required when called:    6
  7580 ;; This function calls:
  7581 ;;		_ReadAnalogVoltage
  7582 ;; This function is called by:
  7583 ;;		_checkCableFaults
  7584 ;; This function uses a non-reentrant model
  7585 ;;
  7586                           
  7587                           	psect	text37
  7588  00209E                     __ptext37:
  7589                           	opt stack 0
  7590  00209E                     _ReadEarthLeakage:
  7591                           	opt stack 23
  7592                           
  7593                           ;main.c: 1159: unsigned short earthLeakageValueUS;
  7594                           ;main.c: 1163: int Failed=1;
  7595                           
  7596                           ;incstack = 0
  7597  00209E  0E00               	movlw	0
  7598  0020A0  0100               	movlb	0	; () banked
  7599  0020A2  6FC8               	movwf	(ReadEarthLeakage@Failed+1)& (0+255),b
  7600  0020A4  0E01               	movlw	1
  7601  0020A6  6FC7               	movwf	ReadEarthLeakage@Failed& (0+255),b
  7602                           
  7603                           ;main.c: 1164: for(int i=0; i<40 ;i++){
  7604  0020A8  0E00               	movlw	0
  7605  0020AA  0100               	movlb	0	; () banked
  7606  0020AC  6FCA               	movwf	(ReadEarthLeakage@i+1)& (0+255),b
  7607  0020AE  0E00               	movlw	0
  7608  0020B0  6FC9               	movwf	ReadEarthLeakage@i& (0+255),b
  7609  0020B2                     l4026:
  7610                           
  7611                           ; BSR set to: 0
  7612  0020B2  0100               	movlb	0	; () banked
  7613  0020B4  BFCA               	btfsc	(ReadEarthLeakage@i+1)& (0+255),7,b
  7614  0020B6  D008               	goto	l4030
  7615  0020B8  0100               	movlb	0	; () banked
  7616  0020BA  51CA               	movf	(ReadEarthLeakage@i+1)& (0+255),w,b
  7617  0020BC  E126               	bnz	l4042
  7618  0020BE  0E28               	movlw	40
  7619  0020C0  0100               	movlb	0	; () banked
  7620  0020C2  5DC9               	subwf	ReadEarthLeakage@i& (0+255),w,b
  7621  0020C4  B0D8               	btfsc	status,0,c
  7622  0020C6  D021               	goto	l4042
  7623  0020C8                     l4030:
  7624                           
  7625                           ; BSR set to: 0
  7626                           ;main.c: 1165: _delay((unsigned long)((10)*(16000000/4000000.0)));
  7627  0020C8  0E0D               	movlw	13
  7628  0020CA                     u4867:
  7629  0020CA  2EE8               	decfsz	wreg,f,c
  7630  0020CC  D7FE               	goto	u4867
  7631  0020CE  F000               	nop	
  7632                           
  7633                           ;main.c: 1166: earthLeakageValueUS = ReadAnalogVoltage(0);
  7634  0020D0  0E00               	movlw	0
  7635  0020D2  ECA8  F014         	call	_ReadAnalogVoltage
  7636  0020D6  C0C2  F0C5         	movff	?_ReadAnalogVoltage,ReadEarthLeakage@earthLeakageValueUS
  7637  0020DA  C0C3  F0C6         	movff	?_ReadAnalogVoltage+1,ReadEarthLeakage@earthLeakageValueUS+1
  7638                           
  7639                           ;main.c: 1167: if(earthLeakageValueUS < 390){
  7640  0020DE  0E86               	movlw	134
  7641  0020E0  0100               	movlb	0	; () banked
  7642  0020E2  5DC5               	subwf	ReadEarthLeakage@earthLeakageValueUS& (0+255),w,b
  7643  0020E4  0E01               	movlw	1
  7644  0020E6  0100               	movlb	0	; () banked
  7645  0020E8  59C6               	subwfb	(ReadEarthLeakage@earthLeakageValueUS+1)& (0+255),w,b
  7646  0020EA  B0D8               	btfsc	status,0,c
  7647  0020EC  D00A               	goto	l4038
  7648                           
  7649                           ; BSR set to: 0
  7650                           ;main.c: 1168: Failed=0;
  7651  0020EE  0E00               	movlw	0
  7652  0020F0  0100               	movlb	0	; () banked
  7653  0020F2  6FC8               	movwf	(ReadEarthLeakage@Failed+1)& (0+255),b
  7654  0020F4  0E00               	movlw	0
  7655  0020F6  6FC7               	movwf	ReadEarthLeakage@Failed& (0+255),b
  7656                           
  7657                           ;main.c: 1169: earthLeakageCounter =0;
  7658  0020F8  0E00               	movlw	0
  7659  0020FA  0100               	movlb	0	; () banked
  7660  0020FC  6F9D               	movwf	(_earthLeakageCounter+1)& (0+255),b
  7661  0020FE  0E00               	movlw	0
  7662  002100  6F9C               	movwf	_earthLeakageCounter& (0+255),b
  7663  002102                     l4038:
  7664                           
  7665                           ; BSR set to: 0
  7666  002102  0100               	movlb	0	; () banked
  7667  002104  4BC9               	infsnz	ReadEarthLeakage@i& (0+255),f,b
  7668  002106  2BCA               	incf	(ReadEarthLeakage@i+1)& (0+255),f,b
  7669  002108  D7D4               	goto	l4026
  7670  00210A                     l4042:
  7671                           
  7672                           ; BSR set to: 0
  7673                           ;main.c: 1170: }
  7674                           ;main.c: 1171: }
  7675                           ;main.c: 1173: if(Failed){
  7676  00210A  0100               	movlb	0	; () banked
  7677  00210C  51C7               	movf	ReadEarthLeakage@Failed& (0+255),w,b
  7678  00210E  0100               	movlb	0	; () banked
  7679  002110  11C8               	iorwf	(ReadEarthLeakage@Failed+1)& (0+255),w,b
  7680  002112  B4D8               	btfsc	status,2,c
  7681  002114  D00B               	goto	l4050
  7682                           
  7683                           ; BSR set to: 0
  7684                           ;main.c: 1174: (earthLeakageCounter== 4)?0:earthLeakageCounter++;
  7685  002116  0E04               	movlw	4
  7686  002118  0100               	movlb	0	; () banked
  7687  00211A  199C               	xorwf	_earthLeakageCounter& (0+255),w,b
  7688  00211C  0100               	movlb	0	; () banked
  7689  00211E  119D               	iorwf	(_earthLeakageCounter+1)& (0+255),w,b
  7690  002120  B4D8               	btfsc	status,2,c
  7691  002122  D009               	goto	l4052
  7692                           
  7693                           ; BSR set to: 0
  7694                           
  7695                           ; BSR set to: 0
  7696                           
  7697                           ; BSR set to: 0
  7698  002124  0100               	movlb	0	; () banked
  7699  002126  4B9C               	infsnz	_earthLeakageCounter& (0+255),f,b
  7700  002128  2B9D               	incf	(_earthLeakageCounter+1)& (0+255),f,b
  7701                           
  7702                           ; BSR set to: 0
  7703                           ;main.c: 1176: }
  7704  00212A  D005               	goto	l4052
  7705  00212C                     l4050:
  7706                           
  7707                           ; BSR set to: 0
  7708                           ;main.c: 1177: else{
  7709                           ;main.c: 1178: earthLeakageCounter=0;
  7710  00212C  0E00               	movlw	0
  7711  00212E  0100               	movlb	0	; () banked
  7712  002130  6F9D               	movwf	(_earthLeakageCounter+1)& (0+255),b
  7713  002132  0E00               	movlw	0
  7714  002134  6F9C               	movwf	_earthLeakageCounter& (0+255),b
  7715  002136                     l4052:
  7716                           
  7717                           ; BSR set to: 0
  7718                           ;main.c: 1179: }
  7719                           ;main.c: 1181: earthLeakageProblemUCG = (earthLeakageCounter == 4)?1:0;
  7720  002136  0E04               	movlw	4
  7721  002138  0100               	movlb	0	; () banked
  7722  00213A  199C               	xorwf	_earthLeakageCounter& (0+255),w,b
  7723  00213C  0100               	movlb	0	; () banked
  7724  00213E  119D               	iorwf	(_earthLeakageCounter+1)& (0+255),w,b
  7725  002140  A4D8               	btfss	status,2,c
  7726  002142  D002               	goto	u2800
  7727  002144  0E01               	movlw	1
  7728  002146  D001               	goto	u2810
  7729  002148                     u2800:
  7730  002148  0E00               	movlw	0
  7731  00214A                     u2810:
  7732  00214A  0100               	movlb	0	; () banked
  7733  00214C  6FB7               	movwf	_earthLeakageProblemUCG& (0+255),b
  7734                           
  7735                           ; BSR set to: 0
  7736  00214E  0012               	return		;funcret
  7737  002150                     __end_of_ReadEarthLeakage:
  7738                           	opt stack 0
  7739                           tblptru	equ	0xFF8
  7740                           tblptrh	equ	0xFF7
  7741                           tblptrl	equ	0xFF6
  7742                           tablat	equ	0xFF5
  7743                           prodh	equ	0xFF4
  7744                           prodl	equ	0xFF3
  7745                           intcon	equ	0xFF2
  7746                           indf0	equ	0xFEF
  7747                           postinc0	equ	0xFEE
  7748                           fsr0h	equ	0xFEA
  7749                           fsr0l	equ	0xFE9
  7750                           wreg	equ	0xFE8
  7751                           indf1	equ	0xFE7
  7752                           postdec1	equ	0xFE5
  7753                           fsr1h	equ	0xFE2
  7754                           fsr1l	equ	0xFE1
  7755                           indf2	equ	0xFDF
  7756                           postinc2	equ	0xFDE
  7757                           postdec2	equ	0xFDD
  7758                           fsr2h	equ	0xFDA
  7759                           fsr2l	equ	0xFD9
  7760                           status	equ	0xFD8
  7761                           
  7762 ;; *************** function _ReadCableFault *****************
  7763 ;; Defined at:
  7764 ;;		line 1201 in file "Released IBC-1 Code - 03-06-2016/main.c"
  7765 ;; Parameters:    Size  Location     Type
  7766 ;;		None
  7767 ;; Auto vars:     Size  Location     Type
  7768 ;;  cableFaultVa    2    3[BANK0 ] unsigned short 
  7769 ;; Return value:  Size  Location     Type
  7770 ;;                  1    wreg      void 
  7771 ;; Registers used:
  7772 ;;		wreg, status,2, status,0, cstack
  7773 ;; Tracked objects:
  7774 ;;		On entry : 0/0
  7775 ;;		On exit  : 0/0
  7776 ;;		Unchanged: 0/0
  7777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7778 ;;      Params:         0       0       0       0       0       0       0
  7779 ;;      Locals:         0       2       0       0       0       0       0
  7780 ;;      Temps:          0       0       0       0       0       0       0
  7781 ;;      Totals:         0       2       0       0       0       0       0
  7782 ;;Total ram usage:        2 bytes
  7783 ;; Hardware stack levels used:    1
  7784 ;; Hardware stack levels required when called:    6
  7785 ;; This function calls:
  7786 ;;		_ReadAnalogVoltage
  7787 ;; This function is called by:
  7788 ;;		_checkCableFaults
  7789 ;; This function uses a non-reentrant model
  7790 ;;
  7791                           
  7792                           	psect	text38
  7793  0027E0                     __ptext38:
  7794                           	opt stack 0
  7795  0027E0                     _ReadCableFault:
  7796                           	opt stack 23
  7797                           
  7798                           ;main.c: 1203: unsigned short cableFaultValueUS;
  7799                           ;main.c: 1205: _delay((unsigned long)((24)*(16000000/4000000.0)));
  7800                           
  7801                           ; BSR set to: 0
  7802                           ;incstack = 0
  7803  0027E0  0E20               	movlw	32
  7804  0027E2                     u4877:
  7805  0027E2  2EE8               	decfsz	wreg,f,c
  7806  0027E4  D7FE               	goto	u4877
  7807                           
  7808                           ;main.c: 1206: cableFaultValueUS = ReadAnalogVoltage(1);
  7809  0027E6  0E01               	movlw	1
  7810  0027E8  ECA8  F014         	call	_ReadAnalogVoltage
  7811  0027EC  C0C2  F0C5         	movff	?_ReadAnalogVoltage,ReadCableFault@cableFaultValueUS
  7812  0027F0  C0C3  F0C6         	movff	?_ReadAnalogVoltage+1,ReadCableFault@cableFaultValueUS+1
  7813                           
  7814                           ;main.c: 1207: if(cableFaultValueUS > 375){
  7815  0027F4  0E78               	movlw	120
  7816  0027F6  0100               	movlb	0	; () banked
  7817  0027F8  5DC5               	subwf	ReadCableFault@cableFaultValueUS& (0+255),w,b
  7818  0027FA  0E01               	movlw	1
  7819  0027FC  0100               	movlb	0	; () banked
  7820  0027FE  59C6               	subwfb	(ReadCableFault@cableFaultValueUS+1)& (0+255),w,b
  7821  002800  A0D8               	btfss	status,0,c
  7822  002802  D00B               	goto	l4068
  7823                           
  7824                           ; BSR set to: 0
  7825                           ;main.c: 1208: (cableFaultCounter== 40)?0:cableFaultCounter++;
  7826  002804  0E28               	movlw	40
  7827  002806  0100               	movlb	0	; () banked
  7828  002808  199A               	xorwf	_cableFaultCounter& (0+255),w,b
  7829  00280A  0100               	movlb	0	; () banked
  7830  00280C  119B               	iorwf	(_cableFaultCounter+1)& (0+255),w,b
  7831  00280E  B4D8               	btfsc	status,2,c
  7832  002810  D009               	goto	l4070
  7833                           
  7834                           ; BSR set to: 0
  7835                           
  7836                           ; BSR set to: 0
  7837                           
  7838                           ; BSR set to: 0
  7839  002812  0100               	movlb	0	; () banked
  7840  002814  4B9A               	infsnz	_cableFaultCounter& (0+255),f,b
  7841  002816  2B9B               	incf	(_cableFaultCounter+1)& (0+255),f,b
  7842                           
  7843                           ; BSR set to: 0
  7844                           ;main.c: 1209: }
  7845  002818  D005               	goto	l4070
  7846  00281A                     l4068:
  7847                           
  7848                           ; BSR set to: 0
  7849                           ;main.c: 1210: else{
  7850                           ;main.c: 1211: cableFaultCounter =0;
  7851  00281A  0E00               	movlw	0
  7852  00281C  0100               	movlb	0	; () banked
  7853  00281E  6F9B               	movwf	(_cableFaultCounter+1)& (0+255),b
  7854  002820  0E00               	movlw	0
  7855  002822  6F9A               	movwf	_cableFaultCounter& (0+255),b
  7856  002824                     l4070:
  7857                           
  7858                           ; BSR set to: 0
  7859                           ;main.c: 1212: }
  7860                           ;main.c: 1213: cableFaultProblemUCG = (cableFaultCounter == 40)?1:0;
  7861  002824  0E28               	movlw	40
  7862  002826  0100               	movlb	0	; () banked
  7863  002828  199A               	xorwf	_cableFaultCounter& (0+255),w,b
  7864  00282A  0100               	movlb	0	; () banked
  7865  00282C  119B               	iorwf	(_cableFaultCounter+1)& (0+255),w,b
  7866  00282E  A4D8               	btfss	status,2,c
  7867  002830  D002               	goto	u2840
  7868  002832  0E01               	movlw	1
  7869  002834  D001               	goto	u2850
  7870  002836                     u2840:
  7871  002836  0E00               	movlw	0
  7872  002838                     u2850:
  7873  002838  0100               	movlb	0	; () banked
  7874  00283A  6FB6               	movwf	_cableFaultProblemUCG& (0+255),b
  7875                           
  7876                           ; BSR set to: 0
  7877  00283C  0012               	return		;funcret
  7878  00283E                     __end_of_ReadCableFault:
  7879                           	opt stack 0
  7880                           tblptru	equ	0xFF8
  7881                           tblptrh	equ	0xFF7
  7882                           tblptrl	equ	0xFF6
  7883                           tablat	equ	0xFF5
  7884                           prodh	equ	0xFF4
  7885                           prodl	equ	0xFF3
  7886                           intcon	equ	0xFF2
  7887                           indf0	equ	0xFEF
  7888                           postinc0	equ	0xFEE
  7889                           fsr0h	equ	0xFEA
  7890                           fsr0l	equ	0xFE9
  7891                           wreg	equ	0xFE8
  7892                           indf1	equ	0xFE7
  7893                           postdec1	equ	0xFE5
  7894                           fsr1h	equ	0xFE2
  7895                           fsr1l	equ	0xFE1
  7896                           indf2	equ	0xFDF
  7897                           postinc2	equ	0xFDE
  7898                           postdec2	equ	0xFDD
  7899                           fsr2h	equ	0xFDA
  7900                           fsr2l	equ	0xFD9
  7901                           status	equ	0xFD8
  7902                           
  7903 ;; *************** function _ReadAnalogVoltage *****************
  7904 ;; Defined at:
  7905 ;;		line 1131 in file "Released IBC-1 Code - 03-06-2016/main.c"
  7906 ;; Parameters:    Size  Location     Type
  7907 ;;  channelC        1    wreg     unsigned char 
  7908 ;; Auto vars:     Size  Location     Type
  7909 ;;  channelC        1    2[BANK0 ] unsigned char 
  7910 ;; Return value:  Size  Location     Type
  7911 ;;                  2    0[BANK0 ] unsigned short 
  7912 ;; Registers used:
  7913 ;;		wreg, status,2, status,0
  7914 ;; Tracked objects:
  7915 ;;		On entry : 0/0
  7916 ;;		On exit  : 0/0
  7917 ;;		Unchanged: 0/0
  7918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7919 ;;      Params:         0       2       0       0       0       0       0
  7920 ;;      Locals:         0       1       0       0       0       0       0
  7921 ;;      Temps:          0       0       0       0       0       0       0
  7922 ;;      Totals:         0       3       0       0       0       0       0
  7923 ;;Total ram usage:        3 bytes
  7924 ;; Hardware stack levels used:    1
  7925 ;; Hardware stack levels required when called:    5
  7926 ;; This function calls:
  7927 ;;		Nothing
  7928 ;; This function is called by:
  7929 ;;		_ReadEarthLeakage
  7930 ;;		_ReadCableFault
  7931 ;;		_ReadFireOut
  7932 ;; This function uses a non-reentrant model
  7933 ;;
  7934                           
  7935                           	psect	text39
  7936  002950                     __ptext39:
  7937                           	opt stack 0
  7938  002950                     _ReadAnalogVoltage:
  7939                           	opt stack 23
  7940                           
  7941                           ; BSR set to: 0
  7942                           ;incstack = 0
  7943                           ;ReadAnalogVoltage@channelC stored from wreg
  7944  002950  0100               	movlb	0	; () banked
  7945  002952  6FC4               	movwf	ReadAnalogVoltage@channelC& (0+255),b
  7946                           
  7947                           ;main.c: 1133: ADCON1bits.PVCFG = 0b00;
  7948  002954  0EF3               	movlw	-13
  7949  002956  16C1               	andwf	4033,f,c	;volatile
  7950                           
  7951                           ;main.c: 1135: switch(channelC){
  7952  002958  D011               	goto	l3840
  7953  00295A                     l899:
  7954                           
  7955                           ; BSR set to: 0
  7956                           ;main.c: 1138: ADCON0bits.CHS = 0b01110;
  7957  00295A  94C2               	bcf	4034,2,c	;volatile
  7958  00295C  86C2               	bsf	4034,3,c	;volatile
  7959  00295E  D00B               	goto	L4
  7960  002960                     l901:
  7961                           
  7962                           ; BSR set to: 0
  7963                           ;main.c: 1141: ADCON0bits.CHS = 0b00000;
  7964  002960  94C2               	bcf	4034,2,c	;volatile
  7965  002962  D003               	goto	L3
  7966  002964                     L2:
  7967  002964  9CC2               	bcf	4034,6,c	;volatile
  7968                           
  7969                           ;main.c: 1142: break;
  7970  002966  D018               	goto	l900
  7971  002968                     l902:
  7972                           
  7973                           ; BSR set to: 0
  7974                           ;main.c: 1144: ADCON0bits.CHS = 0b00001;
  7975  002968  84C2               	bsf	4034,2,c	;volatile
  7976  00296A                     L3:
  7977  00296A  96C2               	bcf	4034,3,c	;volatile
  7978  00296C  98C2               	bcf	4034,4,c	;volatile
  7979  00296E  9AC2               	bcf	4034,5,c	;volatile
  7980  002970  D7F9               	goto	L2
  7981  002972                     l903:
  7982                           
  7983                           ; BSR set to: 0
  7984                           ;main.c: 1147: ADCON0bits.CHS = 0b01101;
  7985  002972  84C2               	bsf	4034,2,c	;volatile
  7986  002974  96C2               	bcf	4034,3,c	;volatile
  7987  002976                     L4:
  7988  002976  88C2               	bsf	4034,4,c	;volatile
  7989  002978  8AC2               	bsf	4034,5,c	;volatile
  7990  00297A  D7F4               	goto	L2
  7991  00297C                     l3840:
  7992  00297C  0100               	movlb	0	; () banked
  7993  00297E  51C4               	movf	ReadAnalogVoltage@channelC& (0+255),w,b
  7994                           
  7995                           ; Switch size 1, requested type "space"
  7996                           ; Number of cases is 4, Range of values is 0 to 3
  7997                           ; switch strategies available:
  7998                           ; Name         Instructions Cycles
  7999                           ; simple_byte           13     7 (average)
  8000                           ;	Chosen strategy is simple_byte
  8001  002980  0A00               	xorlw	0	; case 0
  8002  002982  B4D8               	btfsc	status,2,c
  8003  002984  D7EA               	goto	l899
  8004  002986  0A01               	xorlw	1	; case 1
  8005  002988  B4D8               	btfsc	status,2,c
  8006  00298A  D7EA               	goto	l901
  8007  00298C  0A03               	xorlw	3	; case 2
  8008  00298E  B4D8               	btfsc	status,2,c
  8009  002990  D7EB               	goto	l902
  8010  002992  0A01               	xorlw	1	; case 3
  8011  002994  B4D8               	btfsc	status,2,c
  8012  002996  D7ED               	goto	l903
  8013  002998                     l900:
  8014                           
  8015                           ; BSR set to: 0
  8016                           ;main.c: 1152: ADCON0bits.GO_nDONE = 1;
  8017  002998  82C2               	bsf	4034,1,c	;volatile
  8018  00299A                     l904:
  8019  00299A  B2C2               	btfsc	4034,1,c	;volatile
  8020  00299C  D7FE               	goto	l904
  8021                           
  8022                           ;main.c: 1155: return ADRES;
  8023  00299E  CFC3 F0C2          	movff	4035,?_ReadAnalogVoltage	;volatile
  8024  0029A2  CFC4 F0C3          	movff	4036,?_ReadAnalogVoltage+1	;volatile
  8025  0029A6  0012               	return		;funcret
  8026  0029A8                     __end_of_ReadAnalogVoltage:
  8027                           	opt stack 0
  8028                           tblptru	equ	0xFF8
  8029                           tblptrh	equ	0xFF7
  8030                           tblptrl	equ	0xFF6
  8031                           tablat	equ	0xFF5
  8032                           prodh	equ	0xFF4
  8033                           prodl	equ	0xFF3
  8034                           intcon	equ	0xFF2
  8035                           indf0	equ	0xFEF
  8036                           postinc0	equ	0xFEE
  8037                           fsr0h	equ	0xFEA
  8038                           fsr0l	equ	0xFE9
  8039                           wreg	equ	0xFE8
  8040                           indf1	equ	0xFE7
  8041                           postdec1	equ	0xFE5
  8042                           fsr1h	equ	0xFE2
  8043                           fsr1l	equ	0xFE1
  8044                           indf2	equ	0xFDF
  8045                           postinc2	equ	0xFDE
  8046                           postdec2	equ	0xFDD
  8047                           fsr2h	equ	0xFDA
  8048                           fsr2l	equ	0xFD9
  8049                           status	equ	0xFD8
  8050                           
  8051 ;; *************** function _UART_Init *****************
  8052 ;; Defined at:
  8053 ;;		line 45 in file "Released IBC-1 Code - 03-06-2016/UART.c"
  8054 ;; Parameters:    Size  Location     Type
  8055 ;;  baudrate        4   14[BANK0 ] const long 
  8056 ;; Auto vars:     Size  Location     Type
  8057 ;;  x               2   26[BANK0 ] unsigned int 
  8058 ;; Return value:  Size  Location     Type
  8059 ;;                  1    wreg      unsigned char 
  8060 ;; Registers used:
  8061 ;;		wreg, status,2, status,0, cstack
  8062 ;; Tracked objects:
  8063 ;;		On entry : 0/0
  8064 ;;		On exit  : 0/0
  8065 ;;		Unchanged: 0/0
  8066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8067 ;;      Params:         0       4       0       0       0       0       0
  8068 ;;      Locals:         0       2       0       0       0       0       0
  8069 ;;      Temps:          0       8       0       0       0       0       0
  8070 ;;      Totals:         0      14       0       0       0       0       0
  8071 ;;Total ram usage:       14 bytes
  8072 ;; Hardware stack levels used:    1
  8073 ;; Hardware stack levels required when called:    6
  8074 ;; This function calls:
  8075 ;;		___aldiv
  8076 ;; This function is called by:
  8077 ;;		_InitSystem
  8078 ;; This function uses a non-reentrant model
  8079 ;;
  8080                           
  8081                           	psect	text40
  8082  001216                     __ptext40:
  8083                           	opt stack 0
  8084  001216                     _UART_Init:
  8085                           	opt stack 23
  8086                           
  8087                           ;UART.c: 47: unsigned int x;
  8088                           ;UART.c: 48: x = (16000000*4 - baudrate*64)/(baudrate*64);
  8089                           
  8090                           ;incstack = 0
  8091  001216  C0D0  F0D4         	movff	UART_Init@baudrate,??_UART_Init
  8092  00121A  C0D1  F0D5         	movff	UART_Init@baudrate+1,??_UART_Init+1
  8093  00121E  C0D2  F0D6         	movff	UART_Init@baudrate+2,??_UART_Init+2
  8094  001222  C0D3  F0D7         	movff	UART_Init@baudrate+3,??_UART_Init+3
  8095  001226  0E06               	movlw	6
  8096  001228                     u3105:
  8097  001228  90D8               	bcf	status,0,c
  8098  00122A  0100               	movlb	0	; () banked
  8099  00122C  37D4               	rlcf	??_UART_Init& (0+255),f,b
  8100  00122E  37D5               	rlcf	(??_UART_Init+1)& (0+255),f,b
  8101  001230  37D6               	rlcf	(??_UART_Init+2)& (0+255),f,b
  8102  001232  37D7               	rlcf	(??_UART_Init+3)& (0+255),f,b
  8103  001234  2EE8               	decfsz	wreg,f,c
  8104  001236  D7F8               	goto	u3105
  8105  001238  0100               	movlb	0	; () banked
  8106  00123A  1FD4               	comf	??_UART_Init& (0+255),f,b
  8107  00123C  1FD5               	comf	(??_UART_Init+1)& (0+255),f,b
  8108  00123E  1FD6               	comf	(??_UART_Init+2)& (0+255),f,b
  8109  001240  1FD7               	comf	(??_UART_Init+3)& (0+255),f,b
  8110  001242  2BD4               	incf	??_UART_Init& (0+255),f,b
  8111  001244  0E00               	movlw	0
  8112  001246  23D5               	addwfc	(??_UART_Init+1)& (0+255),f,b
  8113  001248  23D6               	addwfc	(??_UART_Init+2)& (0+255),f,b
  8114  00124A  23D7               	addwfc	(??_UART_Init+3)& (0+255),f,b
  8115  00124C  0E00               	movlw	0
  8116  00124E  0100               	movlb	0	; () banked
  8117  001250  25D4               	addwf	??_UART_Init& (0+255),w,b
  8118  001252  0100               	movlb	0	; () banked
  8119  001254  6FC2               	movwf	___aldiv@dividend& (0+255),b
  8120  001256  0E90               	movlw	144
  8121  001258  0100               	movlb	0	; () banked
  8122  00125A  21D5               	addwfc	(??_UART_Init+1)& (0+255),w,b
  8123  00125C  0100               	movlb	0	; () banked
  8124  00125E  6FC3               	movwf	(___aldiv@dividend+1)& (0+255),b
  8125  001260  0ED0               	movlw	208
  8126  001262  0100               	movlb	0	; () banked
  8127  001264  21D6               	addwfc	(??_UART_Init+2)& (0+255),w,b
  8128  001266  0100               	movlb	0	; () banked
  8129  001268  6FC4               	movwf	(___aldiv@dividend+2)& (0+255),b
  8130  00126A  0E03               	movlw	3
  8131  00126C  0100               	movlb	0	; () banked
  8132  00126E  21D7               	addwfc	(??_UART_Init+3)& (0+255),w,b
  8133  001270  0100               	movlb	0	; () banked
  8134  001272  6FC5               	movwf	(___aldiv@dividend+3)& (0+255),b
  8135  001274  C0D0  F0D8         	movff	UART_Init@baudrate,??_UART_Init+4
  8136  001278  C0D1  F0D9         	movff	UART_Init@baudrate+1,??_UART_Init+5
  8137  00127C  C0D2  F0DA         	movff	UART_Init@baudrate+2,??_UART_Init+6
  8138  001280  C0D3  F0DB         	movff	UART_Init@baudrate+3,??_UART_Init+7
  8139  001284  0E06               	movlw	6
  8140  001286                     u3115:
  8141  001286  90D8               	bcf	status,0,c
  8142  001288  0100               	movlb	0	; () banked
  8143  00128A  37D8               	rlcf	(??_UART_Init+4)& (0+255),f,b
  8144  00128C  37D9               	rlcf	(??_UART_Init+5)& (0+255),f,b
  8145  00128E  37DA               	rlcf	(??_UART_Init+6)& (0+255),f,b
  8146  001290  37DB               	rlcf	(??_UART_Init+7)& (0+255),f,b
  8147  001292  2EE8               	decfsz	wreg,f,c
  8148  001294  D7F8               	goto	u3115
  8149  001296  C0D8  F0C6         	movff	??_UART_Init+4,___aldiv@divisor
  8150  00129A  C0D9  F0C7         	movff	??_UART_Init+5,___aldiv@divisor+1
  8151  00129E  C0DA  F0C8         	movff	??_UART_Init+6,___aldiv@divisor+2
  8152  0012A2  C0DB  F0C9         	movff	??_UART_Init+7,___aldiv@divisor+3
  8153  0012A6  EC27  F00C         	call	___aldiv	;wreg free
  8154  0012AA  C0C2  F0DC         	movff	?___aldiv,UART_Init@x
  8155  0012AE  C0C3  F0DD         	movff	?___aldiv+1,UART_Init@x+1
  8156                           
  8157                           ;UART.c: 49: if(x>255)
  8158  0012B2  0100               	movlb	0	; () banked
  8159  0012B4  05DD               	decf	(UART_Init@x+1)& (0+255),w,b
  8160  0012B6  A0D8               	btfss	status,0,c
  8161  0012B8  D04F               	goto	l4306
  8162                           
  8163                           ; BSR set to: 0
  8164                           ;UART.c: 50: {
  8165                           ;UART.c: 51: x = (16000000*4 - baudrate*16)/(baudrate*16);
  8166  0012BA  C0D0  F0D4         	movff	UART_Init@baudrate,??_UART_Init
  8167  0012BE  C0D1  F0D5         	movff	UART_Init@baudrate+1,??_UART_Init+1
  8168  0012C2  C0D2  F0D6         	movff	UART_Init@baudrate+2,??_UART_Init+2
  8169  0012C6  C0D3  F0D7         	movff	UART_Init@baudrate+3,??_UART_Init+3
  8170  0012CA  0E04               	movlw	4
  8171  0012CC                     u3135:
  8172  0012CC  90D8               	bcf	status,0,c
  8173  0012CE  0100               	movlb	0	; () banked
  8174  0012D0  37D4               	rlcf	??_UART_Init& (0+255),f,b
  8175  0012D2  37D5               	rlcf	(??_UART_Init+1)& (0+255),f,b
  8176  0012D4  37D6               	rlcf	(??_UART_Init+2)& (0+255),f,b
  8177  0012D6  37D7               	rlcf	(??_UART_Init+3)& (0+255),f,b
  8178  0012D8  2EE8               	decfsz	wreg,f,c
  8179  0012DA  D7F8               	goto	u3135
  8180  0012DC  0100               	movlb	0	; () banked
  8181  0012DE  1FD4               	comf	??_UART_Init& (0+255),f,b
  8182  0012E0  1FD5               	comf	(??_UART_Init+1)& (0+255),f,b
  8183  0012E2  1FD6               	comf	(??_UART_Init+2)& (0+255),f,b
  8184  0012E4  1FD7               	comf	(??_UART_Init+3)& (0+255),f,b
  8185  0012E6  2BD4               	incf	??_UART_Init& (0+255),f,b
  8186  0012E8  0E00               	movlw	0
  8187  0012EA  23D5               	addwfc	(??_UART_Init+1)& (0+255),f,b
  8188  0012EC  23D6               	addwfc	(??_UART_Init+2)& (0+255),f,b
  8189  0012EE  23D7               	addwfc	(??_UART_Init+3)& (0+255),f,b
  8190  0012F0  0E00               	movlw	0
  8191  0012F2  0100               	movlb	0	; () banked
  8192  0012F4  25D4               	addwf	??_UART_Init& (0+255),w,b
  8193  0012F6  0100               	movlb	0	; () banked
  8194  0012F8  6FC2               	movwf	___aldiv@dividend& (0+255),b
  8195  0012FA  0E90               	movlw	144
  8196  0012FC  0100               	movlb	0	; () banked
  8197  0012FE  21D5               	addwfc	(??_UART_Init+1)& (0+255),w,b
  8198  001300  0100               	movlb	0	; () banked
  8199  001302  6FC3               	movwf	(___aldiv@dividend+1)& (0+255),b
  8200  001304  0ED0               	movlw	208
  8201  001306  0100               	movlb	0	; () banked
  8202  001308  21D6               	addwfc	(??_UART_Init+2)& (0+255),w,b
  8203  00130A  0100               	movlb	0	; () banked
  8204  00130C  6FC4               	movwf	(___aldiv@dividend+2)& (0+255),b
  8205  00130E  0E03               	movlw	3
  8206  001310  0100               	movlb	0	; () banked
  8207  001312  21D7               	addwfc	(??_UART_Init+3)& (0+255),w,b
  8208  001314  0100               	movlb	0	; () banked
  8209  001316  6FC5               	movwf	(___aldiv@dividend+3)& (0+255),b
  8210  001318  C0D0  F0D8         	movff	UART_Init@baudrate,??_UART_Init+4
  8211  00131C  C0D1  F0D9         	movff	UART_Init@baudrate+1,??_UART_Init+5
  8212  001320  C0D2  F0DA         	movff	UART_Init@baudrate+2,??_UART_Init+6
  8213  001324  C0D3  F0DB         	movff	UART_Init@baudrate+3,??_UART_Init+7
  8214  001328  0E04               	movlw	4
  8215  00132A                     u3145:
  8216  00132A  90D8               	bcf	status,0,c
  8217  00132C  0100               	movlb	0	; () banked
  8218  00132E  37D8               	rlcf	(??_UART_Init+4)& (0+255),f,b
  8219  001330  37D9               	rlcf	(??_UART_Init+5)& (0+255),f,b
  8220  001332  37DA               	rlcf	(??_UART_Init+6)& (0+255),f,b
  8221  001334  37DB               	rlcf	(??_UART_Init+7)& (0+255),f,b
  8222  001336  2EE8               	decfsz	wreg,f,c
  8223  001338  D7F8               	goto	u3145
  8224  00133A  C0D8  F0C6         	movff	??_UART_Init+4,___aldiv@divisor
  8225  00133E  C0D9  F0C7         	movff	??_UART_Init+5,___aldiv@divisor+1
  8226  001342  C0DA  F0C8         	movff	??_UART_Init+6,___aldiv@divisor+2
  8227  001346  C0DB  F0C9         	movff	??_UART_Init+7,___aldiv@divisor+3
  8228  00134A  EC27  F00C         	call	___aldiv	;wreg free
  8229  00134E  C0C2  F0DC         	movff	?___aldiv,UART_Init@x
  8230  001352  C0C3  F0DD         	movff	?___aldiv+1,UART_Init@x+1
  8231                           
  8232                           ;UART.c: 52: TXSTA1bits.BRGH = 1;
  8233  001356  84AC               	bsf	4012,2,c	;volatile
  8234  001358                     l4306:
  8235                           
  8236                           ;UART.c: 53: }
  8237                           ;UART.c: 54: if(x<256)
  8238  001358  0100               	movlb	0	; () banked
  8239  00135A  05DD               	decf	(UART_Init@x+1)& (0+255),w,b
  8240  00135C  B0D8               	btfsc	status,0,c
  8241  00135E  0012               	return	
  8242                           
  8243                           ; BSR set to: 0
  8244                           ;UART.c: 55: {
  8245                           ;UART.c: 56: x=25;
  8246  001360  0E00               	movlw	0
  8247  001362  0100               	movlb	0	; () banked
  8248  001364  6FDD               	movwf	(UART_Init@x+1)& (0+255),b
  8249  001366  0E19               	movlw	25
  8250  001368  6FDC               	movwf	UART_Init@x& (0+255),b
  8251                           
  8252                           ; BSR set to: 0
  8253                           ;UART.c: 57: SPBRG1 = x;
  8254  00136A  C0DC  FFAF         	movff	UART_Init@x,4015	;volatile
  8255                           
  8256                           ; BSR set to: 0
  8257                           ;UART.c: 58: TXSTA1bits.SYNC = 0;
  8258  00136E  98AC               	bcf	4012,4,c	;volatile
  8259                           
  8260                           ; BSR set to: 0
  8261                           ;UART.c: 59: RCSTA1bits.SPEN = 1;
  8262  001370  8EAB               	bsf	4011,7,c	;volatile
  8263                           
  8264                           ; BSR set to: 0
  8265                           ;UART.c: 60: RCSTA1bits.CREN = 1;
  8266  001372  88AB               	bsf	4011,4,c	;volatile
  8267                           
  8268                           ; BSR set to: 0
  8269                           ;UART.c: 61: TXSTA1bits.TXEN = 1;
  8270  001374  8AAC               	bsf	4012,5,c	;volatile
  8271                           
  8272                           ; BSR set to: 0
  8273                           ;UART.c: 62: return 1;
  8274                           ;	Return value of _UART_Init is never used
  8275  001376  0012               	return	
  8276  001378                     __end_of_UART_Init:
  8277                           	opt stack 0
  8278                           tblptru	equ	0xFF8
  8279                           tblptrh	equ	0xFF7
  8280                           tblptrl	equ	0xFF6
  8281                           tablat	equ	0xFF5
  8282                           prodh	equ	0xFF4
  8283                           prodl	equ	0xFF3
  8284                           intcon	equ	0xFF2
  8285                           indf0	equ	0xFEF
  8286                           postinc0	equ	0xFEE
  8287                           fsr0h	equ	0xFEA
  8288                           fsr0l	equ	0xFE9
  8289                           wreg	equ	0xFE8
  8290                           indf1	equ	0xFE7
  8291                           postdec1	equ	0xFE5
  8292                           fsr1h	equ	0xFE2
  8293                           fsr1l	equ	0xFE1
  8294                           indf2	equ	0xFDF
  8295                           postinc2	equ	0xFDE
  8296                           postdec2	equ	0xFDD
  8297                           fsr2h	equ	0xFDA
  8298                           fsr2l	equ	0xFD9
  8299                           status	equ	0xFD8
  8300                           
  8301 ;; *************** function ___aldiv *****************
  8302 ;; Defined at:
  8303 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\aldiv.c"
  8304 ;; Parameters:    Size  Location     Type
  8305 ;;  dividend        4    0[BANK0 ] long 
  8306 ;;  divisor         4    4[BANK0 ] long 
  8307 ;; Auto vars:     Size  Location     Type
  8308 ;;  quotient        4   10[BANK0 ] long 
  8309 ;;  sign            1    9[BANK0 ] unsigned char 
  8310 ;;  counter         1    8[BANK0 ] unsigned char 
  8311 ;; Return value:  Size  Location     Type
  8312 ;;                  4    0[BANK0 ] long 
  8313 ;; Registers used:
  8314 ;;		wreg, status,2, status,0
  8315 ;; Tracked objects:
  8316 ;;		On entry : 0/0
  8317 ;;		On exit  : 0/0
  8318 ;;		Unchanged: 0/0
  8319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8320 ;;      Params:         0       8       0       0       0       0       0
  8321 ;;      Locals:         0       6       0       0       0       0       0
  8322 ;;      Temps:          0       0       0       0       0       0       0
  8323 ;;      Totals:         0      14       0       0       0       0       0
  8324 ;;Total ram usage:       14 bytes
  8325 ;; Hardware stack levels used:    1
  8326 ;; Hardware stack levels required when called:    5
  8327 ;; This function calls:
  8328 ;;		Nothing
  8329 ;; This function is called by:
  8330 ;;		_UART_Init
  8331 ;; This function uses a non-reentrant model
  8332 ;;
  8333                           
  8334                           	psect	text41
  8335  00184E                     __ptext41:
  8336                           	opt stack 0
  8337  00184E                     ___aldiv:
  8338                           	opt stack 23
  8339                           
  8340                           ; BSR set to: 0
  8341                           ;incstack = 0
  8342  00184E  0E00               	movlw	0
  8343  001850  0100               	movlb	0	; () banked
  8344  001852  6FCB               	movwf	___aldiv@sign& (0+255),b
  8345                           
  8346                           ; BSR set to: 0
  8347  001854  0100               	movlb	0	; () banked
  8348  001856  AFC9               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  8349  001858  D00C               	goto	l4166
  8350                           
  8351                           ; BSR set to: 0
  8352  00185A  0100               	movlb	0	; () banked
  8353  00185C  1FC9               	comf	(___aldiv@divisor+3)& (0+255),f,b
  8354  00185E  1FC8               	comf	(___aldiv@divisor+2)& (0+255),f,b
  8355  001860  1FC7               	comf	(___aldiv@divisor+1)& (0+255),f,b
  8356  001862  6DC6               	negf	___aldiv@divisor& (0+255),b
  8357  001864  0E00               	movlw	0
  8358  001866  23C7               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
  8359  001868  23C8               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
  8360  00186A  23C9               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
  8361                           
  8362                           ; BSR set to: 0
  8363  00186C  0E01               	movlw	1
  8364  00186E  0100               	movlb	0	; () banked
  8365  001870  6FCB               	movwf	___aldiv@sign& (0+255),b
  8366  001872                     l4166:
  8367                           
  8368                           ; BSR set to: 0
  8369  001872  0100               	movlb	0	; () banked
  8370  001874  AFC5               	btfss	(___aldiv@dividend+3)& (0+255),7,b
  8371  001876  D00C               	goto	l4172
  8372                           
  8373                           ; BSR set to: 0
  8374  001878  0100               	movlb	0	; () banked
  8375  00187A  1FC5               	comf	(___aldiv@dividend+3)& (0+255),f,b
  8376  00187C  1FC4               	comf	(___aldiv@dividend+2)& (0+255),f,b
  8377  00187E  1FC3               	comf	(___aldiv@dividend+1)& (0+255),f,b
  8378  001880  6DC2               	negf	___aldiv@dividend& (0+255),b
  8379  001882  0E00               	movlw	0
  8380  001884  23C3               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
  8381  001886  23C4               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
  8382  001888  23C5               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
  8383                           
  8384                           ; BSR set to: 0
  8385  00188A  0E01               	movlw	1
  8386  00188C  0100               	movlb	0	; () banked
  8387  00188E  1BCB               	xorwf	___aldiv@sign& (0+255),f,b
  8388  001890                     l4172:
  8389                           
  8390                           ; BSR set to: 0
  8391  001890  0E00               	movlw	0
  8392  001892  0100               	movlb	0	; () banked
  8393  001894  6FCC               	movwf	___aldiv@quotient& (0+255),b
  8394  001896  0E00               	movlw	0
  8395  001898  6FCD               	movwf	(___aldiv@quotient+1)& (0+255),b
  8396  00189A  0E00               	movlw	0
  8397  00189C  6FCE               	movwf	(___aldiv@quotient+2)& (0+255),b
  8398  00189E  0E00               	movlw	0
  8399  0018A0  6FCF               	movwf	(___aldiv@quotient+3)& (0+255),b
  8400                           
  8401                           ; BSR set to: 0
  8402  0018A2  0100               	movlb	0	; () banked
  8403  0018A4  51C6               	movf	___aldiv@divisor& (0+255),w,b
  8404  0018A6  0100               	movlb	0	; () banked
  8405  0018A8  11C7               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
  8406  0018AA  0100               	movlb	0	; () banked
  8407  0018AC  11C8               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
  8408  0018AE  0100               	movlb	0	; () banked
  8409  0018B0  11C9               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
  8410  0018B2  B4D8               	btfsc	status,2,c
  8411  0018B4  D042               	goto	l4194
  8412                           
  8413                           ; BSR set to: 0
  8414  0018B6  0E01               	movlw	1
  8415  0018B8  0100               	movlb	0	; () banked
  8416  0018BA  6FCA               	movwf	___aldiv@counter& (0+255),b
  8417  0018BC  D008               	goto	l4180
  8418  0018BE                     l4178:
  8419                           
  8420                           ; BSR set to: 0
  8421  0018BE  0100               	movlb	0	; () banked
  8422  0018C0  90D8               	bcf	status,0,c
  8423  0018C2  37C6               	rlcf	___aldiv@divisor& (0+255),f,b
  8424  0018C4  37C7               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
  8425  0018C6  37C8               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
  8426  0018C8  37C9               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
  8427  0018CA  0100               	movlb	0	; () banked
  8428  0018CC  2BCA               	incf	___aldiv@counter& (0+255),f,b
  8429  0018CE                     l4180:
  8430                           
  8431                           ; BSR set to: 0
  8432  0018CE  0100               	movlb	0	; () banked
  8433  0018D0  AFC9               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  8434  0018D2  D7F5               	goto	l4178
  8435  0018D4                     l4182:
  8436                           
  8437                           ; BSR set to: 0
  8438  0018D4  0100               	movlb	0	; () banked
  8439  0018D6  90D8               	bcf	status,0,c
  8440  0018D8  37CC               	rlcf	___aldiv@quotient& (0+255),f,b
  8441  0018DA  37CD               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  8442  0018DC  37CE               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  8443  0018DE  37CF               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  8444                           
  8445                           ; BSR set to: 0
  8446  0018E0  0100               	movlb	0	; () banked
  8447  0018E2  51C6               	movf	___aldiv@divisor& (0+255),w,b
  8448  0018E4  0100               	movlb	0	; () banked
  8449  0018E6  5DC2               	subwf	___aldiv@dividend& (0+255),w,b
  8450  0018E8  0100               	movlb	0	; () banked
  8451  0018EA  51C7               	movf	(___aldiv@divisor+1)& (0+255),w,b
  8452  0018EC  0100               	movlb	0	; () banked
  8453  0018EE  59C3               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
  8454  0018F0  0100               	movlb	0	; () banked
  8455  0018F2  51C8               	movf	(___aldiv@divisor+2)& (0+255),w,b
  8456  0018F4  0100               	movlb	0	; () banked
  8457  0018F6  59C4               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
  8458  0018F8  0100               	movlb	0	; () banked
  8459  0018FA  51C9               	movf	(___aldiv@divisor+3)& (0+255),w,b
  8460  0018FC  0100               	movlb	0	; () banked
  8461  0018FE  59C5               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
  8462  001900  A0D8               	btfss	status,0,c
  8463  001902  D012               	goto	l4190
  8464                           
  8465                           ; BSR set to: 0
  8466  001904  0100               	movlb	0	; () banked
  8467  001906  51C6               	movf	___aldiv@divisor& (0+255),w,b
  8468  001908  0100               	movlb	0	; () banked
  8469  00190A  5FC2               	subwf	___aldiv@dividend& (0+255),f,b
  8470  00190C  0100               	movlb	0	; () banked
  8471  00190E  51C7               	movf	(___aldiv@divisor+1)& (0+255),w,b
  8472  001910  0100               	movlb	0	; () banked
  8473  001912  5BC3               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
  8474  001914  0100               	movlb	0	; () banked
  8475  001916  51C8               	movf	(___aldiv@divisor+2)& (0+255),w,b
  8476  001918  0100               	movlb	0	; () banked
  8477  00191A  5BC4               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
  8478  00191C  0100               	movlb	0	; () banked
  8479  00191E  51C9               	movf	(___aldiv@divisor+3)& (0+255),w,b
  8480  001920  0100               	movlb	0	; () banked
  8481  001922  5BC5               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
  8482                           
  8483                           ; BSR set to: 0
  8484  001924  0100               	movlb	0	; () banked
  8485  001926  81CC               	bsf	___aldiv@quotient& (0+255),0,b
  8486  001928                     l4190:
  8487                           
  8488                           ; BSR set to: 0
  8489  001928  0100               	movlb	0	; () banked
  8490  00192A  90D8               	bcf	status,0,c
  8491  00192C  33C9               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
  8492  00192E  33C8               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
  8493  001930  33C7               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
  8494  001932  33C6               	rrcf	___aldiv@divisor& (0+255),f,b
  8495                           
  8496                           ; BSR set to: 0
  8497  001934  0100               	movlb	0	; () banked
  8498  001936  2FCA               	decfsz	___aldiv@counter& (0+255),f,b
  8499  001938  D7CD               	goto	l4182
  8500  00193A                     l4194:
  8501                           
  8502                           ; BSR set to: 0
  8503  00193A  0100               	movlb	0	; () banked
  8504  00193C  51CB               	movf	___aldiv@sign& (0+255),w,b
  8505  00193E  0100               	movlb	0	; () banked
  8506  001940  B4D8               	btfsc	status,2,c
  8507  001942  D009               	goto	l4198
  8508                           
  8509                           ; BSR set to: 0
  8510  001944  0100               	movlb	0	; () banked
  8511  001946  1FCF               	comf	(___aldiv@quotient+3)& (0+255),f,b
  8512  001948  1FCE               	comf	(___aldiv@quotient+2)& (0+255),f,b
  8513  00194A  1FCD               	comf	(___aldiv@quotient+1)& (0+255),f,b
  8514  00194C  6DCC               	negf	___aldiv@quotient& (0+255),b
  8515  00194E  0E00               	movlw	0
  8516  001950  23CD               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  8517  001952  23CE               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  8518  001954  23CF               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  8519  001956                     l4198:
  8520                           
  8521                           ; BSR set to: 0
  8522  001956  C0CC  F0C2         	movff	___aldiv@quotient,?___aldiv
  8523  00195A  C0CD  F0C3         	movff	___aldiv@quotient+1,?___aldiv+1
  8524  00195E  C0CE  F0C4         	movff	___aldiv@quotient+2,?___aldiv+2
  8525  001962  C0CF  F0C5         	movff	___aldiv@quotient+3,?___aldiv+3
  8526  001966  0012               	return	
  8527  001968                     __end_of___aldiv:
  8528                           	opt stack 0
  8529                           tblptru	equ	0xFF8
  8530                           tblptrh	equ	0xFF7
  8531                           tblptrl	equ	0xFF6
  8532                           tablat	equ	0xFF5
  8533                           prodh	equ	0xFF4
  8534                           prodl	equ	0xFF3
  8535                           intcon	equ	0xFF2
  8536                           indf0	equ	0xFEF
  8537                           postinc0	equ	0xFEE
  8538                           fsr0h	equ	0xFEA
  8539                           fsr0l	equ	0xFE9
  8540                           wreg	equ	0xFE8
  8541                           indf1	equ	0xFE7
  8542                           postdec1	equ	0xFE5
  8543                           fsr1h	equ	0xFE2
  8544                           fsr1l	equ	0xFE1
  8545                           indf2	equ	0xFDF
  8546                           postinc2	equ	0xFDE
  8547                           postdec2	equ	0xFDD
  8548                           fsr2h	equ	0xFDA
  8549                           fsr2l	equ	0xFD9
  8550                           status	equ	0xFD8
  8551                           
  8552 ;; *************** function _TurnRelayOff *****************
  8553 ;; Defined at:
  8554 ;;		line 1240 in file "Released IBC-1 Code - 03-06-2016/main.c"
  8555 ;; Parameters:    Size  Location     Type
  8556 ;;		None
  8557 ;; Auto vars:     Size  Location     Type
  8558 ;;		None
  8559 ;; Return value:  Size  Location     Type
  8560 ;;                  1    wreg      void 
  8561 ;; Registers used:
  8562 ;;		wreg, status,2
  8563 ;; Tracked objects:
  8564 ;;		On entry : 0/0
  8565 ;;		On exit  : 0/0
  8566 ;;		Unchanged: 0/0
  8567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8568 ;;      Params:         0       0       0       0       0       0       0
  8569 ;;      Locals:         0       0       0       0       0       0       0
  8570 ;;      Temps:          0       0       0       0       0       0       0
  8571 ;;      Totals:         0       0       0       0       0       0       0
  8572 ;;Total ram usage:        0 bytes
  8573 ;; Hardware stack levels used:    1
  8574 ;; Hardware stack levels required when called:    5
  8575 ;; This function calls:
  8576 ;;		Nothing
  8577 ;; This function is called by:
  8578 ;;		_main
  8579 ;;		_InitSystem
  8580 ;; This function uses a non-reentrant model
  8581 ;;
  8582                           
  8583                           	psect	text42
  8584  002CC6                     __ptext42:
  8585                           	opt stack 0
  8586  002CC6                     _TurnRelayOff:
  8587                           	opt stack 25
  8588                           
  8589                           ;main.c: 1241: LATCbits.LATC1 = 0;
  8590                           
  8591                           ; BSR set to: 0
  8592                           ;incstack = 0
  8593  002CC6  928B               	bcf	3979,1,c	;volatile
  8594                           
  8595                           ;main.c: 1242: if (RelayStatusUCG == 0)
  8596  002CC8  0100               	movlb	0	; () banked
  8597  002CCA  51B4               	movf	_RelayStatusUCG& (0+255),w,b
  8598  002CCC  A4D8               	btfss	status,2,c
  8599  002CCE  D003               	goto	l947
  8600                           
  8601                           ; BSR set to: 0
  8602                           ;main.c: 1243: Pi_Status_Update = 0x01;
  8603  002CD0  0E01               	movlw	1
  8604  002CD2  0100               	movlb	0	; () banked
  8605  002CD4  6FB3               	movwf	_Pi_Status_Update& (0+255),b
  8606  002CD6                     l947:
  8607                           
  8608                           ; BSR set to: 0
  8609                           ;main.c: 1244: RelayStatusUCG = 1;
  8610  002CD6  0E01               	movlw	1
  8611  002CD8  0100               	movlb	0	; () banked
  8612  002CDA  6FB4               	movwf	_RelayStatusUCG& (0+255),b
  8613                           
  8614                           ; BSR set to: 0
  8615  002CDC  0012               	return		;funcret
  8616  002CDE                     __end_of_TurnRelayOff:
  8617                           	opt stack 0
  8618                           tblptru	equ	0xFF8
  8619                           tblptrh	equ	0xFF7
  8620                           tblptrl	equ	0xFF6
  8621                           tablat	equ	0xFF5
  8622                           prodh	equ	0xFF4
  8623                           prodl	equ	0xFF3
  8624                           intcon	equ	0xFF2
  8625                           indf0	equ	0xFEF
  8626                           postinc0	equ	0xFEE
  8627                           fsr0h	equ	0xFEA
  8628                           fsr0l	equ	0xFE9
  8629                           wreg	equ	0xFE8
  8630                           indf1	equ	0xFE7
  8631                           postdec1	equ	0xFE5
  8632                           fsr1h	equ	0xFE2
  8633                           fsr1l	equ	0xFE1
  8634                           indf2	equ	0xFDF
  8635                           postinc2	equ	0xFDE
  8636                           postdec2	equ	0xFDD
  8637                           fsr2h	equ	0xFDA
  8638                           fsr2l	equ	0xFD9
  8639                           status	equ	0xFD8
  8640                           
  8641 ;; *************** function _ReceiveNewDataST7540 *****************
  8642 ;; Defined at:
  8643 ;;		line 254 in file "Released IBC-1 Code - 03-06-2016/ST7540.c"
  8644 ;; Parameters:    Size  Location     Type
  8645 ;;		None
  8646 ;; Auto vars:     Size  Location     Type
  8647 ;;  discardUC       1    0[BANK0 ] unsigned char 
  8648 ;; Return value:  Size  Location     Type
  8649 ;;                  1    wreg      void 
  8650 ;; Registers used:
  8651 ;;		wreg, status,2, status,0
  8652 ;; Tracked objects:
  8653 ;;		On entry : 0/0
  8654 ;;		On exit  : 0/0
  8655 ;;		Unchanged: 0/0
  8656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8657 ;;      Params:         0       0       0       0       0       0       0
  8658 ;;      Locals:         0       1       0       0       0       0       0
  8659 ;;      Temps:          0       0       0       0       0       0       0
  8660 ;;      Totals:         0       1       0       0       0       0       0
  8661 ;;Total ram usage:        1 bytes
  8662 ;; Hardware stack levels used:    1
  8663 ;; Hardware stack levels required when called:    5
  8664 ;; This function calls:
  8665 ;;		Nothing
  8666 ;; This function is called by:
  8667 ;;		_InitSystem
  8668 ;; This function uses a non-reentrant model
  8669 ;;
  8670                           
  8671                           	psect	text43
  8672  002D42                     __ptext43:
  8673                           	opt stack 0
  8674  002D42                     _ReceiveNewDataST7540:
  8675                           	opt stack 24
  8676                           
  8677                           ;ST7540.c: 255: unsigned char discardUC;
  8678                           ;ST7540.c: 257: flagST7540 |= 2;
  8679                           
  8680                           ; BSR set to: 0
  8681                           ;incstack = 0
  8682  002D42  8259               	bsf	_flagST7540,1,c
  8683                           
  8684                           ;ST7540.c: 258: flagST7540 &= ~4;
  8685  002D44  9459               	bcf	_flagST7540,2,c
  8686                           
  8687                           ;ST7540.c: 259: discardUC = SSP1BUF;
  8688  002D46  CFC9 F0C2          	movff	4041,ReceiveNewDataST7540@discardUC	;volatile
  8689                           
  8690                           ;ST7540.c: 260: SSP2BUF = 0;
  8691  002D4A  0E00               	movlw	0
  8692  002D4C  6E6F               	movwf	3951,c	;volatile
  8693                           
  8694                           ;ST7540.c: 261: bufferRXNextUCA = 0;
  8695  002D4E  0E00               	movlw	0
  8696  002D50  6E56               	movwf	_bufferRXNextUCA,c
  8697  002D52  0012               	return		;funcret
  8698  002D54                     __end_of_ReceiveNewDataST7540:
  8699                           	opt stack 0
  8700                           tblptru	equ	0xFF8
  8701                           tblptrh	equ	0xFF7
  8702                           tblptrl	equ	0xFF6
  8703                           tablat	equ	0xFF5
  8704                           prodh	equ	0xFF4
  8705                           prodl	equ	0xFF3
  8706                           intcon	equ	0xFF2
  8707                           indf0	equ	0xFEF
  8708                           postinc0	equ	0xFEE
  8709                           fsr0h	equ	0xFEA
  8710                           fsr0l	equ	0xFE9
  8711                           wreg	equ	0xFE8
  8712                           indf1	equ	0xFE7
  8713                           postdec1	equ	0xFE5
  8714                           fsr1h	equ	0xFE2
  8715                           fsr1l	equ	0xFE1
  8716                           indf2	equ	0xFDF
  8717                           postinc2	equ	0xFDE
  8718                           postdec2	equ	0xFDD
  8719                           fsr2h	equ	0xFDA
  8720                           fsr2l	equ	0xFD9
  8721                           status	equ	0xFD8
  8722                           
  8723 ;; *************** function _InitST7540 *****************
  8724 ;; Defined at:
  8725 ;;		line 68 in file "Released IBC-1 Code - 03-06-2016/ST7540.c"
  8726 ;; Parameters:    Size  Location     Type
  8727 ;;		None
  8728 ;; Auto vars:     Size  Location     Type
  8729 ;;  configDataRX    3   22[BANK0 ] unsigned um
  8730 ;;  frameDataRXU    3   19[BANK0 ] unsigned um
  8731 ;;  configDataTX    3   16[BANK0 ] unsigned um
  8732 ;;  frameDataTXU    3   13[BANK0 ] unsigned um
  8733 ;; Return value:  Size  Location     Type
  8734 ;;                  1    wreg      unsigned char 
  8735 ;; Registers used:
  8736 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8737 ;; Tracked objects:
  8738 ;;		On entry : 0/0
  8739 ;;		On exit  : 0/0
  8740 ;;		Unchanged: 0/0
  8741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8742 ;;      Params:         0       0       0       0       0       0       0
  8743 ;;      Locals:         0      12       0       0       0       0       0
  8744 ;;      Temps:          0       0       0       0       0       0       0
  8745 ;;      Totals:         0      12       0       0       0       0       0
  8746 ;;Total ram usage:       12 bytes
  8747 ;; Hardware stack levels used:    1
  8748 ;; Hardware stack levels required when called:    8
  8749 ;; This function calls:
  8750 ;;		_InitST7540Pins
  8751 ;;		_ReadConfigST7540
  8752 ;;		_WriteConfigST7540
  8753 ;; This function is called by:
  8754 ;;		_InitSystem
  8755 ;; This function uses a non-reentrant model
  8756 ;;
  8757                           
  8758                           	psect	text44
  8759  001B7C                     __ptext44:
  8760                           	opt stack 0
  8761  001B7C                     _InitST7540:
  8762                           	opt stack 21
  8763                           
  8764                           ;ST7540.c: 69: unsigned long short frameDataTXUS;
  8765                           ;ST7540.c: 70: unsigned long short frameDataRXUS = 0;
  8766                           
  8767                           ;incstack = 0
  8768  001B7C  0E00               	movlw	0
  8769  001B7E  0100               	movlb	0	; () banked
  8770  001B80  6FD5               	movwf	InitST7540@frameDataRXUS& (0+255),b
  8771  001B82  0E00               	movlw	0
  8772  001B84  0100               	movlb	0	; () banked
  8773  001B86  6FD6               	movwf	(InitST7540@frameDataRXUS+1)& (0+255),b
  8774  001B88  0E00               	movlw	0
  8775  001B8A  0100               	movlb	0	; () banked
  8776  001B8C  6FD7               	movwf	(InitST7540@frameDataRXUS+2)& (0+255),b
  8777                           
  8778                           ;ST7540.c: 71: unsigned long short configDataTXUS;
  8779                           ;ST7540.c: 72: unsigned long short configDataRXUS = 0;
  8780  001B8E  0E00               	movlw	0
  8781  001B90  0100               	movlb	0	; () banked
  8782  001B92  6FD8               	movwf	InitST7540@configDataRXUS& (0+255),b
  8783  001B94  0E00               	movlw	0
  8784  001B96  0100               	movlb	0	; () banked
  8785  001B98  6FD9               	movwf	(InitST7540@configDataRXUS+1)& (0+255),b
  8786  001B9A  0E00               	movlw	0
  8787  001B9C  0100               	movlb	0	; () banked
  8788  001B9E  6FDA               	movwf	(InitST7540@configDataRXUS+2)& (0+255),b
  8789                           
  8790                           ; BSR set to: 0
  8791                           ;ST7540.c: 74: InitST7540Pins();
  8792  001BA0  ECA4  F015         	call	_InitST7540Pins	;wreg free
  8793                           
  8794                           ;ST7540.c: 76: frameDataTXUS = (unsigned long short) 0x9b58;
  8795  001BA4  0E58               	movlw	88
  8796  001BA6  0100               	movlb	0	; () banked
  8797  001BA8  6FCF               	movwf	InitST7540@frameDataTXUS& (0+255),b
  8798  001BAA  0E9B               	movlw	155
  8799  001BAC  0100               	movlb	0	; () banked
  8800  001BAE  6FD0               	movwf	(InitST7540@frameDataTXUS+1)& (0+255),b
  8801  001BB0  0E00               	movlw	0
  8802  001BB2  0100               	movlb	0	; () banked
  8803  001BB4  6FD1               	movwf	(InitST7540@frameDataTXUS+2)& (0+255),b
  8804                           
  8805                           ; BSR set to: 0
  8806                           ;ST7540.c: 77: configDataTXUS = 0b000000000000000000000110 |
  8807                           ;ST7540.c: 78: 0b000000000000000000010000 |
  8808                           ;ST7540.c: 79: 0b000000000000000000000000 |
  8809                           ;ST7540.c: 80: 0b000000000000000000000000 |
  8810                           ;ST7540.c: 81: 0b000000000000000010000000 |
  8811                           ;ST7540.c: 82: 0b000000000000001000000000 |
  8812                           ;ST7540.c: 83: 0b000000000001000000000000 |
  8813                           ;ST7540.c: 84: 0b000000000000000000000000 |
  8814                           ;ST7540.c: 85: 0b000000011000000000000000 |
  8815                           ;ST7540.c: 86: 0b000000100000000000000000 |
  8816                           ;ST7540.c: 87: 0b000001000000000000000000 |
  8817                           ;ST7540.c: 88: 0b000000000000000000000000 |
  8818  001BB6  0E96               	movlw	150
  8819  001BB8  0100               	movlb	0	; () banked
  8820  001BBA  6FD2               	movwf	InitST7540@configDataTXUS& (0+255),b
  8821  001BBC  0E92               	movlw	146
  8822  001BBE  0100               	movlb	0	; () banked
  8823  001BC0  6FD3               	movwf	(InitST7540@configDataTXUS+1)& (0+255),b
  8824  001BC2  0E77               	movlw	119
  8825  001BC4  0100               	movlb	0	; () banked
  8826  001BC6  6FD4               	movwf	(InitST7540@configDataTXUS+2)& (0+255),b
  8827                           
  8828                           ; BSR set to: 0
  8829                           ;ST7540.c: 94: SSP2STATbits.CKE = 1;
  8830  001BC8  8C6D               	bsf	3949,6,c	;volatile
  8831                           
  8832                           ; BSR set to: 0
  8833                           ;ST7540.c: 95: SSP2CON1bits.SSPM = 0b0101;
  8834  001BCA  506C               	movf	3948,w,c	;volatile
  8835  001BCC  0BF0               	andlw	-16
  8836  001BCE  0905               	iorlw	5
  8837  001BD0  6E6C               	movwf	3948,c	;volatile
  8838                           
  8839                           ; BSR set to: 0
  8840                           ;ST7540.c: 97: WriteConfigST7540(frameDataTXUS, configDataTXUS);
  8841  001BD2  C0CF  F0C4         	movff	InitST7540@frameDataTXUS,WriteConfigST7540@frameDataUS
  8842  001BD6  C0D0  F0C5         	movff	InitST7540@frameDataTXUS+1,WriteConfigST7540@frameDataUS+1
  8843  001BDA  C0D1  F0C6         	movff	InitST7540@frameDataTXUS+2,WriteConfigST7540@frameDataUS+2
  8844  001BDE  C0D2  F0C7         	movff	InitST7540@configDataTXUS,WriteConfigST7540@configDataUS
  8845  001BE2  C0D3  F0C8         	movff	InitST7540@configDataTXUS+1,WriteConfigST7540@configDataUS+1
  8846  001BE6  C0D4  F0C9         	movff	InitST7540@configDataTXUS+2,WriteConfigST7540@configDataUS+2
  8847  001BEA  ECA7  F011         	call	_WriteConfigST7540	;wreg free
  8848                           
  8849                           ;ST7540.c: 98: WriteConfigST7540(frameDataTXUS, configDataTXUS);
  8850  001BEE  C0CF  F0C4         	movff	InitST7540@frameDataTXUS,WriteConfigST7540@frameDataUS
  8851  001BF2  C0D0  F0C5         	movff	InitST7540@frameDataTXUS+1,WriteConfigST7540@frameDataUS+1
  8852  001BF6  C0D1  F0C6         	movff	InitST7540@frameDataTXUS+2,WriteConfigST7540@frameDataUS+2
  8853  001BFA  C0D2  F0C7         	movff	InitST7540@configDataTXUS,WriteConfigST7540@configDataUS
  8854  001BFE  C0D3  F0C8         	movff	InitST7540@configDataTXUS+1,WriteConfigST7540@configDataUS+1
  8855  001C02  C0D4  F0C9         	movff	InitST7540@configDataTXUS+2,WriteConfigST7540@configDataUS+2
  8856  001C06  ECA7  F011         	call	_WriteConfigST7540	;wreg free
  8857                           
  8858                           ;ST7540.c: 99: ReadConfigST7540(&frameDataRXUS, &configDataRXUS);
  8859  001C0A  0ED5               	movlw	low InitST7540@frameDataRXUS
  8860  001C0C  0100               	movlb	0	; () banked
  8861  001C0E  6FC2               	movwf	ReadConfigST7540@frameDataUS& (0+255),b
  8862  001C10  0E00               	movlw	high InitST7540@frameDataRXUS
  8863  001C12  0100               	movlb	0	; () banked
  8864  001C14  6FC3               	movwf	(ReadConfigST7540@frameDataUS+1)& (0+255),b
  8865  001C16  0ED8               	movlw	low InitST7540@configDataRXUS
  8866  001C18  0100               	movlb	0	; () banked
  8867  001C1A  6FC4               	movwf	ReadConfigST7540@configDataUS& (0+255),b
  8868  001C1C  0E00               	movlw	high InitST7540@configDataRXUS
  8869  001C1E  0100               	movlb	0	; () banked
  8870  001C20  6FC5               	movwf	(ReadConfigST7540@configDataUS+1)& (0+255),b
  8871  001C22  ECFC  F00A         	call	_ReadConfigST7540	;wreg free
  8872                           
  8873                           ;ST7540.c: 100: if((frameDataTXUS != frameDataRXUS) && (configDataTXUS != configDataRXUS
      +                          ))
  8874  001C26  0100               	movlb	0	; () banked
  8875  001C28  51D5               	movf	InitST7540@frameDataRXUS& (0+255),w,b
  8876  001C2A  0100               	movlb	0	; () banked
  8877  001C2C  19CF               	xorwf	InitST7540@frameDataTXUS& (0+255),w,b
  8878  001C2E  E10B               	bnz	u3060
  8879  001C30  0100               	movlb	0	; () banked
  8880  001C32  51D6               	movf	(InitST7540@frameDataRXUS+1)& (0+255),w,b
  8881  001C34  0100               	movlb	0	; () banked
  8882  001C36  19D0               	xorwf	(InitST7540@frameDataTXUS+1)& (0+255),w,b
  8883  001C38  E106               	bnz	u3060
  8884  001C3A  0100               	movlb	0	; () banked
  8885  001C3C  51D7               	movf	(InitST7540@frameDataRXUS+2)& (0+255),w,b
  8886  001C3E  0100               	movlb	0	; () banked
  8887  001C40  19D1               	xorwf	(InitST7540@frameDataTXUS+2)& (0+255),w,b
  8888  001C42  B4D8               	btfsc	status,2,c
  8889  001C44  D012               	goto	l61
  8890  001C46                     u3060:
  8891                           
  8892                           ; BSR set to: 0
  8893  001C46  0100               	movlb	0	; () banked
  8894  001C48  51D8               	movf	InitST7540@configDataRXUS& (0+255),w,b
  8895  001C4A  0100               	movlb	0	; () banked
  8896  001C4C  19D2               	xorwf	InitST7540@configDataTXUS& (0+255),w,b
  8897  001C4E  E10B               	bnz	u3070
  8898  001C50  0100               	movlb	0	; () banked
  8899  001C52  51D9               	movf	(InitST7540@configDataRXUS+1)& (0+255),w,b
  8900  001C54  0100               	movlb	0	; () banked
  8901  001C56  19D3               	xorwf	(InitST7540@configDataTXUS+1)& (0+255),w,b
  8902  001C58  E106               	bnz	u3070
  8903  001C5A  0100               	movlb	0	; () banked
  8904  001C5C  51DA               	movf	(InitST7540@configDataRXUS+2)& (0+255),w,b
  8905  001C5E  0100               	movlb	0	; () banked
  8906  001C60  19D4               	xorwf	(InitST7540@configDataTXUS+2)& (0+255),w,b
  8907  001C62  B4D8               	btfsc	status,2,c
  8908  001C64  D002               	goto	l61
  8909  001C66                     u3070:
  8910                           
  8911                           ; BSR set to: 0
  8912                           ;ST7540.c: 101: return 0;
  8913  001C66  0E00               	movlw	0
  8914                           
  8915                           ; BSR set to: 0
  8916  001C68  0012               	return	
  8917  001C6A                     l61:
  8918                           
  8919                           ; BSR set to: 0
  8920                           ;ST7540.c: 103: PIE3bits.SSP2IE = 1;
  8921  001C6A  8EA3               	bsf	4003,7,c	;volatile
  8922                           
  8923                           ;ST7540.c: 104: INTCONbits.PEIE = 1;
  8924  001C6C  8CF2               	bsf	intcon,6,c	;volatile
  8925                           
  8926                           ; BSR set to: 0
  8927                           ;ST7540.c: 106: return 1;
  8928  001C6E  0E01               	movlw	1
  8929  001C70  0012               	return	
  8930  001C72                     __end_of_InitST7540:
  8931                           	opt stack 0
  8932                           tblptru	equ	0xFF8
  8933                           tblptrh	equ	0xFF7
  8934                           tblptrl	equ	0xFF6
  8935                           tablat	equ	0xFF5
  8936                           prodh	equ	0xFF4
  8937                           prodl	equ	0xFF3
  8938                           intcon	equ	0xFF2
  8939                           indf0	equ	0xFEF
  8940                           postinc0	equ	0xFEE
  8941                           fsr0h	equ	0xFEA
  8942                           fsr0l	equ	0xFE9
  8943                           wreg	equ	0xFE8
  8944                           indf1	equ	0xFE7
  8945                           postdec1	equ	0xFE5
  8946                           fsr1h	equ	0xFE2
  8947                           fsr1l	equ	0xFE1
  8948                           indf2	equ	0xFDF
  8949                           postinc2	equ	0xFDE
  8950                           postdec2	equ	0xFDD
  8951                           fsr2h	equ	0xFDA
  8952                           fsr2l	equ	0xFD9
  8953                           status	equ	0xFD8
  8954                           
  8955 ;; *************** function _WriteConfigST7540 *****************
  8956 ;; Defined at:
  8957 ;;		line 109 in file "Released IBC-1 Code - 03-06-2016/ST7540.c"
  8958 ;; Parameters:    Size  Location     Type
  8959 ;;  frameDataUS     3    2[BANK0 ] unsigned um
  8960 ;;  configDataUS    3    5[BANK0 ] unsigned um
  8961 ;; Auto vars:     Size  Location     Type
  8962 ;;  bitsSentUC      1   12[BANK0 ] unsigned char 
  8963 ;;  discardUC       1   11[BANK0 ] unsigned char 
  8964 ;; Return value:  Size  Location     Type
  8965 ;;                  1    wreg      void 
  8966 ;; Registers used:
  8967 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8968 ;; Tracked objects:
  8969 ;;		On entry : 0/0
  8970 ;;		On exit  : 0/0
  8971 ;;		Unchanged: 0/0
  8972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8973 ;;      Params:         0       6       0       0       0       0       0
  8974 ;;      Locals:         0       2       0       0       0       0       0
  8975 ;;      Temps:          0       3       0       0       0       0       0
  8976 ;;      Totals:         0      11       0       0       0       0       0
  8977 ;;Total ram usage:       11 bytes
  8978 ;; Hardware stack levels used:    1
  8979 ;; Hardware stack levels required when called:    7
  8980 ;; This function calls:
  8981 ;;		_WaitTickCount
  8982 ;; This function is called by:
  8983 ;;		_InitST7540
  8984 ;; This function uses a non-reentrant model
  8985 ;;
  8986                           
  8987                           	psect	text45
  8988  00234E                     __ptext45:
  8989                           	opt stack 0
  8990  00234E                     _WriteConfigST7540:
  8991                           	opt stack 21
  8992                           
  8993                           ;ST7540.c: 110: unsigned char discardUC;
  8994                           ;ST7540.c: 111: unsigned char bitsSentUC;
  8995                           ;ST7540.c: 113: bufferTXST7540UCA[0] = (frameDataUS & 0b111111110000000000000000) >> 16;
  8996                           
  8997                           ; BSR set to: 0
  8998                           ;incstack = 0
  8999  00234E  C0C6  F150         	movff	WriteConfigST7540@frameDataUS+2,_bufferTXST7540UCA
  9000                           
  9001                           ;ST7540.c: 114: bufferTXST7540UCA[1] = (frameDataUS & 0b000000001111111100000000) >> 8;
  9002  002352  C0C4  F0CA         	movff	WriteConfigST7540@frameDataUS,??_WriteConfigST7540
  9003  002356  C0C5  F0CB         	movff	WriteConfigST7540@frameDataUS+1,??_WriteConfigST7540+1
  9004  00235A  C0C6  F0CC         	movff	WriteConfigST7540@frameDataUS+2,??_WriteConfigST7540+2
  9005  00235E  C0CB  F0CA         	movff	??_WriteConfigST7540+1,??_WriteConfigST7540
  9006  002362  C0CC  F0CB         	movff	??_WriteConfigST7540+2,??_WriteConfigST7540+1
  9007  002366  0100               	movlb	0	; () banked
  9008  002368  6BCC               	clrf	(??_WriteConfigST7540+2)& (0+255),b
  9009  00236A  0100               	movlb	0	; () banked
  9010  00236C  51CA               	movf	??_WriteConfigST7540& (0+255),w,b
  9011  00236E  0101               	movlb	1	; () banked
  9012  002370  6F51               	movwf	(_bufferTXST7540UCA+1)& (0+255),b
  9013                           
  9014                           ; BSR set to: 1
  9015                           ;ST7540.c: 115: bufferTXST7540UCA[2] = frameDataUS & 0b000000000000000011111111;
  9016  002372  C0C4  F152         	movff	WriteConfigST7540@frameDataUS,_bufferTXST7540UCA+2
  9017                           
  9018                           ; BSR set to: 1
  9019                           ;ST7540.c: 116: bufferTXST7540UCA[3] = (configDataUS & 0b111111110000000000000000) >> 16
      +                          ;
  9020  002376  C0C9  F153         	movff	WriteConfigST7540@configDataUS+2,_bufferTXST7540UCA+3
  9021                           
  9022                           ;ST7540.c: 117: bufferTXST7540UCA[4] = (configDataUS & 0b000000001111111100000000) >> 8;
  9023  00237A  C0C7  F0CA         	movff	WriteConfigST7540@configDataUS,??_WriteConfigST7540
  9024  00237E  C0C8  F0CB         	movff	WriteConfigST7540@configDataUS+1,??_WriteConfigST7540+1
  9025  002382  C0C9  F0CC         	movff	WriteConfigST7540@configDataUS+2,??_WriteConfigST7540+2
  9026  002386  C0CB  F0CA         	movff	??_WriteConfigST7540+1,??_WriteConfigST7540
  9027  00238A  C0CC  F0CB         	movff	??_WriteConfigST7540+2,??_WriteConfigST7540+1
  9028  00238E  0100               	movlb	0	; () banked
  9029  002390  6BCC               	clrf	(??_WriteConfigST7540+2)& (0+255),b
  9030  002392  0100               	movlb	0	; () banked
  9031  002394  51CA               	movf	??_WriteConfigST7540& (0+255),w,b
  9032  002396  0101               	movlb	1	; () banked
  9033  002398  6F54               	movwf	(_bufferTXST7540UCA+4)& (0+255),b
  9034                           
  9035                           ; BSR set to: 1
  9036                           ;ST7540.c: 118: bufferTXST7540UCA[5] = configDataUS & 0b000000000000000011111111;
  9037  00239A  C0C7  F155         	movff	WriteConfigST7540@configDataUS,_bufferTXST7540UCA+5
  9038                           
  9039                           ; BSR set to: 1
  9040                           ;ST7540.c: 120: LATCbits.LATC4 = 1;
  9041  00239E  888B               	bsf	3979,4,c	;volatile
  9042                           
  9043                           ; BSR set to: 1
  9044                           ;ST7540.c: 121: LATCbits.LATC5 = 0;
  9045  0023A0  9A8B               	bcf	3979,5,c	;volatile
  9046  0023A2                     l65:
  9047  0023A2  B281               	btfsc	3969,1,c	;volatile
  9048  0023A4  D7FE               	goto	l65
  9049                           
  9050                           ;ST7540.c: 123: SSP2CON1bits.SSPEN = 1;
  9051  0023A6  8A6C               	bsf	3948,5,c	;volatile
  9052                           
  9053                           ;ST7540.c: 125: for(bitsSentUC = 0; bitsSentUC < 6; bitsSentUC++){
  9054  0023A8  0E00               	movlw	0
  9055  0023AA  0100               	movlb	0	; () banked
  9056  0023AC  6FCE               	movwf	WriteConfigST7540@bitsSentUC& (0+255),b
  9057  0023AE                     l3898:
  9058                           
  9059                           ; BSR set to: 0
  9060  0023AE  0E05               	movlw	5
  9061  0023B0  0100               	movlb	0	; () banked
  9062  0023B2  65CE               	cpfsgt	WriteConfigST7540@bitsSentUC& (0+255),b
  9063  0023B4  D001               	goto	l68
  9064  0023B6  D012               	goto	l69
  9065  0023B8                     l68:
  9066                           
  9067                           ; BSR set to: 0
  9068                           ;ST7540.c: 126: discardUC = SSP2BUF;
  9069  0023B8  CF6F F0CD          	movff	3951,WriteConfigST7540@discardUC	;volatile
  9070                           
  9071                           ; BSR set to: 0
  9072                           ;ST7540.c: 127: SSP2BUF = bufferTXST7540UCA[bitsSentUC];
  9073  0023BC  0100               	movlb	0	; () banked
  9074  0023BE  51CE               	movf	WriteConfigST7540@bitsSentUC& (0+255),w,b
  9075  0023C0  0D01               	mullw	1
  9076  0023C2  0E50               	movlw	low _bufferTXST7540UCA
  9077  0023C4  24F3               	addwf	prodl,w,c
  9078  0023C6  6ED9               	movwf	fsr2l,c
  9079  0023C8  0E01               	movlw	high _bufferTXST7540UCA
  9080  0023CA  20F4               	addwfc	prodh,w,c
  9081  0023CC  6EDA               	movwf	fsr2h,c
  9082  0023CE  50DF               	movf	indf2,w,c
  9083  0023D0  6E6F               	movwf	3951,c	;volatile
  9084  0023D2                     l70:
  9085  0023D2  A06D               	btfss	3949,0,c	;volatile
  9086  0023D4  D7FE               	goto	l70
  9087  0023D6  0100               	movlb	0	; () banked
  9088  0023D8  2BCE               	incf	WriteConfigST7540@bitsSentUC& (0+255),f,b
  9089  0023DA  D7E9               	goto	l3898
  9090  0023DC                     l69:
  9091                           
  9092                           ; BSR set to: 0
  9093                           ;ST7540.c: 129: }
  9094                           ;ST7540.c: 131: LATCbits.LATC4 = 0;
  9095  0023DC  988B               	bcf	3979,4,c	;volatile
  9096                           
  9097                           ;ST7540.c: 132: LATCbits.LATC5 = 1;
  9098  0023DE  8A8B               	bsf	3979,5,c	;volatile
  9099                           
  9100                           ;ST7540.c: 133: SSP2CON1bits.SSPEN = 0;
  9101  0023E0  9A6C               	bcf	3948,5,c	;volatile
  9102                           
  9103                           ; BSR set to: 0
  9104                           ;ST7540.c: 134: WaitTickCount(20);
  9105  0023E2  0E00               	movlw	0
  9106  0023E4  0100               	movlb	0	; () banked
  9107  0023E6  6FC3               	movwf	(WaitTickCount@tickCountUS+1)& (0+255),b
  9108  0023E8  0E14               	movlw	20
  9109  0023EA  6FC2               	movwf	WaitTickCount@tickCountUS& (0+255),b
  9110  0023EC  EC3C  F016         	call	_WaitTickCount	;wreg free
  9111  0023F0  0012               	return		;funcret
  9112  0023F2                     __end_of_WriteConfigST7540:
  9113                           	opt stack 0
  9114                           tblptru	equ	0xFF8
  9115                           tblptrh	equ	0xFF7
  9116                           tblptrl	equ	0xFF6
  9117                           tablat	equ	0xFF5
  9118                           prodh	equ	0xFF4
  9119                           prodl	equ	0xFF3
  9120                           intcon	equ	0xFF2
  9121                           indf0	equ	0xFEF
  9122                           postinc0	equ	0xFEE
  9123                           fsr0h	equ	0xFEA
  9124                           fsr0l	equ	0xFE9
  9125                           wreg	equ	0xFE8
  9126                           indf1	equ	0xFE7
  9127                           postdec1	equ	0xFE5
  9128                           fsr1h	equ	0xFE2
  9129                           fsr1l	equ	0xFE1
  9130                           indf2	equ	0xFDF
  9131                           postinc2	equ	0xFDE
  9132                           postdec2	equ	0xFDD
  9133                           fsr2h	equ	0xFDA
  9134                           fsr2l	equ	0xFD9
  9135                           status	equ	0xFD8
  9136                           
  9137 ;; *************** function _ReadConfigST7540 *****************
  9138 ;; Defined at:
  9139 ;;		line 137 in file "Released IBC-1 Code - 03-06-2016/ST7540.c"
  9140 ;; Parameters:    Size  Location     Type
  9141 ;;  frameDataUS     2    0[BANK0 ] PTR unsigned um
  9142 ;;		 -> InitST7540@frameDataRXUS(3), 
  9143 ;;  configDataUS    2    2[BANK0 ] PTR unsigned um
  9144 ;;		 -> InitST7540@configDataRXUS(3), 
  9145 ;; Auto vars:     Size  Location     Type
  9146 ;;  bitsReceived    1    8[BANK0 ] unsigned char 
  9147 ;;  discardUC       1    7[BANK0 ] unsigned char 
  9148 ;; Return value:  Size  Location     Type
  9149 ;;                  1    wreg      void 
  9150 ;; Registers used:
  9151 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9152 ;; Tracked objects:
  9153 ;;		On entry : 0/0
  9154 ;;		On exit  : 0/0
  9155 ;;		Unchanged: 0/0
  9156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9157 ;;      Params:         0       4       0       0       0       0       0
  9158 ;;      Locals:         0       2       0       0       0       0       0
  9159 ;;      Temps:          0       3       0       0       0       0       0
  9160 ;;      Totals:         0       9       0       0       0       0       0
  9161 ;;Total ram usage:        9 bytes
  9162 ;; Hardware stack levels used:    1
  9163 ;; Hardware stack levels required when called:    5
  9164 ;; This function calls:
  9165 ;;		Nothing
  9166 ;; This function is called by:
  9167 ;;		_InitST7540
  9168 ;; This function uses a non-reentrant model
  9169 ;;
  9170                           
  9171                           	psect	text46
  9172  0015F8                     __ptext46:
  9173                           	opt stack 0
  9174  0015F8                     _ReadConfigST7540:
  9175                           	opt stack 23
  9176                           
  9177                           ;ST7540.c: 138: unsigned char bitsReceivedUC;
  9178                           ;ST7540.c: 139: unsigned char discardUC;
  9179                           ;ST7540.c: 141: LATCbits.LATC4 = 1;
  9180                           
  9181                           ;incstack = 0
  9182  0015F8  888B               	bsf	3979,4,c	;volatile
  9183                           
  9184                           ;ST7540.c: 142: LATCbits.LATC5 = 1;
  9185  0015FA  8A8B               	bsf	3979,5,c	;volatile
  9186  0015FC                     l76:
  9187  0015FC  B281               	btfsc	3969,1,c	;volatile
  9188  0015FE  D7FE               	goto	l76
  9189                           
  9190                           ;ST7540.c: 144: SSP2CON1bits.SSPEN = 1;
  9191  001600  8A6C               	bsf	3948,5,c	;volatile
  9192                           
  9193                           ;ST7540.c: 146: discardUC = SSP2BUF;
  9194  001602  CF6F F0C9          	movff	3951,ReadConfigST7540@discardUC	;volatile
  9195                           
  9196                           ;ST7540.c: 147: SSP1BUF = 0;
  9197  001606  0E00               	movlw	0
  9198  001608  6EC9               	movwf	4041,c	;volatile
  9199                           
  9200                           ;ST7540.c: 148: for(bitsReceivedUC = 0; bitsReceivedUC < 6; bitsReceivedUC++){
  9201  00160A  0E00               	movlw	0
  9202  00160C  0100               	movlb	0	; () banked
  9203  00160E  6FCA               	movwf	ReadConfigST7540@bitsReceivedUC& (0+255),b
  9204  001610                     l3914:
  9205                           
  9206                           ; BSR set to: 0
  9207  001610  0E05               	movlw	5
  9208  001612  0100               	movlb	0	; () banked
  9209  001614  65CA               	cpfsgt	ReadConfigST7540@bitsReceivedUC& (0+255),b
  9210  001616  D001               	goto	l81
  9211  001618  D012               	goto	l80
  9212  00161A                     l81:
  9213  00161A  A06D               	btfss	3949,0,c	;volatile
  9214  00161C  D7FE               	goto	l81
  9215                           
  9216                           ;ST7540.c: 150: bufferRXST7540UCA[bitsReceivedUC] = SSP2BUF;
  9217  00161E  0100               	movlb	0	; () banked
  9218  001620  51CA               	movf	ReadConfigST7540@bitsReceivedUC& (0+255),w,b
  9219  001622  0D01               	mullw	1
  9220  001624  0E9F               	movlw	low _bufferRXST7540UCA
  9221  001626  24F3               	addwf	prodl,w,c
  9222  001628  6ED9               	movwf	fsr2l,c
  9223  00162A  0E01               	movlw	high _bufferRXST7540UCA
  9224  00162C  20F4               	addwfc	prodh,w,c
  9225  00162E  6EDA               	movwf	fsr2h,c
  9226  001630  CF6F FFDF          	movff	3951,indf2	;volatile
  9227                           
  9228                           ; BSR set to: 0
  9229                           ;ST7540.c: 151: SSP2BUF = 0;
  9230  001634  0E00               	movlw	0
  9231  001636  6E6F               	movwf	3951,c	;volatile
  9232                           
  9233                           ; BSR set to: 0
  9234  001638  0100               	movlb	0	; () banked
  9235  00163A  2BCA               	incf	ReadConfigST7540@bitsReceivedUC& (0+255),f,b
  9236  00163C  D7E9               	goto	l3914
  9237  00163E                     l80:
  9238                           
  9239                           ; BSR set to: 0
  9240                           ;ST7540.c: 152: }
  9241                           ;ST7540.c: 154: LATCbits.LATC4 = 0;
  9242  00163E  988B               	bcf	3979,4,c	;volatile
  9243                           
  9244                           ;ST7540.c: 155: SSP2CON1bits.SSPEN = 0;
  9245  001640  9A6C               	bcf	3948,5,c	;volatile
  9246                           
  9247                           ; BSR set to: 0
  9248                           ;ST7540.c: 157: *frameDataUS |= ((unsigned long short) bufferRXST7540UCA[0] << 16);
  9249  001642  0101               	movlb	1	; () banked
  9250  001644  519F               	movf	_bufferRXST7540UCA& (0+255),w,b
  9251  001646  0100               	movlb	0	; () banked
  9252  001648  6FC8               	movwf	(??_ReadConfigST7540+2)& (0+255),b
  9253  00164A  6BC7               	clrf	(??_ReadConfigST7540+1)& (0+255),b
  9254  00164C  6BC6               	clrf	??_ReadConfigST7540& (0+255),b
  9255  00164E  C0C2  FFD9         	movff	ReadConfigST7540@frameDataUS,fsr2l
  9256  001652  C0C3  FFDA         	movff	ReadConfigST7540@frameDataUS+1,fsr2h
  9257  001656  0100               	movlb	0	; () banked
  9258  001658  51C6               	movf	??_ReadConfigST7540& (0+255),w,b
  9259  00165A  12DE               	iorwf	postinc2,f,c
  9260  00165C  51C7               	movf	(??_ReadConfigST7540+1)& (0+255),w,b
  9261  00165E  12DE               	iorwf	postinc2,f,c
  9262  001660  51C8               	movf	(??_ReadConfigST7540+2)& (0+255),w,b
  9263  001662  12DE               	iorwf	postinc2,f,c
  9264                           
  9265                           ; BSR set to: 0
  9266                           ;ST7540.c: 158: *frameDataUS |= ((unsigned long short) bufferRXST7540UCA[1] << 8);
  9267  001664  0101               	movlb	1	; () banked
  9268  001666  51A0               	movf	(_bufferRXST7540UCA+1)& (0+255),w,b
  9269  001668  0100               	movlb	0	; () banked
  9270  00166A  6FC6               	movwf	??_ReadConfigST7540& (0+255),b
  9271  00166C  6BC7               	clrf	(??_ReadConfigST7540+1)& (0+255),b
  9272  00166E  6BC8               	clrf	(??_ReadConfigST7540+2)& (0+255),b
  9273  001670  C0C7  F0C8         	movff	??_ReadConfigST7540+1,??_ReadConfigST7540+2
  9274  001674  C0C6  F0C7         	movff	??_ReadConfigST7540,??_ReadConfigST7540+1
  9275  001678  0100               	movlb	0	; () banked
  9276  00167A  6BC6               	clrf	??_ReadConfigST7540& (0+255),b
  9277  00167C  C0C2  FFD9         	movff	ReadConfigST7540@frameDataUS,fsr2l
  9278  001680  C0C3  FFDA         	movff	ReadConfigST7540@frameDataUS+1,fsr2h
  9279  001684  0100               	movlb	0	; () banked
  9280  001686  51C6               	movf	??_ReadConfigST7540& (0+255),w,b
  9281  001688  12DE               	iorwf	postinc2,f,c
  9282  00168A  51C7               	movf	(??_ReadConfigST7540+1)& (0+255),w,b
  9283  00168C  12DE               	iorwf	postinc2,f,c
  9284  00168E  51C8               	movf	(??_ReadConfigST7540+2)& (0+255),w,b
  9285  001690  12DE               	iorwf	postinc2,f,c
  9286                           
  9287                           ; BSR set to: 0
  9288                           ;ST7540.c: 159: *frameDataUS |= bufferRXST7540UCA[2];
  9289  001692  0101               	movlb	1	; () banked
  9290  001694  51A1               	movf	(_bufferRXST7540UCA+2)& (0+255),w,b
  9291  001696  0100               	movlb	0	; () banked
  9292  001698  6FC6               	movwf	??_ReadConfigST7540& (0+255),b
  9293  00169A  6BC7               	clrf	(??_ReadConfigST7540+1)& (0+255),b
  9294  00169C  6BC8               	clrf	(??_ReadConfigST7540+2)& (0+255),b
  9295  00169E  C0C2  FFD9         	movff	ReadConfigST7540@frameDataUS,fsr2l
  9296  0016A2  C0C3  FFDA         	movff	ReadConfigST7540@frameDataUS+1,fsr2h
  9297  0016A6  0100               	movlb	0	; () banked
  9298  0016A8  51C6               	movf	??_ReadConfigST7540& (0+255),w,b
  9299  0016AA  12DE               	iorwf	postinc2,f,c
  9300  0016AC  51C7               	movf	(??_ReadConfigST7540+1)& (0+255),w,b
  9301  0016AE  12DE               	iorwf	postinc2,f,c
  9302  0016B0  51C8               	movf	(??_ReadConfigST7540+2)& (0+255),w,b
  9303  0016B2  12DE               	iorwf	postinc2,f,c
  9304                           
  9305                           ;ST7540.c: 160: *configDataUS |= ((unsigned long short) bufferRXST7540UCA[3] << 16);
  9306  0016B4  0101               	movlb	1	; () banked
  9307  0016B6  51A2               	movf	(_bufferRXST7540UCA+3)& (0+255),w,b
  9308  0016B8  0100               	movlb	0	; () banked
  9309  0016BA  6FC8               	movwf	(??_ReadConfigST7540+2)& (0+255),b
  9310  0016BC  6BC7               	clrf	(??_ReadConfigST7540+1)& (0+255),b
  9311  0016BE  6BC6               	clrf	??_ReadConfigST7540& (0+255),b
  9312  0016C0  C0C4  FFD9         	movff	ReadConfigST7540@configDataUS,fsr2l
  9313  0016C4  C0C5  FFDA         	movff	ReadConfigST7540@configDataUS+1,fsr2h
  9314  0016C8  0100               	movlb	0	; () banked
  9315  0016CA  51C6               	movf	??_ReadConfigST7540& (0+255),w,b
  9316  0016CC  12DE               	iorwf	postinc2,f,c
  9317  0016CE  51C7               	movf	(??_ReadConfigST7540+1)& (0+255),w,b
  9318  0016D0  12DE               	iorwf	postinc2,f,c
  9319  0016D2  51C8               	movf	(??_ReadConfigST7540+2)& (0+255),w,b
  9320  0016D4  12DE               	iorwf	postinc2,f,c
  9321                           
  9322                           ; BSR set to: 0
  9323                           ;ST7540.c: 161: *configDataUS |= ((unsigned long short) bufferRXST7540UCA[4] << 8);
  9324  0016D6  0101               	movlb	1	; () banked
  9325  0016D8  51A3               	movf	(_bufferRXST7540UCA+4)& (0+255),w,b
  9326  0016DA  0100               	movlb	0	; () banked
  9327  0016DC  6FC6               	movwf	??_ReadConfigST7540& (0+255),b
  9328  0016DE  6BC7               	clrf	(??_ReadConfigST7540+1)& (0+255),b
  9329  0016E0  6BC8               	clrf	(??_ReadConfigST7540+2)& (0+255),b
  9330  0016E2  C0C7  F0C8         	movff	??_ReadConfigST7540+1,??_ReadConfigST7540+2
  9331  0016E6  C0C6  F0C7         	movff	??_ReadConfigST7540,??_ReadConfigST7540+1
  9332  0016EA  0100               	movlb	0	; () banked
  9333  0016EC  6BC6               	clrf	??_ReadConfigST7540& (0+255),b
  9334  0016EE  C0C4  FFD9         	movff	ReadConfigST7540@configDataUS,fsr2l
  9335  0016F2  C0C5  FFDA         	movff	ReadConfigST7540@configDataUS+1,fsr2h
  9336  0016F6  0100               	movlb	0	; () banked
  9337  0016F8  51C6               	movf	??_ReadConfigST7540& (0+255),w,b
  9338  0016FA  12DE               	iorwf	postinc2,f,c
  9339  0016FC  51C7               	movf	(??_ReadConfigST7540+1)& (0+255),w,b
  9340  0016FE  12DE               	iorwf	postinc2,f,c
  9341  001700  51C8               	movf	(??_ReadConfigST7540+2)& (0+255),w,b
  9342  001702  12DE               	iorwf	postinc2,f,c
  9343                           
  9344                           ; BSR set to: 0
  9345                           ;ST7540.c: 162: *configDataUS |= bufferRXST7540UCA[5];
  9346  001704  0101               	movlb	1	; () banked
  9347  001706  51A4               	movf	(_bufferRXST7540UCA+5)& (0+255),w,b
  9348  001708  0100               	movlb	0	; () banked
  9349  00170A  6FC6               	movwf	??_ReadConfigST7540& (0+255),b
  9350  00170C  6BC7               	clrf	(??_ReadConfigST7540+1)& (0+255),b
  9351  00170E  6BC8               	clrf	(??_ReadConfigST7540+2)& (0+255),b
  9352  001710  C0C4  FFD9         	movff	ReadConfigST7540@configDataUS,fsr2l
  9353  001714  C0C5  FFDA         	movff	ReadConfigST7540@configDataUS+1,fsr2h
  9354  001718  0100               	movlb	0	; () banked
  9355  00171A  51C6               	movf	??_ReadConfigST7540& (0+255),w,b
  9356  00171C  12DE               	iorwf	postinc2,f,c
  9357  00171E  51C7               	movf	(??_ReadConfigST7540+1)& (0+255),w,b
  9358  001720  12DE               	iorwf	postinc2,f,c
  9359  001722  51C8               	movf	(??_ReadConfigST7540+2)& (0+255),w,b
  9360  001724  12DE               	iorwf	postinc2,f,c
  9361                           
  9362                           ; BSR set to: 0
  9363  001726  0012               	return		;funcret
  9364  001728                     __end_of_ReadConfigST7540:
  9365                           	opt stack 0
  9366                           tblptru	equ	0xFF8
  9367                           tblptrh	equ	0xFF7
  9368                           tblptrl	equ	0xFF6
  9369                           tablat	equ	0xFF5
  9370                           prodh	equ	0xFF4
  9371                           prodl	equ	0xFF3
  9372                           intcon	equ	0xFF2
  9373                           indf0	equ	0xFEF
  9374                           postinc0	equ	0xFEE
  9375                           fsr0h	equ	0xFEA
  9376                           fsr0l	equ	0xFE9
  9377                           wreg	equ	0xFE8
  9378                           indf1	equ	0xFE7
  9379                           postdec1	equ	0xFE5
  9380                           fsr1h	equ	0xFE2
  9381                           fsr1l	equ	0xFE1
  9382                           indf2	equ	0xFDF
  9383                           postinc2	equ	0xFDE
  9384                           postdec2	equ	0xFDD
  9385                           fsr2h	equ	0xFDA
  9386                           fsr2l	equ	0xFD9
  9387                           status	equ	0xFD8
  9388                           
  9389 ;; *************** function _InitST7540Pins *****************
  9390 ;; Defined at:
  9391 ;;		line 310 in file "Released IBC-1 Code - 03-06-2016/ST7540.c"
  9392 ;; Parameters:    Size  Location     Type
  9393 ;;		None
  9394 ;; Auto vars:     Size  Location     Type
  9395 ;;		None
  9396 ;; Return value:  Size  Location     Type
  9397 ;;                  1    wreg      void 
  9398 ;; Registers used:
  9399 ;;		None
  9400 ;; Tracked objects:
  9401 ;;		On entry : 0/0
  9402 ;;		On exit  : 0/0
  9403 ;;		Unchanged: 0/0
  9404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9405 ;;      Params:         0       0       0       0       0       0       0
  9406 ;;      Locals:         0       0       0       0       0       0       0
  9407 ;;      Temps:          0       0       0       0       0       0       0
  9408 ;;      Totals:         0       0       0       0       0       0       0
  9409 ;;Total ram usage:        0 bytes
  9410 ;; Hardware stack levels used:    1
  9411 ;; Hardware stack levels required when called:    5
  9412 ;; This function calls:
  9413 ;;		Nothing
  9414 ;; This function is called by:
  9415 ;;		_InitST7540
  9416 ;; This function uses a non-reentrant model
  9417 ;;
  9418                           
  9419                           	psect	text47
  9420  002B48                     __ptext47:
  9421                           	opt stack 0
  9422  002B48                     _InitST7540Pins:
  9423                           	opt stack 23
  9424                           
  9425                           ;ST7540.c: 312: TRISBbits.TRISB0 = 1;
  9426                           
  9427                           ; BSR set to: 0
  9428                           ;incstack = 0
  9429  002B48  8093               	bsf	3987,0,c	;volatile
  9430                           
  9431                           ;ST7540.c: 313: ANSELBbits.ANSB0 = 0;
  9432  002B4A  010F               	movlb	15	; () banked
  9433  002B4C  9139               	bcf	57,0,b	;volatile
  9434                           
  9435                           ;ST7540.c: 315: TRISCbits.TRISC4 = 0;
  9436  002B4E  9894               	bcf	3988,4,c	;volatile
  9437                           
  9438                           ;ST7540.c: 316: ANSELCbits.ANSC4 = 0;
  9439  002B50  010F               	movlb	15	; () banked
  9440  002B52  993A               	bcf	58,4,b	;volatile
  9441                           
  9442                           ;ST7540.c: 317: LATCbits.LATC4 = 0;
  9443  002B54  988B               	bcf	3979,4,c	;volatile
  9444                           
  9445                           ;ST7540.c: 319: TRISBbits.TRISB2 = 1;
  9446  002B56  8493               	bsf	3987,2,c	;volatile
  9447                           
  9448                           ;ST7540.c: 320: ANSELBbits.ANSB2 = 0;
  9449  002B58  010F               	movlb	15	; () banked
  9450  002B5A  9539               	bcf	57,2,b	;volatile
  9451                           
  9452                           ;ST7540.c: 322: TRISBbits.TRISB3 = 0;
  9453  002B5C  9693               	bcf	3987,3,c	;volatile
  9454                           
  9455                           ;ST7540.c: 323: ANSELBbits.ANSB3 = 0;
  9456  002B5E  010F               	movlb	15	; () banked
  9457  002B60  9739               	bcf	57,3,b	;volatile
  9458                           
  9459                           ;ST7540.c: 324: LATBbits.LATB3 = 0;
  9460  002B62  968A               	bcf	3978,3,c	;volatile
  9461                           
  9462                           ;ST7540.c: 326: TRISCbits.TRISC5 = 0;
  9463  002B64  9A94               	bcf	3988,5,c	;volatile
  9464                           
  9465                           ;ST7540.c: 327: ANSELCbits.ANSC5 = 0;
  9466  002B66  010F               	movlb	15	; () banked
  9467  002B68  9B3A               	bcf	58,5,b	;volatile
  9468                           
  9469                           ;ST7540.c: 328: LATCbits.LATC5 = 1;
  9470  002B6A  8A8B               	bsf	3979,5,c	;volatile
  9471                           
  9472                           ;ST7540.c: 330: TRISCbits.TRISC3 = 1;
  9473  002B6C  8694               	bsf	3988,3,c	;volatile
  9474                           
  9475                           ;ST7540.c: 331: ANSELCbits.ANSC3 = 0;
  9476  002B6E  010F               	movlb	15	; () banked
  9477  002B70  973A               	bcf	58,3,b	;volatile
  9478                           
  9479                           ;ST7540.c: 333: TRISBbits.TRISB1 = 1;
  9480  002B72  8293               	bsf	3987,1,c	;volatile
  9481                           
  9482                           ;ST7540.c: 334: ANSELBbits.ANSB1 = 0;
  9483  002B74  010F               	movlb	15	; () banked
  9484  002B76  9339               	bcf	57,1,b	;volatile
  9485                           
  9486                           ;ST7540.c: 336: TRISBbits.TRISB4 = 1;
  9487  002B78  8893               	bsf	3987,4,c	;volatile
  9488                           
  9489                           ;ST7540.c: 337: ANSELBbits.ANSB4 = 0;
  9490  002B7A  010F               	movlb	15	; () banked
  9491  002B7C  9939               	bcf	57,4,b	;volatile
  9492                           
  9493                           ; BSR set to: 15
  9494  002B7E  0012               	return		;funcret
  9495  002B80                     __end_of_InitST7540Pins:
  9496                           	opt stack 0
  9497                           tblptru	equ	0xFF8
  9498                           tblptrh	equ	0xFF7
  9499                           tblptrl	equ	0xFF6
  9500                           tablat	equ	0xFF5
  9501                           prodh	equ	0xFF4
  9502                           prodl	equ	0xFF3
  9503                           intcon	equ	0xFF2
  9504                           indf0	equ	0xFEF
  9505                           postinc0	equ	0xFEE
  9506                           fsr0h	equ	0xFEA
  9507                           fsr0l	equ	0xFE9
  9508                           wreg	equ	0xFE8
  9509                           indf1	equ	0xFE7
  9510                           postdec1	equ	0xFE5
  9511                           fsr1h	equ	0xFE2
  9512                           fsr1l	equ	0xFE1
  9513                           indf2	equ	0xFDF
  9514                           postinc2	equ	0xFDE
  9515                           postdec2	equ	0xFDD
  9516                           fsr2h	equ	0xFDA
  9517                           fsr2l	equ	0xFD9
  9518                           status	equ	0xFD8
  9519                           
  9520 ;; *************** function _EEPROMRead *****************
  9521 ;; Defined at:
  9522 ;;		line 1384 in file "Released IBC-1 Code - 03-06-2016/main.c"
  9523 ;; Parameters:    Size  Location     Type
  9524 ;;		None
  9525 ;; Auto vars:     Size  Location     Type
  9526 ;;  address         2    2[BANK0 ] unsigned int 
  9527 ;; Return value:  Size  Location     Type
  9528 ;;                  1    wreg      void 
  9529 ;; Registers used:
  9530 ;;		wreg, status,2, status,0, cstack
  9531 ;; Tracked objects:
  9532 ;;		On entry : 0/0
  9533 ;;		On exit  : 0/0
  9534 ;;		Unchanged: 0/0
  9535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9536 ;;      Params:         0       0       0       0       0       0       0
  9537 ;;      Locals:         0       2       0       0       0       0       0
  9538 ;;      Temps:          0       0       0       0       0       0       0
  9539 ;;      Totals:         0       2       0       0       0       0       0
  9540 ;;Total ram usage:        2 bytes
  9541 ;; Hardware stack levels used:    1
  9542 ;; Hardware stack levels required when called:    6
  9543 ;; This function calls:
  9544 ;;		_Read_b_eep
  9545 ;; This function is called by:
  9546 ;;		_InitSystem
  9547 ;;		_Assign_ISC_New_SN
  9548 ;; This function uses a non-reentrant model
  9549 ;;
  9550                           
  9551                           	psect	text48
  9552  002A00                     __ptext48:
  9553                           	opt stack 0
  9554  002A00                     _EEPROMRead:
  9555                           	opt stack 23
  9556                           
  9557                           ;main.c: 1385: unsigned int address;
  9558                           ;main.c: 1386: address = 0x0200;
  9559                           
  9560                           ; BSR set to: 15
  9561                           ;incstack = 0
  9562  002A00  0E02               	movlw	2
  9563  002A02  0100               	movlb	0	; () banked
  9564  002A04  6FC5               	movwf	(EEPROMRead@address+1)& (0+255),b
  9565  002A06  0E00               	movlw	0
  9566  002A08  6FC4               	movwf	EEPROMRead@address& (0+255),b
  9567                           
  9568                           ; BSR set to: 0
  9569                           ;main.c: 1387: EEPRead[0] = Read_b_eep (address);
  9570  002A0A  C0C4  F0C2         	movff	EEPROMRead@address,Read_b_eep@badd
  9571  002A0E  C0C5  F0C3         	movff	EEPROMRead@address+1,Read_b_eep@badd+1
  9572  002A12  ECAA  F016         	call	_Read_b_eep	;wreg free
  9573  002A16  0100               	movlb	0	; () banked
  9574  002A18  6F60               	movwf	_EEPRead& (0+255),b
  9575                           
  9576                           ; BSR set to: 0
  9577                           ;main.c: 1388: address++;
  9578  002A1A  0100               	movlb	0	; () banked
  9579  002A1C  4BC4               	infsnz	EEPROMRead@address& (0+255),f,b
  9580  002A1E  2BC5               	incf	(EEPROMRead@address+1)& (0+255),f,b
  9581                           
  9582                           ; BSR set to: 0
  9583                           ;main.c: 1389: EEPRead[1] = Read_b_eep (address);
  9584  002A20  C0C4  F0C2         	movff	EEPROMRead@address,Read_b_eep@badd
  9585  002A24  C0C5  F0C3         	movff	EEPROMRead@address+1,Read_b_eep@badd+1
  9586  002A28  ECAA  F016         	call	_Read_b_eep	;wreg free
  9587  002A2C  0100               	movlb	0	; () banked
  9588  002A2E  6F61               	movwf	(_EEPRead+1)& (0+255),b
  9589                           
  9590                           ; BSR set to: 0
  9591                           ;main.c: 1390: address++;
  9592  002A30  0100               	movlb	0	; () banked
  9593  002A32  4BC4               	infsnz	EEPROMRead@address& (0+255),f,b
  9594  002A34  2BC5               	incf	(EEPROMRead@address+1)& (0+255),f,b
  9595                           
  9596                           ; BSR set to: 0
  9597                           ;main.c: 1391: EEPRead[2] = Read_b_eep (address);
  9598  002A36  C0C4  F0C2         	movff	EEPROMRead@address,Read_b_eep@badd
  9599  002A3A  C0C5  F0C3         	movff	EEPROMRead@address+1,Read_b_eep@badd+1
  9600  002A3E  ECAA  F016         	call	_Read_b_eep	;wreg free
  9601  002A42  0100               	movlb	0	; () banked
  9602  002A44  6F62               	movwf	(_EEPRead+2)& (0+255),b
  9603                           
  9604                           ; BSR set to: 0
  9605                           ;main.c: 1392: address++;
  9606  002A46  0100               	movlb	0	; () banked
  9607  002A48  4BC4               	infsnz	EEPROMRead@address& (0+255),f,b
  9608  002A4A  2BC5               	incf	(EEPROMRead@address+1)& (0+255),f,b
  9609                           
  9610                           ; BSR set to: 0
  9611  002A4C  0012               	return		;funcret
  9612  002A4E                     __end_of_EEPROMRead:
  9613                           	opt stack 0
  9614                           tblptru	equ	0xFF8
  9615                           tblptrh	equ	0xFF7
  9616                           tblptrl	equ	0xFF6
  9617                           tablat	equ	0xFF5
  9618                           prodh	equ	0xFF4
  9619                           prodl	equ	0xFF3
  9620                           intcon	equ	0xFF2
  9621                           indf0	equ	0xFEF
  9622                           postinc0	equ	0xFEE
  9623                           fsr0h	equ	0xFEA
  9624                           fsr0l	equ	0xFE9
  9625                           wreg	equ	0xFE8
  9626                           indf1	equ	0xFE7
  9627                           postdec1	equ	0xFE5
  9628                           fsr1h	equ	0xFE2
  9629                           fsr1l	equ	0xFE1
  9630                           indf2	equ	0xFDF
  9631                           postinc2	equ	0xFDE
  9632                           postdec2	equ	0xFDD
  9633                           fsr2h	equ	0xFDA
  9634                           fsr2l	equ	0xFD9
  9635                           status	equ	0xFD8
  9636                           
  9637 ;; *************** function _Read_b_eep *****************
  9638 ;; Defined at:
  9639 ;;		line 1418 in file "Released IBC-1 Code - 03-06-2016/main.c"
  9640 ;; Parameters:    Size  Location     Type
  9641 ;;  badd            2    0[BANK0 ] unsigned int 
  9642 ;; Auto vars:     Size  Location     Type
  9643 ;;		None
  9644 ;; Return value:  Size  Location     Type
  9645 ;;                  1    wreg      unsigned char 
  9646 ;; Registers used:
  9647 ;;		wreg, status,2
  9648 ;; Tracked objects:
  9649 ;;		On entry : 0/0
  9650 ;;		On exit  : 0/0
  9651 ;;		Unchanged: 0/0
  9652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9653 ;;      Params:         0       2       0       0       0       0       0
  9654 ;;      Locals:         0       0       0       0       0       0       0
  9655 ;;      Temps:          0       0       0       0       0       0       0
  9656 ;;      Totals:         0       2       0       0       0       0       0
  9657 ;;Total ram usage:        2 bytes
  9658 ;; Hardware stack levels used:    1
  9659 ;; Hardware stack levels required when called:    5
  9660 ;; This function calls:
  9661 ;;		Nothing
  9662 ;; This function is called by:
  9663 ;;		_EEPROMRead
  9664 ;; This function uses a non-reentrant model
  9665 ;;
  9666                           
  9667                           	psect	text49
  9668  002D54                     __ptext49:
  9669                           	opt stack 0
  9670  002D54                     _Read_b_eep:
  9671                           	opt stack 23
  9672                           
  9673                           ;main.c: 1420: EEADR = (badd & 0x0ff);
  9674                           
  9675                           ; BSR set to: 0
  9676                           ;incstack = 0
  9677  002D54  C0C2  FFA9         	movff	Read_b_eep@badd,4009	;volatile
  9678                           
  9679                           ;main.c: 1421: EECON1bits.CFGS = 0;
  9680  002D58  9CA6               	bcf	4006,6,c	;volatile
  9681                           
  9682                           ;main.c: 1422: EECON1bits.EEPGD = 0;
  9683  002D5A  9EA6               	bcf	4006,7,c	;volatile
  9684                           
  9685                           ;main.c: 1423: EECON1bits.RD = 1;
  9686  002D5C  80A6               	bsf	4006,0,c	;volatile
  9687                           
  9688                           ;main.c: 1424: __nop();
  9689  002D5E  F000               	nop	
  9690                           
  9691                           ;main.c: 1425: __nop();
  9692  002D60  F000               	nop	
  9693                           
  9694                           ;main.c: 1426: return ( EEDATA );
  9695  002D62  50A8               	movf	4008,w,c	;volatile
  9696  002D64  0012               	return	
  9697  002D66                     __end_of_Read_b_eep:
  9698                           	opt stack 0
  9699                           tblptru	equ	0xFF8
  9700                           tblptrh	equ	0xFF7
  9701                           tblptrl	equ	0xFF6
  9702                           tablat	equ	0xFF5
  9703                           prodh	equ	0xFF4
  9704                           prodl	equ	0xFF3
  9705                           intcon	equ	0xFF2
  9706                           indf0	equ	0xFEF
  9707                           postinc0	equ	0xFEE
  9708                           fsr0h	equ	0xFEA
  9709                           fsr0l	equ	0xFE9
  9710                           wreg	equ	0xFE8
  9711                           indf1	equ	0xFE7
  9712                           postdec1	equ	0xFE5
  9713                           fsr1h	equ	0xFE2
  9714                           fsr1l	equ	0xFE1
  9715                           indf2	equ	0xFDF
  9716                           postinc2	equ	0xFDE
  9717                           postdec2	equ	0xFDD
  9718                           fsr2h	equ	0xFDA
  9719                           fsr2l	equ	0xFD9
  9720                           status	equ	0xFD8
  9721                           
  9722 ;; *************** function _EEPROMClearReset *****************
  9723 ;; Defined at:
  9724 ;;		line 1362 in file "Released IBC-1 Code - 03-06-2016/main.c"
  9725 ;; Parameters:    Size  Location     Type
  9726 ;;		None
  9727 ;; Auto vars:     Size  Location     Type
  9728 ;;  address         2    4[BANK0 ] unsigned int 
  9729 ;; Return value:  Size  Location     Type
  9730 ;;                  1    wreg      void 
  9731 ;; Registers used:
  9732 ;;		wreg, status,2, cstack
  9733 ;; Tracked objects:
  9734 ;;		On entry : 0/0
  9735 ;;		On exit  : 0/0
  9736 ;;		Unchanged: 0/0
  9737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9738 ;;      Params:         0       0       0       0       0       0       0
  9739 ;;      Locals:         0       2       0       0       0       0       0
  9740 ;;      Temps:          0       0       0       0       0       0       0
  9741 ;;      Totals:         0       2       0       0       0       0       0
  9742 ;;Total ram usage:        2 bytes
  9743 ;; Hardware stack levels used:    1
  9744 ;; Hardware stack levels required when called:    6
  9745 ;; This function calls:
  9746 ;;		_Busy_eep
  9747 ;;		_Write_b_eep
  9748 ;; This function is called by:
  9749 ;;		_InitSystem
  9750 ;; This function uses a non-reentrant model
  9751 ;;
  9752                           
  9753                           	psect	text50
  9754  002C2C                     __ptext50:
  9755                           	opt stack 0
  9756  002C2C                     _EEPROMClearReset:
  9757                           	opt stack 23
  9758                           
  9759                           ;main.c: 1363: unsigned int address;
  9760                           ;main.c: 1364: address = 0x0202;
  9761                           
  9762                           ;incstack = 0
  9763  002C2C  0E02               	movlw	2
  9764  002C2E  0100               	movlb	0	; () banked
  9765  002C30  6FC7               	movwf	(EEPROMClearReset@address+1)& (0+255),b
  9766  002C32  0E02               	movlw	2
  9767  002C34  6FC6               	movwf	EEPROMClearReset@address& (0+255),b
  9768                           
  9769                           ; BSR set to: 0
  9770                           ;main.c: 1365: INTCONbits.GIEH = 0;
  9771  002C36  9EF2               	bcf	intcon,7,c	;volatile
  9772                           
  9773                           ; BSR set to: 0
  9774                           ;main.c: 1366: Write_b_eep (address, 0x00);
  9775  002C38  C0C6  F0C2         	movff	EEPROMClearReset@address,Write_b_eep@badd
  9776  002C3C  C0C7  F0C3         	movff	EEPROMClearReset@address+1,Write_b_eep@badd+1
  9777  002C40  0E00               	movlw	0
  9778  002C42  0100               	movlb	0	; () banked
  9779  002C44  6FC4               	movwf	Write_b_eep@bdat& (0+255),b
  9780  002C46  EC69  F015         	call	_Write_b_eep	;wreg free
  9781                           
  9782                           ;main.c: 1369: Busy_eep();
  9783  002C4A  EC0C  F017         	call	_Busy_eep	;wreg free
  9784                           
  9785                           ;main.c: 1370: INTCONbits.GIEH = 1;
  9786  002C4E  8EF2               	bsf	intcon,7,c	;volatile
  9787  002C50  0012               	return		;funcret
  9788  002C52                     __end_of_EEPROMClearReset:
  9789                           	opt stack 0
  9790                           tblptru	equ	0xFF8
  9791                           tblptrh	equ	0xFF7
  9792                           tblptrl	equ	0xFF6
  9793                           tablat	equ	0xFF5
  9794                           prodh	equ	0xFF4
  9795                           prodl	equ	0xFF3
  9796                           intcon	equ	0xFF2
  9797                           indf0	equ	0xFEF
  9798                           postinc0	equ	0xFEE
  9799                           fsr0h	equ	0xFEA
  9800                           fsr0l	equ	0xFE9
  9801                           wreg	equ	0xFE8
  9802                           indf1	equ	0xFE7
  9803                           postdec1	equ	0xFE5
  9804                           fsr1h	equ	0xFE2
  9805                           fsr1l	equ	0xFE1
  9806                           indf2	equ	0xFDF
  9807                           postinc2	equ	0xFDE
  9808                           postdec2	equ	0xFDD
  9809                           fsr2h	equ	0xFDA
  9810                           fsr2l	equ	0xFD9
  9811                           status	equ	0xFD8
  9812                           
  9813 ;; *************** function _FIRE *****************
  9814 ;; Defined at:
  9815 ;;		line 959 in file "Released IBC-1 Code - 03-06-2016/main.c"
  9816 ;; Parameters:    Size  Location     Type
  9817 ;;		None
  9818 ;; Auto vars:     Size  Location     Type
  9819 ;;  i               2    5[BANK0 ] int 
  9820 ;; Return value:  Size  Location     Type
  9821 ;;                  1    wreg      void 
  9822 ;; Registers used:
  9823 ;;		wreg, status,2, status,0, cstack
  9824 ;; Tracked objects:
  9825 ;;		On entry : 0/0
  9826 ;;		On exit  : 0/0
  9827 ;;		Unchanged: 0/0
  9828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9829 ;;      Params:         0       0       0       0       0       0       0
  9830 ;;      Locals:         0       2       0       0       0       0       0
  9831 ;;      Temps:          0       0       0       0       0       0       0
  9832 ;;      Totals:         0       2       0       0       0       0       0
  9833 ;;Total ram usage:        2 bytes
  9834 ;; Hardware stack levels used:    1
  9835 ;; Hardware stack levels required when called:    9
  9836 ;; This function calls:
  9837 ;;		_GenerateMissingPulse
  9838 ;;		_ReadMAINS_ZeroCrossing
  9839 ;;		_StartBlastTimer
  9840 ;;		_StartPostFireTimer
  9841 ;;		_StopBlastTimer
  9842 ;; This function is called by:
  9843 ;;		_main
  9844 ;; This function uses a non-reentrant model
  9845 ;;
  9846                           
  9847                           	psect	text51
  9848  002688                     __ptext51:
  9849                           	opt stack 0
  9850  002688                     _FIRE:
  9851                           	opt stack 21
  9852  002688                     l5316:
  9853  002688  EC4D  F014         	call	_ReadMAINS_ZeroCrossing	;wreg free
  9854  00268C  06E8               	decf	wreg,f,c
  9855  00268E  B4D8               	btfsc	status,2,c
  9856  002690  D7FB               	goto	l5316
  9857                           
  9858                           ;main.c: 962: StartBlastTimer();
  9859  002692  ECFA  F016         	call	_StartBlastTimer	;wreg free
  9860                           
  9861                           ;main.c: 963: for (int i = 0; i < 120; i++){
  9862  002696  0E00               	movlw	0
  9863  002698  0100               	movlb	0	; () banked
  9864  00269A  6FC8               	movwf	(FIRE@i+1)& (0+255),b
  9865  00269C  0E00               	movlw	0
  9866  00269E  6FC7               	movwf	FIRE@i& (0+255),b
  9867  0026A0                     l5322:
  9868                           
  9869                           ; BSR set to: 0
  9870  0026A0  0100               	movlb	0	; () banked
  9871  0026A2  BFC8               	btfsc	(FIRE@i+1)& (0+255),7,b
  9872  0026A4  D008               	goto	l854
  9873  0026A6  0100               	movlb	0	; () banked
  9874  0026A8  51C8               	movf	(FIRE@i+1)& (0+255),w,b
  9875  0026AA  E127               	bnz	l5340
  9876  0026AC  0E78               	movlw	120
  9877  0026AE  0100               	movlb	0	; () banked
  9878  0026B0  5DC7               	subwf	FIRE@i& (0+255),w,b
  9879  0026B2  B0D8               	btfsc	status,0,c
  9880  0026B4  D022               	goto	l5340
  9881  0026B6                     l854:
  9882                           
  9883                           ; BSR set to: 0
  9884  0026B6  0004               	clrwdt		;# 
  9885  0026B8                     l5326:
  9886  0026B8  EC4D  F014         	call	_ReadMAINS_ZeroCrossing	;wreg free
  9887  0026BC  0900               	iorlw	0
  9888  0026BE  A4D8               	btfss	status,2,c
  9889  0026C0  D008               	goto	l5330
  9890  0026C2  0100               	movlb	0	; () banked
  9891  0026C4  5171               	movf	(_BTHighSpeedTickUIG+1)& (0+255),w,b
  9892  0026C6  E105               	bnz	l5330
  9893  0026C8  0EA0               	movlw	160
  9894  0026CA  0100               	movlb	0	; () banked
  9895  0026CC  5D70               	subwf	_BTHighSpeedTickUIG& (0+255),w,b
  9896  0026CE  A0D8               	btfss	status,0,c
  9897  0026D0  D7F3               	goto	l5326
  9898  0026D2                     l5330:
  9899                           
  9900                           ;main.c: 966: GenerateMissingPulse();
  9901  0026D2  ECC5  F012         	call	_GenerateMissingPulse	;wreg free
  9902                           
  9903                           ;main.c: 967: if (BTHighSpeedTickUIG > 160){
  9904  0026D6  0100               	movlb	0	; () banked
  9905  0026D8  5171               	movf	(_BTHighSpeedTickUIG+1)& (0+255),w,b
  9906  0026DA  E105               	bnz	u4160
  9907  0026DC  0EA1               	movlw	161
  9908  0026DE  0100               	movlb	0	; () banked
  9909  0026E0  5D70               	subwf	_BTHighSpeedTickUIG& (0+255),w,b
  9910  0026E2  A0D8               	btfss	status,0,c
  9911  0026E4  D006               	goto	l5336
  9912  0026E6                     u4160:
  9913                           
  9914                           ; BSR set to: 0
  9915                           ;main.c: 968: AlarmStatusUCG = 1;
  9916  0026E6  0E01               	movlw	1
  9917  0026E8  0100               	movlb	0	; () banked
  9918  0026EA  6FA6               	movwf	_AlarmStatusUCG& (0+255),b
  9919                           
  9920                           ;main.c: 969: CFLEDFlashEnable = 1;
  9921  0026EC  0E01               	movlw	1
  9922  0026EE  6E40               	movwf	_CFLEDFlashEnable,c
  9923                           
  9924                           ;main.c: 970: break;
  9925  0026F0  D004               	goto	l5340
  9926  0026F2                     l5336:
  9927                           
  9928                           ; BSR set to: 0
  9929  0026F2  0100               	movlb	0	; () banked
  9930  0026F4  4BC7               	infsnz	FIRE@i& (0+255),f,b
  9931  0026F6  2BC8               	incf	(FIRE@i+1)& (0+255),f,b
  9932  0026F8  D7D3               	goto	l5322
  9933  0026FA                     l5340:
  9934                           
  9935                           ; BSR set to: 0
  9936                           ;main.c: 971: }
  9937                           ;main.c: 972: }
  9938                           ;main.c: 974: StopBlastTimer();
  9939  0026FA  EC8D  F016         	call	_StopBlastTimer	;wreg free
  9940                           
  9941                           ;main.c: 975: StartPostFireTimer();
  9942  0026FE  EC97  F016         	call	_StartPostFireTimer	;wreg free
  9943  002702  0012               	return		;funcret
  9944  002704                     __end_of_FIRE:
  9945                           	opt stack 0
  9946                           tblptru	equ	0xFF8
  9947                           tblptrh	equ	0xFF7
  9948                           tblptrl	equ	0xFF6
  9949                           tablat	equ	0xFF5
  9950                           prodh	equ	0xFF4
  9951                           prodl	equ	0xFF3
  9952                           intcon	equ	0xFF2
  9953                           indf0	equ	0xFEF
  9954                           postinc0	equ	0xFEE
  9955                           fsr0h	equ	0xFEA
  9956                           fsr0l	equ	0xFE9
  9957                           wreg	equ	0xFE8
  9958                           indf1	equ	0xFE7
  9959                           postdec1	equ	0xFE5
  9960                           fsr1h	equ	0xFE2
  9961                           fsr1l	equ	0xFE1
  9962                           indf2	equ	0xFDF
  9963                           postinc2	equ	0xFDE
  9964                           postdec2	equ	0xFDD
  9965                           fsr2h	equ	0xFDA
  9966                           fsr2l	equ	0xFD9
  9967                           status	equ	0xFD8
  9968                           
  9969 ;; *************** function _StopBlastTimer *****************
  9970 ;; Defined at:
  9971 ;;		line 922 in file "Released IBC-1 Code - 03-06-2016/main.c"
  9972 ;; Parameters:    Size  Location     Type
  9973 ;;		None
  9974 ;; Auto vars:     Size  Location     Type
  9975 ;;		None
  9976 ;; Return value:  Size  Location     Type
  9977 ;;                  1    wreg      void 
  9978 ;; Registers used:
  9979 ;;		wreg, status,2
  9980 ;; Tracked objects:
  9981 ;;		On entry : 0/0
  9982 ;;		On exit  : 0/0
  9983 ;;		Unchanged: 0/0
  9984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9985 ;;      Params:         0       0       0       0       0       0       0
  9986 ;;      Locals:         0       0       0       0       0       0       0
  9987 ;;      Temps:          0       0       0       0       0       0       0
  9988 ;;      Totals:         0       0       0       0       0       0       0
  9989 ;;Total ram usage:        0 bytes
  9990 ;; Hardware stack levels used:    1
  9991 ;; Hardware stack levels required when called:    5
  9992 ;; This function calls:
  9993 ;;		Nothing
  9994 ;; This function is called by:
  9995 ;;		_FIRE
  9996 ;; This function uses a non-reentrant model
  9997 ;;
  9998                           
  9999                           	psect	text52
 10000  002D1A                     __ptext52:
 10001                           	opt stack 0
 10002  002D1A                     _StopBlastTimer:
 10003                           	opt stack 24
 10004                           
 10005                           ;main.c: 923: BTEnabled = 0;
 10006                           
 10007                           ;incstack = 0
 10008  002D1A  0E00               	movlw	0
 10009  002D1C  6E3E               	movwf	_BTEnabled,c
 10010                           
 10011                           ;main.c: 924: HighSpeedTickUIG = 0;
 10012  002D1E  0E00               	movlw	0
 10013  002D20  0100               	movlb	0	; () banked
 10014  002D22  6F81               	movwf	(_HighSpeedTickUIG+1)& (0+255),b
 10015  002D24  0E00               	movlw	0
 10016  002D26  6F80               	movwf	_HighSpeedTickUIG& (0+255),b
 10017                           
 10018                           ;main.c: 925: LowSpeedTickBTCG = 0;
 10019  002D28  0E00               	movlw	0
 10020  002D2A  6E48               	movwf	_LowSpeedTickBTCG,c
 10021                           
 10022                           ; BSR set to: 0
 10023  002D2C  0012               	return		;funcret
 10024  002D2E                     __end_of_StopBlastTimer:
 10025                           	opt stack 0
 10026                           tblptru	equ	0xFF8
 10027                           tblptrh	equ	0xFF7
 10028                           tblptrl	equ	0xFF6
 10029                           tablat	equ	0xFF5
 10030                           prodh	equ	0xFF4
 10031                           prodl	equ	0xFF3
 10032                           intcon	equ	0xFF2
 10033                           indf0	equ	0xFEF
 10034                           postinc0	equ	0xFEE
 10035                           fsr0h	equ	0xFEA
 10036                           fsr0l	equ	0xFE9
 10037                           wreg	equ	0xFE8
 10038                           indf1	equ	0xFE7
 10039                           postdec1	equ	0xFE5
 10040                           fsr1h	equ	0xFE2
 10041                           fsr1l	equ	0xFE1
 10042                           indf2	equ	0xFDF
 10043                           postinc2	equ	0xFDE
 10044                           postdec2	equ	0xFDD
 10045                           fsr2h	equ	0xFDA
 10046                           fsr2l	equ	0xFD9
 10047                           status	equ	0xFD8
 10048                           
 10049 ;; *************** function _StartPostFireTimer *****************
 10050 ;; Defined at:
 10051 ;;		line 905 in file "Released IBC-1 Code - 03-06-2016/main.c"
 10052 ;; Parameters:    Size  Location     Type
 10053 ;;		None
 10054 ;; Auto vars:     Size  Location     Type
 10055 ;;		None
 10056 ;; Return value:  Size  Location     Type
 10057 ;;                  1    wreg      void 
 10058 ;; Registers used:
 10059 ;;		wreg, status,2
 10060 ;; Tracked objects:
 10061 ;;		On entry : 0/0
 10062 ;;		On exit  : 0/0
 10063 ;;		Unchanged: 0/0
 10064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10065 ;;      Params:         0       0       0       0       0       0       0
 10066 ;;      Locals:         0       0       0       0       0       0       0
 10067 ;;      Temps:          0       0       0       0       0       0       0
 10068 ;;      Totals:         0       0       0       0       0       0       0
 10069 ;;Total ram usage:        0 bytes
 10070 ;; Hardware stack levels used:    1
 10071 ;; Hardware stack levels required when called:    5
 10072 ;; This function calls:
 10073 ;;		Nothing
 10074 ;; This function is called by:
 10075 ;;		_FIRE
 10076 ;; This function uses a non-reentrant model
 10077 ;;
 10078                           
 10079                           	psect	text53
 10080  002D2E                     __ptext53:
 10081                           	opt stack 0
 10082  002D2E                     _StartPostFireTimer:
 10083                           	opt stack 24
 10084                           
 10085                           ;main.c: 906: PBTEnabled = 1;
 10086                           
 10087                           ; BSR set to: 0
 10088                           ;incstack = 0
 10089  002D2E  0E01               	movlw	1
 10090  002D30  6E50               	movwf	_PBTEnabled,c
 10091                           
 10092                           ;main.c: 907: HighSpeedTickUIG = 0;
 10093  002D32  0E00               	movlw	0
 10094  002D34  0100               	movlb	0	; () banked
 10095  002D36  6F81               	movwf	(_HighSpeedTickUIG+1)& (0+255),b
 10096  002D38  0E00               	movlw	0
 10097  002D3A  6F80               	movwf	_HighSpeedTickUIG& (0+255),b
 10098                           
 10099                           ;main.c: 908: LowSpeedTickPBTCG = 0;
 10100  002D3C  0E00               	movlw	0
 10101  002D3E  6E4B               	movwf	_LowSpeedTickPBTCG,c
 10102                           
 10103                           ; BSR set to: 0
 10104  002D40  0012               	return		;funcret
 10105  002D42                     __end_of_StartPostFireTimer:
 10106                           	opt stack 0
 10107                           tblptru	equ	0xFF8
 10108                           tblptrh	equ	0xFF7
 10109                           tblptrl	equ	0xFF6
 10110                           tablat	equ	0xFF5
 10111                           prodh	equ	0xFF4
 10112                           prodl	equ	0xFF3
 10113                           intcon	equ	0xFF2
 10114                           indf0	equ	0xFEF
 10115                           postinc0	equ	0xFEE
 10116                           fsr0h	equ	0xFEA
 10117                           fsr0l	equ	0xFE9
 10118                           wreg	equ	0xFE8
 10119                           indf1	equ	0xFE7
 10120                           postdec1	equ	0xFE5
 10121                           fsr1h	equ	0xFE2
 10122                           fsr1l	equ	0xFE1
 10123                           indf2	equ	0xFDF
 10124                           postinc2	equ	0xFDE
 10125                           postdec2	equ	0xFDD
 10126                           fsr2h	equ	0xFDA
 10127                           fsr2l	equ	0xFD9
 10128                           status	equ	0xFD8
 10129                           
 10130 ;; *************** function _StartBlastTimer *****************
 10131 ;; Defined at:
 10132 ;;		line 917 in file "Released IBC-1 Code - 03-06-2016/main.c"
 10133 ;; Parameters:    Size  Location     Type
 10134 ;;		None
 10135 ;; Auto vars:     Size  Location     Type
 10136 ;;		None
 10137 ;; Return value:  Size  Location     Type
 10138 ;;                  1    wreg      void 
 10139 ;; Registers used:
 10140 ;;		wreg, status,2
 10141 ;; Tracked objects:
 10142 ;;		On entry : 0/0
 10143 ;;		On exit  : 0/0
 10144 ;;		Unchanged: 0/0
 10145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10146 ;;      Params:         0       0       0       0       0       0       0
 10147 ;;      Locals:         0       0       0       0       0       0       0
 10148 ;;      Temps:          0       0       0       0       0       0       0
 10149 ;;      Totals:         0       0       0       0       0       0       0
 10150 ;;Total ram usage:        0 bytes
 10151 ;; Hardware stack levels used:    1
 10152 ;; Hardware stack levels required when called:    5
 10153 ;; This function calls:
 10154 ;;		Nothing
 10155 ;; This function is called by:
 10156 ;;		_FIRE
 10157 ;; This function uses a non-reentrant model
 10158 ;;
 10159                           
 10160                           	psect	text54
 10161  002DF4                     __ptext54:
 10162                           	opt stack 0
 10163  002DF4                     _StartBlastTimer:
 10164                           	opt stack 24
 10165                           
 10166                           ;main.c: 918: BTEnabled = 1;
 10167                           
 10168                           ; BSR set to: 0
 10169                           ;incstack = 0
 10170  002DF4  0E01               	movlw	1
 10171  002DF6  6E3E               	movwf	_BTEnabled,c
 10172                           
 10173                           ;main.c: 919: LowSpeedTickBTCG = 0;
 10174  002DF8  0E00               	movlw	0
 10175  002DFA  6E48               	movwf	_LowSpeedTickBTCG,c
 10176  002DFC  0012               	return		;funcret
 10177  002DFE                     __end_of_StartBlastTimer:
 10178                           	opt stack 0
 10179                           tblptru	equ	0xFF8
 10180                           tblptrh	equ	0xFF7
 10181                           tblptrl	equ	0xFF6
 10182                           tablat	equ	0xFF5
 10183                           prodh	equ	0xFF4
 10184                           prodl	equ	0xFF3
 10185                           intcon	equ	0xFF2
 10186                           indf0	equ	0xFEF
 10187                           postinc0	equ	0xFEE
 10188                           fsr0h	equ	0xFEA
 10189                           fsr0l	equ	0xFE9
 10190                           wreg	equ	0xFE8
 10191                           indf1	equ	0xFE7
 10192                           postdec1	equ	0xFE5
 10193                           fsr1h	equ	0xFE2
 10194                           fsr1l	equ	0xFE1
 10195                           indf2	equ	0xFDF
 10196                           postinc2	equ	0xFDE
 10197                           postdec2	equ	0xFDD
 10198                           fsr2h	equ	0xFDA
 10199                           fsr2l	equ	0xFD9
 10200                           status	equ	0xFD8
 10201                           
 10202 ;; *************** function _GenerateMissingPulse *****************
 10203 ;; Defined at:
 10204 ;;		line 978 in file "Released IBC-1 Code - 03-06-2016/main.c"
 10205 ;; Parameters:    Size  Location     Type
 10206 ;;		None
 10207 ;; Auto vars:     Size  Location     Type
 10208 ;;		None
 10209 ;; Return value:  Size  Location     Type
 10210 ;;                  1    wreg      void 
 10211 ;; Registers used:
 10212 ;;		wreg, status,2, status,0, cstack
 10213 ;; Tracked objects:
 10214 ;;		On entry : 0/0
 10215 ;;		On exit  : 0/0
 10216 ;;		Unchanged: 0/0
 10217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10218 ;;      Params:         0       0       0       0       0       0       0
 10219 ;;      Locals:         0       0       0       0       0       0       0
 10220 ;;      Temps:          0       0       0       0       0       0       0
 10221 ;;      Totals:         0       0       0       0       0       0       0
 10222 ;;Total ram usage:        0 bytes
 10223 ;; Hardware stack levels used:    1
 10224 ;; Hardware stack levels required when called:    8
 10225 ;; This function calls:
 10226 ;;		_ReadMAINS_ZeroCrossing
 10227 ;;		_TurnSSR1Off
 10228 ;;		_TurnSSR1On
 10229 ;;		_WaitTickCount
 10230 ;; This function is called by:
 10231 ;;		_FIRE
 10232 ;; This function uses a non-reentrant model
 10233 ;;
 10234                           
 10235                           	psect	text55
 10236  00258A                     __ptext55:
 10237                           	opt stack 0
 10238  00258A                     _GenerateMissingPulse:
 10239                           	opt stack 21
 10240                           
 10241                           ;main.c: 980: WaitTickCount(8);
 10242                           
 10243                           ;incstack = 0
 10244  00258A  0E00               	movlw	0
 10245  00258C  0100               	movlb	0	; () banked
 10246  00258E  6FC3               	movwf	(WaitTickCount@tickCountUS+1)& (0+255),b
 10247  002590  0E08               	movlw	8
 10248  002592  6FC2               	movwf	WaitTickCount@tickCountUS& (0+255),b
 10249  002594  EC3C  F016         	call	_WaitTickCount	;wreg free
 10250                           
 10251                           ;main.c: 981: TurnSSR1On();
 10252  002598  EC1D  F017         	call	_TurnSSR1On	;wreg free
 10253                           
 10254                           ;main.c: 983: for (HighPulseCountCG = 0; HighPulseCountCG < 25; HighPulseCountCG++){
 10255  00259C  0E00               	movlw	0
 10256  00259E  0100               	movlb	0	; () banked
 10257  0025A0  6FAC               	movwf	_HighPulseCountCG& (0+255),b
 10258  0025A2                     l4472:
 10259                           
 10260                           ; BSR set to: 0
 10261  0025A2  0E18               	movlw	24
 10262  0025A4  0100               	movlb	0	; () banked
 10263  0025A6  65AC               	cpfsgt	_HighPulseCountCG& (0+255),b
 10264  0025A8  D014               	goto	l4484
 10265  0025AA  0012               	return	
 10266  0025AC                     l4476:
 10267                           
 10268                           ;main.c: 987: BTHighSpeedTickUIG = 0;
 10269  0025AC  0E00               	movlw	0
 10270  0025AE  0100               	movlb	0	; () banked
 10271  0025B0  6F71               	movwf	(_BTHighSpeedTickUIG+1)& (0+255),b
 10272  0025B2  0E00               	movlw	0
 10273  0025B4  6F70               	movwf	_BTHighSpeedTickUIG& (0+255),b
 10274                           
 10275                           ; BSR set to: 0
 10276                           ;main.c: 988: if (HighPulseCountCG == (25 - 1)){
 10277  0025B6  0E18               	movlw	24
 10278  0025B8  0100               	movlb	0	; () banked
 10279  0025BA  19AC               	xorwf	_HighPulseCountCG& (0+255),w,b
 10280  0025BC  A4D8               	btfss	status,2,c
 10281  0025BE  D009               	goto	l4484
 10282                           
 10283                           ; BSR set to: 0
 10284                           ;main.c: 989: WaitTickCount(6);
 10285  0025C0  0E00               	movlw	0
 10286  0025C2  0100               	movlb	0	; () banked
 10287  0025C4  6FC3               	movwf	(WaitTickCount@tickCountUS+1)& (0+255),b
 10288  0025C6  0E06               	movlw	6
 10289  0025C8  6FC2               	movwf	WaitTickCount@tickCountUS& (0+255),b
 10290  0025CA  EC3C  F016         	call	_WaitTickCount	;wreg free
 10291                           
 10292                           ;main.c: 990: TurnSSR1Off();
 10293  0025CE  EC1F  F017         	call	_TurnSSR1Off	;wreg free
 10294  0025D2                     l4484:
 10295  0025D2  EC4D  F014         	call	_ReadMAINS_ZeroCrossing	;wreg free
 10296  0025D6  06E8               	decf	wreg,f,c
 10297  0025D8  B4D8               	btfsc	status,2,c
 10298  0025DA  D7E8               	goto	l4476
 10299                           
 10300                           ;main.c: 991: }
 10301                           ;main.c: 992: }
 10302                           ;main.c: 993: if (BTHighSpeedTickUIG < 160){
 10303  0025DC  0100               	movlb	0	; () banked
 10304  0025DE  5171               	movf	(_BTHighSpeedTickUIG+1)& (0+255),w,b
 10305  0025E0  E112               	bnz	l4494
 10306  0025E2  0EA0               	movlw	160
 10307  0025E4  0100               	movlb	0	; () banked
 10308  0025E6  5D70               	subwf	_BTHighSpeedTickUIG& (0+255),w,b
 10309  0025E8  B0D8               	btfsc	status,0,c
 10310  0025EA  D00D               	goto	l4494
 10311  0025EC                     l4490:
 10312                           
 10313                           ; BSR set to: 0
 10314  0025EC  EC4D  F014         	call	_ReadMAINS_ZeroCrossing	;wreg free
 10315  0025F0  0900               	iorlw	0
 10316  0025F2  A4D8               	btfss	status,2,c
 10317  0025F4  D008               	goto	l4494
 10318  0025F6  0100               	movlb	0	; () banked
 10319  0025F8  5171               	movf	(_BTHighSpeedTickUIG+1)& (0+255),w,b
 10320  0025FA  E105               	bnz	l4494
 10321  0025FC  0EA0               	movlw	160
 10322  0025FE  0100               	movlb	0	; () banked
 10323  002600  5D70               	subwf	_BTHighSpeedTickUIG& (0+255),w,b
 10324  002602  A0D8               	btfss	status,0,c
 10325  002604  D7F3               	goto	l4490
 10326  002606                     l4494:
 10327  002606  0100               	movlb	0	; () banked
 10328  002608  2BAC               	incf	_HighPulseCountCG& (0+255),f,b
 10329  00260A  D7CB               	goto	l4472
 10330  00260C                     __end_of_GenerateMissingPulse:
 10331                           	opt stack 0
 10332                           tblptru	equ	0xFF8
 10333                           tblptrh	equ	0xFF7
 10334                           tblptrl	equ	0xFF6
 10335                           tablat	equ	0xFF5
 10336                           prodh	equ	0xFF4
 10337                           prodl	equ	0xFF3
 10338                           intcon	equ	0xFF2
 10339                           indf0	equ	0xFEF
 10340                           postinc0	equ	0xFEE
 10341                           fsr0h	equ	0xFEA
 10342                           fsr0l	equ	0xFE9
 10343                           wreg	equ	0xFE8
 10344                           indf1	equ	0xFE7
 10345                           postdec1	equ	0xFE5
 10346                           fsr1h	equ	0xFE2
 10347                           fsr1l	equ	0xFE1
 10348                           indf2	equ	0xFDF
 10349                           postinc2	equ	0xFDE
 10350                           postdec2	equ	0xFDD
 10351                           fsr2h	equ	0xFDA
 10352                           fsr2l	equ	0xFD9
 10353                           status	equ	0xFD8
 10354                           
 10355 ;; *************** function _TurnSSR1On *****************
 10356 ;; Defined at:
 10357 ;;		line 1254 in file "Released IBC-1 Code - 03-06-2016/main.c"
 10358 ;; Parameters:    Size  Location     Type
 10359 ;;		None
 10360 ;; Auto vars:     Size  Location     Type
 10361 ;;		None
 10362 ;; Return value:  Size  Location     Type
 10363 ;;                  1    wreg      void 
 10364 ;; Registers used:
 10365 ;;		None
 10366 ;; Tracked objects:
 10367 ;;		On entry : 0/0
 10368 ;;		On exit  : 0/0
 10369 ;;		Unchanged: 0/0
 10370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10371 ;;      Params:         0       0       0       0       0       0       0
 10372 ;;      Locals:         0       0       0       0       0       0       0
 10373 ;;      Temps:          0       0       0       0       0       0       0
 10374 ;;      Totals:         0       0       0       0       0       0       0
 10375 ;;Total ram usage:        0 bytes
 10376 ;; Hardware stack levels used:    1
 10377 ;; Hardware stack levels required when called:    5
 10378 ;; This function calls:
 10379 ;;		Nothing
 10380 ;; This function is called by:
 10381 ;;		_main
 10382 ;;		_GenerateMissingPulse
 10383 ;; This function uses a non-reentrant model
 10384 ;;
 10385                           
 10386                           	psect	text56
 10387  002E3A                     __ptext56:
 10388                           	opt stack 0
 10389  002E3A                     _TurnSSR1On:
 10390                           	opt stack 25
 10391                           
 10392                           ;main.c: 1255: LATBbits.LATB6 = 1;
 10393                           
 10394                           ; BSR set to: 0
 10395                           ;incstack = 0
 10396  002E3A  8C8A               	bsf	3978,6,c	;volatile
 10397  002E3C  0012               	return		;funcret
 10398  002E3E                     __end_of_TurnSSR1On:
 10399                           	opt stack 0
 10400                           tblptru	equ	0xFF8
 10401                           tblptrh	equ	0xFF7
 10402                           tblptrl	equ	0xFF6
 10403                           tablat	equ	0xFF5
 10404                           prodh	equ	0xFF4
 10405                           prodl	equ	0xFF3
 10406                           intcon	equ	0xFF2
 10407                           indf0	equ	0xFEF
 10408                           postinc0	equ	0xFEE
 10409                           fsr0h	equ	0xFEA
 10410                           fsr0l	equ	0xFE9
 10411                           wreg	equ	0xFE8
 10412                           indf1	equ	0xFE7
 10413                           postdec1	equ	0xFE5
 10414                           fsr1h	equ	0xFE2
 10415                           fsr1l	equ	0xFE1
 10416                           indf2	equ	0xFDF
 10417                           postinc2	equ	0xFDE
 10418                           postdec2	equ	0xFDD
 10419                           fsr2h	equ	0xFDA
 10420                           fsr2l	equ	0xFD9
 10421                           status	equ	0xFD8
 10422                           
 10423 ;; *************** function _TurnSSR1Off *****************
 10424 ;; Defined at:
 10425 ;;		line 1258 in file "Released IBC-1 Code - 03-06-2016/main.c"
 10426 ;; Parameters:    Size  Location     Type
 10427 ;;		None
 10428 ;; Auto vars:     Size  Location     Type
 10429 ;;		None
 10430 ;; Return value:  Size  Location     Type
 10431 ;;                  1    wreg      void 
 10432 ;; Registers used:
 10433 ;;		None
 10434 ;; Tracked objects:
 10435 ;;		On entry : 0/0
 10436 ;;		On exit  : 0/0
 10437 ;;		Unchanged: 0/0
 10438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10439 ;;      Params:         0       0       0       0       0       0       0
 10440 ;;      Locals:         0       0       0       0       0       0       0
 10441 ;;      Temps:          0       0       0       0       0       0       0
 10442 ;;      Totals:         0       0       0       0       0       0       0
 10443 ;;Total ram usage:        0 bytes
 10444 ;; Hardware stack levels used:    1
 10445 ;; Hardware stack levels required when called:    5
 10446 ;; This function calls:
 10447 ;;		Nothing
 10448 ;; This function is called by:
 10449 ;;		_main
 10450 ;;		_GenerateMissingPulse
 10451 ;;		_InitSystem
 10452 ;; This function uses a non-reentrant model
 10453 ;;
 10454                           
 10455                           	psect	text57
 10456  002E3E                     __ptext57:
 10457                           	opt stack 0
 10458  002E3E                     _TurnSSR1Off:
 10459                           	opt stack 25
 10460                           
 10461                           ;main.c: 1259: LATBbits.LATB6 = 0;
 10462                           
 10463                           ;incstack = 0
 10464  002E3E  9C8A               	bcf	3978,6,c	;volatile
 10465  002E40  0012               	return		;funcret
 10466  002E42                     __end_of_TurnSSR1Off:
 10467                           	opt stack 0
 10468                           tblptru	equ	0xFF8
 10469                           tblptrh	equ	0xFF7
 10470                           tblptrl	equ	0xFF6
 10471                           tablat	equ	0xFF5
 10472                           prodh	equ	0xFF4
 10473                           prodl	equ	0xFF3
 10474                           intcon	equ	0xFF2
 10475                           indf0	equ	0xFEF
 10476                           postinc0	equ	0xFEE
 10477                           fsr0h	equ	0xFEA
 10478                           fsr0l	equ	0xFE9
 10479                           wreg	equ	0xFE8
 10480                           indf1	equ	0xFE7
 10481                           postdec1	equ	0xFE5
 10482                           fsr1h	equ	0xFE2
 10483                           fsr1l	equ	0xFE1
 10484                           indf2	equ	0xFDF
 10485                           postinc2	equ	0xFDE
 10486                           postdec2	equ	0xFDD
 10487                           fsr2h	equ	0xFDA
 10488                           fsr2l	equ	0xFD9
 10489                           status	equ	0xFD8
 10490                           
 10491 ;; *************** function _ReadMAINS_ZeroCrossing *****************
 10492 ;; Defined at:
 10493 ;;		line 1217 in file "Released IBC-1 Code - 03-06-2016/main.c"
 10494 ;; Parameters:    Size  Location     Type
 10495 ;;		None
 10496 ;; Auto vars:     Size  Location     Type
 10497 ;;  mainsZero_Cr    1    4[BANK0 ] unsigned char 
 10498 ;; Return value:  Size  Location     Type
 10499 ;;                  1    wreg      unsigned char 
 10500 ;; Registers used:
 10501 ;;		wreg, status,2, status,0, cstack
 10502 ;; Tracked objects:
 10503 ;;		On entry : 0/0
 10504 ;;		On exit  : 0/0
 10505 ;;		Unchanged: 0/0
 10506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10507 ;;      Params:         0       0       0       0       0       0       0
 10508 ;;      Locals:         0       1       0       0       0       0       0
 10509 ;;      Temps:          0       2       0       0       0       0       0
 10510 ;;      Totals:         0       3       0       0       0       0       0
 10511 ;;Total ram usage:        3 bytes
 10512 ;; Hardware stack levels used:    1
 10513 ;; Hardware stack levels required when called:    7
 10514 ;; This function calls:
 10515 ;;		_WaitTickCount
 10516 ;; This function is called by:
 10517 ;;		_FIRE
 10518 ;;		_GenerateMissingPulse
 10519 ;;		_ReadFireOut
 10520 ;;		_getKeySwitchState
 10521 ;; This function uses a non-reentrant model
 10522 ;;
 10523                           
 10524                           	psect	text58
 10525  00289A                     __ptext58:
 10526                           	opt stack 0
 10527  00289A                     _ReadMAINS_ZeroCrossing:
 10528                           	opt stack 22
 10529                           
 10530                           ;main.c: 1218: unsigned char mainsZero_CrossingValueUSG2;
 10531                           ;main.c: 1221: mainsZero_CrossingValueUSG = PORTAbits.RA1;;
 10532                           
 10533                           ;incstack = 0
 10534  00289A  A280               	btfss	3968,1,c	;volatile
 10535  00289C  D004               	goto	u2860
 10536  00289E  0100               	movlb	0	; () banked
 10537  0028A0  6BC4               	clrf	??_ReadMAINS_ZeroCrossing& (0+255),b
 10538  0028A2  2BC4               	incf	??_ReadMAINS_ZeroCrossing& (0+255),f,b
 10539  0028A4  D002               	goto	u2868
 10540  0028A6                     u2860:
 10541  0028A6  0100               	movlb	0	; () banked
 10542  0028A8  6BC4               	clrf	??_ReadMAINS_ZeroCrossing& (0+255),b
 10543  0028AA                     u2868:
 10544  0028AA  0100               	movlb	0	; () banked
 10545  0028AC  51C4               	movf	??_ReadMAINS_ZeroCrossing& (0+255),w,b
 10546  0028AE  0100               	movlb	0	; () banked
 10547  0028B0  6FA0               	movwf	_mainsZero_CrossingValueUSG& (0+255),b
 10548  0028B2  6BA1               	clrf	(_mainsZero_CrossingValueUSG+1)& (0+255),b
 10549                           
 10550                           ; BSR set to: 0
 10551                           ;main.c: 1222: WaitTickCount(1);
 10552  0028B4  0E00               	movlw	0
 10553  0028B6  0100               	movlb	0	; () banked
 10554  0028B8  6FC3               	movwf	(WaitTickCount@tickCountUS+1)& (0+255),b
 10555  0028BA  0E01               	movlw	1
 10556  0028BC  6FC2               	movwf	WaitTickCount@tickCountUS& (0+255),b
 10557  0028BE  EC3C  F016         	call	_WaitTickCount	;wreg free
 10558                           
 10559                           ;main.c: 1223: mainsZero_CrossingValueUSG2 = PORTAbits.RA1;;
 10560  0028C2  0E00               	movlw	0
 10561  0028C4  B280               	btfsc	3968,1,c	;volatile
 10562  0028C6  0E01               	movlw	1
 10563  0028C8  0100               	movlb	0	; () banked
 10564  0028CA  6FC6               	movwf	ReadMAINS_ZeroCrossing@mainsZero_CrossingValueUSG2& (0+255),b
 10565                           
 10566                           ; BSR set to: 0
 10567                           ;main.c: 1224: if (mainsZero_CrossingValueUSG == mainsZero_CrossingValueUSG2)
 10568  0028CC  0100               	movlb	0	; () banked
 10569  0028CE  51C6               	movf	ReadMAINS_ZeroCrossing@mainsZero_CrossingValueUSG2& (0+255),w,b
 10570  0028D0  0100               	movlb	0	; () banked
 10571  0028D2  6FC4               	movwf	??_ReadMAINS_ZeroCrossing& (0+255),b
 10572  0028D4  6BC5               	clrf	(??_ReadMAINS_ZeroCrossing+1)& (0+255),b
 10573  0028D6  0100               	movlb	0	; () banked
 10574  0028D8  51A0               	movf	_mainsZero_CrossingValueUSG& (0+255),w,b
 10575  0028DA  0100               	movlb	0	; () banked
 10576  0028DC  19C4               	xorwf	??_ReadMAINS_ZeroCrossing& (0+255),w,b
 10577  0028DE  E109               	bnz	l4088
 10578  0028E0  0100               	movlb	0	; () banked
 10579  0028E2  51A1               	movf	(_mainsZero_CrossingValueUSG+1)& (0+255),w,b
 10580  0028E4  0100               	movlb	0	; () banked
 10581  0028E6  19C5               	xorwf	(??_ReadMAINS_ZeroCrossing+1)& (0+255),w,b
 10582  0028E8  A4D8               	btfss	status,2,c
 10583  0028EA  D003               	goto	l4088
 10584                           
 10585                           ; BSR set to: 0
 10586                           ;main.c: 1225: return mainsZero_CrossingValueUSG;
 10587  0028EC  0100               	movlb	0	; () banked
 10588  0028EE  51A0               	movf	_mainsZero_CrossingValueUSG& (0+255),w,b
 10589                           
 10590                           ; BSR set to: 0
 10591                           
 10592                           ; BSR set to: 0
 10593  0028F0  0012               	return	
 10594  0028F2                     l4088:
 10595                           
 10596                           ; BSR set to: 0
 10597                           ;main.c: 1226: else
 10598                           ;main.c: 1227: return 0;
 10599  0028F2  0E00               	movlw	0
 10600                           
 10601                           ; BSR set to: 0
 10602  0028F4  0012               	return	
 10603  0028F6                     __end_of_ReadMAINS_ZeroCrossing:
 10604                           	opt stack 0
 10605                           tblptru	equ	0xFF8
 10606                           tblptrh	equ	0xFF7
 10607                           tblptrl	equ	0xFF6
 10608                           tablat	equ	0xFF5
 10609                           prodh	equ	0xFF4
 10610                           prodl	equ	0xFF3
 10611                           intcon	equ	0xFF2
 10612                           indf0	equ	0xFEF
 10613                           postinc0	equ	0xFEE
 10614                           fsr0h	equ	0xFEA
 10615                           fsr0l	equ	0xFE9
 10616                           wreg	equ	0xFE8
 10617                           indf1	equ	0xFE7
 10618                           postdec1	equ	0xFE5
 10619                           fsr1h	equ	0xFE2
 10620                           fsr1l	equ	0xFE1
 10621                           indf2	equ	0xFDF
 10622                           postinc2	equ	0xFDE
 10623                           postdec2	equ	0xFDD
 10624                           fsr2h	equ	0xFDA
 10625                           fsr2l	equ	0xFD9
 10626                           status	equ	0xFD8
 10627                           
 10628 ;; *************** function _WaitTickCount *****************
 10629 ;; Defined at:
 10630 ;;		line 1005 in file "Released IBC-1 Code - 03-06-2016/main.c"
 10631 ;; Parameters:    Size  Location     Type
 10632 ;;  tickCountUS     2    0[BANK0 ] unsigned short 
 10633 ;; Auto vars:     Size  Location     Type
 10634 ;;		None
 10635 ;; Return value:  Size  Location     Type
 10636 ;;                  1    wreg      void 
 10637 ;; Registers used:
 10638 ;;		wreg, status,2, status,0, cstack
 10639 ;; Tracked objects:
 10640 ;;		On entry : 0/0
 10641 ;;		On exit  : 0/0
 10642 ;;		Unchanged: 0/0
 10643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10644 ;;      Params:         0       2       0       0       0       0       0
 10645 ;;      Locals:         0       0       0       0       0       0       0
 10646 ;;      Temps:          0       0       0       0       0       0       0
 10647 ;;      Totals:         0       2       0       0       0       0       0
 10648 ;;Total ram usage:        2 bytes
 10649 ;; Hardware stack levels used:    1
 10650 ;; Hardware stack levels required when called:    6
 10651 ;; This function calls:
 10652 ;;		_WaitNewTick
 10653 ;; This function is called by:
 10654 ;;		_WriteConfigST7540
 10655 ;;		_main
 10656 ;;		_GenerateMissingPulse
 10657 ;;		_ReadMAINS_ZeroCrossing
 10658 ;;		_getKeySwitchState
 10659 ;;		_getFireButtonState
 10660 ;;		_getResetButtonState
 10661 ;; This function uses a non-reentrant model
 10662 ;;
 10663                           
 10664                           	psect	text59
 10665  002C78                     __ptext59:
 10666                           	opt stack 0
 10667  002C78                     _WaitTickCount:
 10668                           	opt stack 23
 10669                           
 10670                           ;main.c: 1006: while(tickCountUS--)
 10671                           
 10672                           ; BSR set to: 0
 10673                           ;incstack = 0
 10674  002C78  D002               	goto	l3796
 10675  002C7A                     l3794:
 10676                           
 10677                           ;main.c: 1007: WaitNewTick();
 10678  002C7A  ECE9  F016         	call	_WaitNewTick	;wreg free
 10679  002C7E                     l3796:
 10680  002C7E  0100               	movlb	0	; () banked
 10681  002C80  07C2               	decf	WaitTickCount@tickCountUS& (0+255),f,b
 10682  002C82  A0D8               	btfss	status,0,c
 10683  002C84  07C3               	decf	(WaitTickCount@tickCountUS+1)& (0+255),f,b
 10684  002C86  0100               	movlb	0	; () banked
 10685  002C88  29C2               	incf	WaitTickCount@tickCountUS& (0+255),w,b
 10686  002C8A  E1F7               	bnz	l3794
 10687  002C8C  0100               	movlb	0	; () banked
 10688  002C8E  29C3               	incf	(WaitTickCount@tickCountUS+1)& (0+255),w,b
 10689  002C90  B4D8               	btfsc	status,2,c
 10690  002C92  0012               	return	
 10691  002C94  D7F2               	goto	l3794
 10692  002C96                     __end_of_WaitTickCount:
 10693                           	opt stack 0
 10694                           tblptru	equ	0xFF8
 10695                           tblptrh	equ	0xFF7
 10696                           tblptrl	equ	0xFF6
 10697                           tablat	equ	0xFF5
 10698                           prodh	equ	0xFF4
 10699                           prodl	equ	0xFF3
 10700                           intcon	equ	0xFF2
 10701                           indf0	equ	0xFEF
 10702                           postinc0	equ	0xFEE
 10703                           fsr0h	equ	0xFEA
 10704                           fsr0l	equ	0xFE9
 10705                           wreg	equ	0xFE8
 10706                           indf1	equ	0xFE7
 10707                           postdec1	equ	0xFE5
 10708                           fsr1h	equ	0xFE2
 10709                           fsr1l	equ	0xFE1
 10710                           indf2	equ	0xFDF
 10711                           postinc2	equ	0xFDE
 10712                           postdec2	equ	0xFDD
 10713                           fsr2h	equ	0xFDA
 10714                           fsr2l	equ	0xFD9
 10715                           status	equ	0xFD8
 10716                           
 10717 ;; *************** function _WaitNewTick *****************
 10718 ;; Defined at:
 10719 ;;		line 1000 in file "Released IBC-1 Code - 03-06-2016/main.c"
 10720 ;; Parameters:    Size  Location     Type
 10721 ;;		None
 10722 ;; Auto vars:     Size  Location     Type
 10723 ;;		None
 10724 ;; Return value:  Size  Location     Type
 10725 ;;                  1    wreg      void 
 10726 ;; Registers used:
 10727 ;;		status,2, status,0
 10728 ;; Tracked objects:
 10729 ;;		On entry : 0/0
 10730 ;;		On exit  : 0/0
 10731 ;;		Unchanged: 0/0
 10732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10733 ;;      Params:         0       0       0       0       0       0       0
 10734 ;;      Locals:         0       0       0       0       0       0       0
 10735 ;;      Temps:          0       0       0       0       0       0       0
 10736 ;;      Totals:         0       0       0       0       0       0       0
 10737 ;;Total ram usage:        0 bytes
 10738 ;; Hardware stack levels used:    1
 10739 ;; Hardware stack levels required when called:    5
 10740 ;; This function calls:
 10741 ;;		Nothing
 10742 ;; This function is called by:
 10743 ;;		_WaitTickCount
 10744 ;; This function uses a non-reentrant model
 10745 ;;
 10746                           
 10747                           	psect	text60
 10748  002DD2                     __ptext60:
 10749                           	opt stack 0
 10750  002DD2                     _WaitNewTick:
 10751                           	opt stack 23
 10752  002DD2                     l880:
 10753  002DD2  0100               	movlb	0	; () banked
 10754  002DD4  A1A2               	btfss	_statusFlagsUSG& (0+255),0,b
 10755  002DD6  D7FD               	goto	l880
 10756                           
 10757                           ; BSR set to: 0
 10758                           ;main.c: 1002: statusFlagsUSG &= ~0b0000000000000001;
 10759                           
 10760                           ; BSR set to: 0
 10761  002DD8  0100               	movlb	0	; () banked
 10762  002DDA  91A2               	bcf	_statusFlagsUSG& (0+255),0,b
 10763                           
 10764                           ; BSR set to: 0
 10765  002DDC  0012               	return		;funcret
 10766  002DDE                     __end_of_WaitNewTick:
 10767                           	opt stack 0
 10768                           tblptru	equ	0xFF8
 10769                           tblptrh	equ	0xFF7
 10770                           tblptrl	equ	0xFF6
 10771                           tablat	equ	0xFF5
 10772                           prodh	equ	0xFF4
 10773                           prodl	equ	0xFF3
 10774                           intcon	equ	0xFF2
 10775                           indf0	equ	0xFEF
 10776                           postinc0	equ	0xFEE
 10777                           fsr0h	equ	0xFEA
 10778                           fsr0l	equ	0xFE9
 10779                           wreg	equ	0xFE8
 10780                           indf1	equ	0xFE7
 10781                           postdec1	equ	0xFE5
 10782                           fsr1h	equ	0xFE2
 10783                           fsr1l	equ	0xFE1
 10784                           indf2	equ	0xFDF
 10785                           postinc2	equ	0xFDE
 10786                           postdec2	equ	0xFDD
 10787                           fsr2h	equ	0xFDA
 10788                           fsr2l	equ	0xFD9
 10789                           status	equ	0xFD8
 10790                           
 10791 ;; *************** function _EEPROMSetReset *****************
 10792 ;; Defined at:
 10793 ;;		line 1373 in file "Released IBC-1 Code - 03-06-2016/main.c"
 10794 ;; Parameters:    Size  Location     Type
 10795 ;;		None
 10796 ;; Auto vars:     Size  Location     Type
 10797 ;;  address         2    4[BANK0 ] unsigned int 
 10798 ;; Return value:  Size  Location     Type
 10799 ;;                  1    wreg      void 
 10800 ;; Registers used:
 10801 ;;		wreg, status,2, cstack
 10802 ;; Tracked objects:
 10803 ;;		On entry : 0/0
 10804 ;;		On exit  : 0/0
 10805 ;;		Unchanged: 0/0
 10806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10807 ;;      Params:         0       0       0       0       0       0       0
 10808 ;;      Locals:         0       2       0       0       0       0       0
 10809 ;;      Temps:          0       0       0       0       0       0       0
 10810 ;;      Totals:         0       2       0       0       0       0       0
 10811 ;;Total ram usage:        2 bytes
 10812 ;; Hardware stack levels used:    1
 10813 ;; Hardware stack levels required when called:    6
 10814 ;; This function calls:
 10815 ;;		_Busy_eep
 10816 ;;		_Write_b_eep
 10817 ;; This function is called by:
 10818 ;;		_main
 10819 ;; This function uses a non-reentrant model
 10820 ;;
 10821                           
 10822                           	psect	text61
 10823  002C52                     __ptext61:
 10824                           	opt stack 0
 10825  002C52                     _EEPROMSetReset:
 10826                           	opt stack 24
 10827                           
 10828                           ;main.c: 1374: unsigned int address;
 10829                           ;main.c: 1375: address = 0x0202;
 10830                           
 10831                           ; BSR set to: 0
 10832                           ;incstack = 0
 10833  002C52  0E02               	movlw	2
 10834  002C54  0100               	movlb	0	; () banked
 10835  002C56  6FC7               	movwf	(EEPROMSetReset@address+1)& (0+255),b
 10836  002C58  0E02               	movlw	2
 10837  002C5A  6FC6               	movwf	EEPROMSetReset@address& (0+255),b
 10838                           
 10839                           ; BSR set to: 0
 10840                           ;main.c: 1376: INTCONbits.GIEH = 0;
 10841  002C5C  9EF2               	bcf	intcon,7,c	;volatile
 10842                           
 10843                           ; BSR set to: 0
 10844                           ;main.c: 1377: Write_b_eep (address, 0xAA);
 10845  002C5E  C0C6  F0C2         	movff	EEPROMSetReset@address,Write_b_eep@badd
 10846  002C62  C0C7  F0C3         	movff	EEPROMSetReset@address+1,Write_b_eep@badd+1
 10847  002C66  0EAA               	movlw	170
 10848  002C68  0100               	movlb	0	; () banked
 10849  002C6A  6FC4               	movwf	Write_b_eep@bdat& (0+255),b
 10850  002C6C  EC69  F015         	call	_Write_b_eep	;wreg free
 10851                           
 10852                           ;main.c: 1380: Busy_eep();
 10853  002C70  EC0C  F017         	call	_Busy_eep	;wreg free
 10854                           
 10855                           ;main.c: 1381: INTCONbits.GIEH = 1;
 10856  002C74  8EF2               	bsf	intcon,7,c	;volatile
 10857  002C76  0012               	return		;funcret
 10858  002C78                     __end_of_EEPROMSetReset:
 10859                           	opt stack 0
 10860                           tblptru	equ	0xFF8
 10861                           tblptrh	equ	0xFF7
 10862                           tblptrl	equ	0xFF6
 10863                           tablat	equ	0xFF5
 10864                           prodh	equ	0xFF4
 10865                           prodl	equ	0xFF3
 10866                           intcon	equ	0xFF2
 10867                           indf0	equ	0xFEF
 10868                           postinc0	equ	0xFEE
 10869                           fsr0h	equ	0xFEA
 10870                           fsr0l	equ	0xFE9
 10871                           wreg	equ	0xFE8
 10872                           indf1	equ	0xFE7
 10873                           postdec1	equ	0xFE5
 10874                           fsr1h	equ	0xFE2
 10875                           fsr1l	equ	0xFE1
 10876                           indf2	equ	0xFDF
 10877                           postinc2	equ	0xFDE
 10878                           postdec2	equ	0xFDD
 10879                           fsr2h	equ	0xFDA
 10880                           fsr2l	equ	0xFD9
 10881                           status	equ	0xFD8
 10882                           
 10883 ;; *************** function _Write_b_eep *****************
 10884 ;; Defined at:
 10885 ;;		line 1395 in file "Released IBC-1 Code - 03-06-2016/main.c"
 10886 ;; Parameters:    Size  Location     Type
 10887 ;;  badd            2    0[BANK0 ] unsigned int 
 10888 ;;  bdat            1    2[BANK0 ] unsigned char 
 10889 ;; Auto vars:     Size  Location     Type
 10890 ;;  GIE_BIT_VAL     1    3[BANK0 ] unsigned char 
 10891 ;; Return value:  Size  Location     Type
 10892 ;;                  1    wreg      void 
 10893 ;; Registers used:
 10894 ;;		wreg, status,2
 10895 ;; Tracked objects:
 10896 ;;		On entry : 0/0
 10897 ;;		On exit  : 0/0
 10898 ;;		Unchanged: 0/0
 10899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10900 ;;      Params:         0       3       0       0       0       0       0
 10901 ;;      Locals:         0       1       0       0       0       0       0
 10902 ;;      Temps:          0       0       0       0       0       0       0
 10903 ;;      Totals:         0       4       0       0       0       0       0
 10904 ;;Total ram usage:        4 bytes
 10905 ;; Hardware stack levels used:    1
 10906 ;; Hardware stack levels required when called:    5
 10907 ;; This function calls:
 10908 ;;		Nothing
 10909 ;; This function is called by:
 10910 ;;		_EEPROMClearReset
 10911 ;;		_EEPROMSetReset
 10912 ;;		_EEPROMWrite
 10913 ;; This function uses a non-reentrant model
 10914 ;;
 10915                           
 10916                           	psect	text62
 10917  002AD2                     __ptext62:
 10918                           	opt stack 0
 10919  002AD2                     _Write_b_eep:
 10920                           	opt stack 23
 10921                           
 10922                           ;main.c: 1397: char GIE_BIT_VAL = 0;
 10923                           
 10924                           ;incstack = 0
 10925  002AD2  0E00               	movlw	0
 10926  002AD4  0100               	movlb	0	; () banked
 10927  002AD6  6FC5               	movwf	Write_b_eep@GIE_BIT_VAL& (0+255),b
 10928                           
 10929                           ; BSR set to: 0
 10930                           ;main.c: 1398: EEADR = (badd & 0x0ff);
 10931  002AD8  C0C2  FFA9         	movff	Write_b_eep@badd,4009	;volatile
 10932                           
 10933                           ; BSR set to: 0
 10934                           ;main.c: 1399: EEDATA = bdat;
 10935  002ADC  C0C4  FFA8         	movff	Write_b_eep@bdat,4008	;volatile
 10936                           
 10937                           ; BSR set to: 0
 10938                           ;main.c: 1400: EECON1bits.EEPGD = 0;
 10939  002AE0  9EA6               	bcf	4006,7,c	;volatile
 10940                           
 10941                           ; BSR set to: 0
 10942                           ;main.c: 1401: EECON1bits.CFGS = 0;
 10943  002AE2  9CA6               	bcf	4006,6,c	;volatile
 10944                           
 10945                           ; BSR set to: 0
 10946                           ;main.c: 1402: EECON1bits.WREN = 1;
 10947  002AE4  84A6               	bsf	4006,2,c	;volatile
 10948                           
 10949                           ; BSR set to: 0
 10950                           ;main.c: 1403: GIE_BIT_VAL = INTCONbits.GIE;
 10951  002AE6  0E00               	movlw	0
 10952  002AE8  BEF2               	btfsc	intcon,7,c	;volatile
 10953  002AEA  0E01               	movlw	1
 10954  002AEC  0100               	movlb	0	; () banked
 10955  002AEE  6FC5               	movwf	Write_b_eep@GIE_BIT_VAL& (0+255),b
 10956                           
 10957                           ; BSR set to: 0
 10958                           ;main.c: 1404: INTCONbits.GIE = 0;
 10959  002AF0  9EF2               	bcf	intcon,7,c	;volatile
 10960                           
 10961                           ; BSR set to: 0
 10962                           ;main.c: 1405: EECON2 = 0x55;
 10963  002AF2  0E55               	movlw	85
 10964  002AF4  6EA7               	movwf	4007,c	;volatile
 10965                           
 10966                           ; BSR set to: 0
 10967                           ;main.c: 1406: EECON2 = 0xAA;
 10968  002AF6  0EAA               	movlw	170
 10969  002AF8  6EA7               	movwf	4007,c	;volatile
 10970                           
 10971                           ; BSR set to: 0
 10972                           ;main.c: 1407: EECON1bits.WR = 1;
 10973  002AFA  82A6               	bsf	4006,1,c	;volatile
 10974  002AFC                     l1008:
 10975  002AFC  B2A6               	btfsc	4006,1,c	;volatile
 10976  002AFE  D7FE               	goto	l1008
 10977                           
 10978                           ;main.c: 1409: INTCONbits.GIE = GIE_BIT_VAL;
 10979  002B00  0100               	movlb	0	; () banked
 10980  002B02  B1C5               	btfsc	Write_b_eep@GIE_BIT_VAL& (0+255),0,b
 10981  002B04  D002               	bra	u2895
 10982  002B06  9EF2               	bcf	intcon,7,c	;volatile
 10983  002B08  D001               	bra	u2896
 10984  002B0A                     u2895:
 10985  002B0A  8EF2               	bsf	intcon,7,c	;volatile
 10986  002B0C                     u2896:
 10987                           
 10988                           ;main.c: 1410: EECON1bits.WREN = 0;
 10989  002B0C  94A6               	bcf	4006,2,c	;volatile
 10990  002B0E  0012               	return		;funcret
 10991  002B10                     __end_of_Write_b_eep:
 10992                           	opt stack 0
 10993                           tblptru	equ	0xFF8
 10994                           tblptrh	equ	0xFF7
 10995                           tblptrl	equ	0xFF6
 10996                           tablat	equ	0xFF5
 10997                           prodh	equ	0xFF4
 10998                           prodl	equ	0xFF3
 10999                           intcon	equ	0xFF2
 11000                           indf0	equ	0xFEF
 11001                           postinc0	equ	0xFEE
 11002                           fsr0h	equ	0xFEA
 11003                           fsr0l	equ	0xFE9
 11004                           wreg	equ	0xFE8
 11005                           indf1	equ	0xFE7
 11006                           postdec1	equ	0xFE5
 11007                           fsr1h	equ	0xFE2
 11008                           fsr1l	equ	0xFE1
 11009                           indf2	equ	0xFDF
 11010                           postinc2	equ	0xFDE
 11011                           postdec2	equ	0xFDD
 11012                           fsr2h	equ	0xFDA
 11013                           fsr2l	equ	0xFD9
 11014                           status	equ	0xFD8
 11015                           
 11016 ;; *************** function _Busy_eep *****************
 11017 ;; Defined at:
 11018 ;;		line 1413 in file "Released IBC-1 Code - 03-06-2016/main.c"
 11019 ;; Parameters:    Size  Location     Type
 11020 ;;		None
 11021 ;; Auto vars:     Size  Location     Type
 11022 ;;		None
 11023 ;; Return value:  Size  Location     Type
 11024 ;;                  1    wreg      void 
 11025 ;; Registers used:
 11026 ;;		None
 11027 ;; Tracked objects:
 11028 ;;		On entry : 0/0
 11029 ;;		On exit  : 0/0
 11030 ;;		Unchanged: 0/0
 11031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11032 ;;      Params:         0       0       0       0       0       0       0
 11033 ;;      Locals:         0       0       0       0       0       0       0
 11034 ;;      Temps:          0       0       0       0       0       0       0
 11035 ;;      Totals:         0       0       0       0       0       0       0
 11036 ;;Total ram usage:        0 bytes
 11037 ;; Hardware stack levels used:    1
 11038 ;; Hardware stack levels required when called:    5
 11039 ;; This function calls:
 11040 ;;		Nothing
 11041 ;; This function is called by:
 11042 ;;		_EEPROMClearReset
 11043 ;;		_EEPROMSetReset
 11044 ;;		_EEPROMWrite
 11045 ;; This function uses a non-reentrant model
 11046 ;;
 11047                           
 11048                           	psect	text63
 11049  002E18                     __ptext63:
 11050                           	opt stack 0
 11051  002E18                     _Busy_eep:
 11052                           	opt stack 23
 11053  002E18                     l1014:
 11054  002E18  A2A6               	btfss	4006,1,c	;volatile
 11055  002E1A  0012               	return	
 11056  002E1C  D7FD               	goto	l1014
 11057  002E1E                     __end_of_Busy_eep:
 11058                           	opt stack 0
 11059                           tblptru	equ	0xFF8
 11060                           tblptrh	equ	0xFF7
 11061                           tblptrl	equ	0xFF6
 11062                           tablat	equ	0xFF5
 11063                           prodh	equ	0xFF4
 11064                           prodl	equ	0xFF3
 11065                           intcon	equ	0xFF2
 11066                           indf0	equ	0xFEF
 11067                           postinc0	equ	0xFEE
 11068                           fsr0h	equ	0xFEA
 11069                           fsr0l	equ	0xFE9
 11070                           wreg	equ	0xFE8
 11071                           indf1	equ	0xFE7
 11072                           postdec1	equ	0xFE5
 11073                           fsr1h	equ	0xFE2
 11074                           fsr1l	equ	0xFE1
 11075                           indf2	equ	0xFDF
 11076                           postinc2	equ	0xFDE
 11077                           postdec2	equ	0xFDD
 11078                           fsr2h	equ	0xFDA
 11079                           fsr2l	equ	0xFD9
 11080                           status	equ	0xFD8
 11081                           
 11082 ;; *************** function _DataReadyUART *****************
 11083 ;; Defined at:
 11084 ;;		line 129 in file "Released IBC-1 Code - 03-06-2016/UART.c"
 11085 ;; Parameters:    Size  Location     Type
 11086 ;;		None
 11087 ;; Auto vars:     Size  Location     Type
 11088 ;;		None
 11089 ;; Return value:  Size  Location     Type
 11090 ;;                  1    wreg      unsigned char 
 11091 ;; Registers used:
 11092 ;;		wreg, status,2
 11093 ;; Tracked objects:
 11094 ;;		On entry : 0/0
 11095 ;;		On exit  : 0/0
 11096 ;;		Unchanged: 0/0
 11097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11098 ;;      Params:         0       0       0       0       0       0       0
 11099 ;;      Locals:         0       0       0       0       0       0       0
 11100 ;;      Temps:          0       0       0       0       0       0       0
 11101 ;;      Totals:         0       0       0       0       0       0       0
 11102 ;;Total ram usage:        0 bytes
 11103 ;; Hardware stack levels used:    1
 11104 ;; Hardware stack levels required when called:    5
 11105 ;; This function calls:
 11106 ;;		Nothing
 11107 ;; This function is called by:
 11108 ;;		_main
 11109 ;; This function uses a non-reentrant model
 11110 ;;
 11111                           
 11112                           	psect	text64
 11113  002E42                     __ptext64:
 11114                           	opt stack 0
 11115  002E42                     _DataReadyUART:
 11116                           	opt stack 25
 11117                           
 11118                           ;UART.c: 130: return flagUARTRead;
 11119                           
 11120                           ;incstack = 0
 11121  002E42  505B               	movf	_flagUARTRead,w,c
 11122  002E44  0012               	return	
 11123  002E46                     __end_of_DataReadyUART:
 11124                           	opt stack 0
 11125                           tblptru	equ	0xFF8
 11126                           tblptrh	equ	0xFF7
 11127                           tblptrl	equ	0xFF6
 11128                           tablat	equ	0xFF5
 11129                           prodh	equ	0xFF4
 11130                           prodl	equ	0xFF3
 11131                           intcon	equ	0xFF2
 11132                           indf0	equ	0xFEF
 11133                           postinc0	equ	0xFEE
 11134                           fsr0h	equ	0xFEA
 11135                           fsr0l	equ	0xFE9
 11136                           wreg	equ	0xFE8
 11137                           indf1	equ	0xFE7
 11138                           postdec1	equ	0xFE5
 11139                           fsr1h	equ	0xFE2
 11140                           fsr1l	equ	0xFE1
 11141                           indf2	equ	0xFDF
 11142                           postinc2	equ	0xFDE
 11143                           postdec2	equ	0xFDD
 11144                           fsr2h	equ	0xFDA
 11145                           fsr2l	equ	0xFD9
 11146                           status	equ	0xFD8
 11147                           
 11148 ;; *************** function _ClearDataReady *****************
 11149 ;; Defined at:
 11150 ;;		line 133 in file "Released IBC-1 Code - 03-06-2016/UART.c"
 11151 ;; Parameters:    Size  Location     Type
 11152 ;;		None
 11153 ;; Auto vars:     Size  Location     Type
 11154 ;;		None
 11155 ;; Return value:  Size  Location     Type
 11156 ;;                  1    wreg      void 
 11157 ;; Registers used:
 11158 ;;		wreg, status,2
 11159 ;; Tracked objects:
 11160 ;;		On entry : 0/0
 11161 ;;		On exit  : 0/0
 11162 ;;		Unchanged: 0/0
 11163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11164 ;;      Params:         0       0       0       0       0       0       0
 11165 ;;      Locals:         0       0       0       0       0       0       0
 11166 ;;      Temps:          0       0       0       0       0       0       0
 11167 ;;      Totals:         0       0       0       0       0       0       0
 11168 ;;Total ram usage:        0 bytes
 11169 ;; Hardware stack levels used:    1
 11170 ;; Hardware stack levels required when called:    5
 11171 ;; This function calls:
 11172 ;;		Nothing
 11173 ;; This function is called by:
 11174 ;;		_main
 11175 ;; This function uses a non-reentrant model
 11176 ;;
 11177                           
 11178                           	psect	text65
 11179  002E1E                     __ptext65:
 11180                           	opt stack 0
 11181  002E1E                     _ClearDataReady:
 11182                           	opt stack 25
 11183                           
 11184                           ;UART.c: 134: flagUARTRead = 0;
 11185                           
 11186                           ;incstack = 0
 11187  002E1E  0E00               	movlw	0
 11188  002E20  6E5B               	movwf	_flagUARTRead,c
 11189  002E22  0012               	return		;funcret
 11190  002E24                     __end_of_ClearDataReady:
 11191                           	opt stack 0
 11192                           tblptru	equ	0xFF8
 11193                           tblptrh	equ	0xFF7
 11194                           tblptrl	equ	0xFF6
 11195                           tablat	equ	0xFF5
 11196                           prodh	equ	0xFF4
 11197                           prodl	equ	0xFF3
 11198                           intcon	equ	0xFF2
 11199                           indf0	equ	0xFEF
 11200                           postinc0	equ	0xFEE
 11201                           fsr0h	equ	0xFEA
 11202                           fsr0l	equ	0xFE9
 11203                           wreg	equ	0xFE8
 11204                           indf1	equ	0xFE7
 11205                           postdec1	equ	0xFE5
 11206                           fsr1h	equ	0xFE2
 11207                           fsr1l	equ	0xFE1
 11208                           indf2	equ	0xFDF
 11209                           postinc2	equ	0xFDE
 11210                           postdec2	equ	0xFDD
 11211                           fsr2h	equ	0xFDA
 11212                           fsr2l	equ	0xFD9
 11213                           status	equ	0xFD8
 11214                           
 11215 ;; *************** function _isr *****************
 11216 ;; Defined at:
 11217 ;;		line 228 in file "Released IBC-1 Code - 03-06-2016/main.c"
 11218 ;; Parameters:    Size  Location     Type
 11219 ;;		None
 11220 ;; Auto vars:     Size  Location     Type
 11221 ;;		None
 11222 ;; Return value:  Size  Location     Type
 11223 ;;                  1    wreg      void 
 11224 ;; Registers used:
 11225 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11226 ;; Tracked objects:
 11227 ;;		On entry : 0/0
 11228 ;;		On exit  : 0/0
 11229 ;;		Unchanged: 0/0
 11230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11231 ;;      Params:         0       0       0       0       0       0       0
 11232 ;;      Locals:         0       0       0       0       0       0       0
 11233 ;;      Temps:         14       0       0       0       0       0       0
 11234 ;;      Totals:        14       0       0       0       0       0       0
 11235 ;;Total ram usage:       14 bytes
 11236 ;; Hardware stack levels used:    1
 11237 ;; Hardware stack levels required when called:    4
 11238 ;; This function calls:
 11239 ;;		_DataReadyST7540
 11240 ;;		_PacketReadParamST7540
 11241 ;;		_RXReadyISRHandlerST7540
 11242 ;;		_Receive_ISC_Packet
 11243 ;;		_SPIISRHandlerST7540
 11244 ;;		_Transmit_NULL_Packet
 11245 ;;		_UART_Read
 11246 ;;		_UART_TX_ISRHandler
 11247 ;;		i2_ReceiveNewDataST7540
 11248 ;; This function is called by:
 11249 ;;		Interrupt level 2
 11250 ;; This function uses a non-reentrant model
 11251 ;;
 11252                           
 11253                           	psect	intcode
 11254  000408                     __pintcode:
 11255                           	opt stack 0
 11256  000408                     _isr:
 11257                           	opt stack 21
 11258                           
 11259                           ;incstack = 0
 11260  000408  825E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 11261  00040A  CFFA F030          	movff	pclath,??_isr
 11262  00040E  CFFB F031          	movff	pclatu,??_isr+1
 11263  000412  CFE9 F032          	movff	fsr0l,??_isr+2
 11264  000416  CFEA F033          	movff	fsr0h,??_isr+3
 11265  00041A  CFE1 F034          	movff	fsr1l,??_isr+4
 11266  00041E  CFE2 F035          	movff	fsr1h,??_isr+5
 11267  000422  CFD9 F036          	movff	fsr2l,??_isr+6
 11268  000426  CFDA F037          	movff	fsr2h,??_isr+7
 11269  00042A  CFF3 F038          	movff	prodl,??_isr+8
 11270  00042E  CFF4 F039          	movff	prodh,??_isr+9
 11271  000432  CFF6 F03A          	movff	tblptrl,??_isr+10
 11272  000436  CFF7 F03B          	movff	tblptrh,??_isr+11
 11273  00043A  CFF8 F03C          	movff	tblptru,??_isr+12
 11274  00043E  CFF5 F03D          	movff	tablat,??_isr+13
 11275                           
 11276                           ;main.c: 230: if(PIR1bits.TMR2IF != 0){
 11277  000442  A29E               	btfss	3998,1,c	;volatile
 11278  000444  D0CB               	goto	i2l5568
 11279                           
 11280                           ;main.c: 231: PIR1bits.TMR2IF = 0;
 11281  000446  929E               	bcf	3998,1,c	;volatile
 11282                           
 11283                           ;main.c: 232: statusFlagsUSG |= 0b0000000000000001;
 11284  000448  0100               	movlb	0	; () banked
 11285  00044A  81A2               	bsf	_statusFlagsUSG& (0+255),0,b
 11286                           
 11287                           ; BSR set to: 0
 11288                           ;main.c: 233: UART_TX_ISRHandler();
 11289  00044C  ECD6  F015         	call	_UART_TX_ISRHandler	;wreg free
 11290                           
 11291                           ;main.c: 235: ELT_Counter++;
 11292  000450  0100               	movlb	0	; () banked
 11293  000452  4B7A               	infsnz	_ELT_Counter& (0+255),f,b
 11294  000454  2B7B               	incf	(_ELT_Counter+1)& (0+255),f,b
 11295                           
 11296                           ; BSR set to: 0
 11297                           ;main.c: 237: if (DataReadyST7540()){
 11298  000456  EC12  F017         	call	_DataReadyST7540	;wreg free
 11299  00045A  0900               	iorlw	0
 11300  00045C  B4D8               	btfsc	status,2,c
 11301  00045E  D018               	goto	i2l5496
 11302                           
 11303                           ;main.c: 238: Receive_ISC_Packet();
 11304  000460  EC90  F006         	call	_Receive_ISC_Packet	;wreg free
 11305                           
 11306                           ;main.c: 239: if(PacketReadParamST7540(5) && PacketReadParamST7540(2)==0x0010){
 11307  000464  0E05               	movlw	5
 11308  000466  ECFF  F010         	call	_PacketReadParamST7540
 11309  00046A  5016               	movf	?_PacketReadParamST7540,w,c
 11310  00046C  1017               	iorwf	?_PacketReadParamST7540+1,w,c
 11311  00046E  B4D8               	btfsc	status,2,c
 11312  000470  D00D               	goto	i2l5494
 11313  000472  0E02               	movlw	2
 11314  000474  ECFF  F010         	call	_PacketReadParamST7540
 11315  000478  0E10               	movlw	16
 11316  00047A  1816               	xorwf	?_PacketReadParamST7540,w,c
 11317  00047C  1017               	iorwf	?_PacketReadParamST7540+1,w,c
 11318  00047E  A4D8               	btfss	status,2,c
 11319  000480  D005               	goto	i2l5494
 11320                           
 11321                           ;main.c: 240: IdleTimerUIG = 0;
 11322  000482  0E00               	movlw	0
 11323  000484  0100               	movlb	0	; () banked
 11324  000486  6F8F               	movwf	(_IdleTimerUIG+1)& (0+255),b
 11325  000488  0E00               	movlw	0
 11326  00048A  6F8E               	movwf	_IdleTimerUIG& (0+255),b
 11327  00048C                     i2l5494:
 11328                           
 11329                           ;main.c: 241: }
 11330                           ;main.c: 242: ReceiveNewDataST7540();
 11331  00048C  ECB3  F016         	call	i2_ReceiveNewDataST7540	;wreg free
 11332  000490                     i2l5496:
 11333                           
 11334                           ;main.c: 243: }
 11335                           ;main.c: 244: if (CF_STAUTS_TimerUIG < (20000)){
 11336  000490  0E20               	movlw	32
 11337  000492  0100               	movlb	0	; () banked
 11338  000494  5D74               	subwf	_CF_STAUTS_TimerUIG& (0+255),w,b
 11339  000496  0E4E               	movlw	78
 11340  000498  0100               	movlb	0	; () banked
 11341  00049A  5975               	subwfb	(_CF_STAUTS_TimerUIG+1)& (0+255),w,b
 11342  00049C  B0D8               	btfsc	status,0,c
 11343  00049E  D003               	goto	i2l5500
 11344                           
 11345                           ; BSR set to: 0
 11346                           ;main.c: 245: CF_STAUTS_TimerUIG++;
 11347  0004A0  0100               	movlb	0	; () banked
 11348  0004A2  4B74               	infsnz	_CF_STAUTS_TimerUIG& (0+255),f,b
 11349  0004A4  2B75               	incf	(_CF_STAUTS_TimerUIG+1)& (0+255),f,b
 11350  0004A6                     i2l5500:
 11351                           
 11352                           ; BSR set to: 0
 11353                           ;main.c: 246: }
 11354                           ;main.c: 248: if (DeArmHighTickUIG < 2000){
 11355  0004A6  0ED0               	movlw	208
 11356  0004A8  0100               	movlb	0	; () banked
 11357  0004AA  5D78               	subwf	_DeArmHighTickUIG& (0+255),w,b
 11358  0004AC  0E07               	movlw	7
 11359  0004AE  0100               	movlb	0	; () banked
 11360  0004B0  5979               	subwfb	(_DeArmHighTickUIG+1)& (0+255),w,b
 11361  0004B2  B0D8               	btfsc	status,0,c
 11362  0004B4  D004               	goto	i2l5504
 11363                           
 11364                           ; BSR set to: 0
 11365                           ;main.c: 249: DeArmHighTickUIG++;
 11366  0004B6  0100               	movlb	0	; () banked
 11367  0004B8  4B78               	infsnz	_DeArmHighTickUIG& (0+255),f,b
 11368  0004BA  2B79               	incf	(_DeArmHighTickUIG+1)& (0+255),f,b
 11369                           
 11370                           ;main.c: 250: }
 11371  0004BC  D008               	goto	i2l5508
 11372  0004BE                     i2l5504:
 11373                           
 11374                           ; BSR set to: 0
 11375                           ;main.c: 251: else{
 11376                           ;main.c: 252: DeArmHighTickUIG = 0;
 11377  0004BE  0E00               	movlw	0
 11378  0004C0  0100               	movlb	0	; () banked
 11379  0004C2  6F79               	movwf	(_DeArmHighTickUIG+1)& (0+255),b
 11380  0004C4  0E00               	movlw	0
 11381  0004C6  6F78               	movwf	_DeArmHighTickUIG& (0+255),b
 11382                           
 11383                           ;main.c: 253: if (DeArmTimerEnabled){
 11384  0004C8  5043               	movf	_DeArmTimerEnabled,w,c
 11385  0004CA  A4D8               	btfss	status,2,c
 11386                           
 11387                           ; BSR set to: 0
 11388                           ;main.c: 254: DeArmTickCG++;
 11389  0004CC  2A42               	incf	_DeArmTickCG,f,c
 11390  0004CE                     i2l5508:
 11391                           
 11392                           ; BSR set to: 0
 11393                           ;main.c: 255: }
 11394                           ;main.c: 256: }
 11395                           ;main.c: 257: if (CFLEDFlashTickUIG < 1000)
 11396  0004CE  0EE8               	movlw	232
 11397  0004D0  0100               	movlb	0	; () banked
 11398  0004D2  5D72               	subwf	_CFLEDFlashTickUIG& (0+255),w,b
 11399  0004D4  0E03               	movlw	3
 11400  0004D6  0100               	movlb	0	; () banked
 11401  0004D8  5973               	subwfb	(_CFLEDFlashTickUIG+1)& (0+255),w,b
 11402  0004DA  B0D8               	btfsc	status,0,c
 11403  0004DC  D004               	goto	i2l5512
 11404                           
 11405                           ; BSR set to: 0
 11406                           ;main.c: 258: CFLEDFlashTickUIG++;
 11407  0004DE  0100               	movlb	0	; () banked
 11408  0004E0  4B72               	infsnz	_CFLEDFlashTickUIG& (0+255),f,b
 11409  0004E2  2B73               	incf	(_CFLEDFlashTickUIG+1)& (0+255),f,b
 11410  0004E4  D00F               	goto	i2l616
 11411  0004E6                     i2l5512:
 11412                           
 11413                           ; BSR set to: 0
 11414                           ;main.c: 259: else{
 11415                           ;main.c: 260: CFLEDFlashTickUIG = 0;
 11416  0004E6  0E00               	movlw	0
 11417  0004E8  0100               	movlb	0	; () banked
 11418  0004EA  6F73               	movwf	(_CFLEDFlashTickUIG+1)& (0+255),b
 11419  0004EC  0E00               	movlw	0
 11420  0004EE  6F72               	movwf	_CFLEDFlashTickUIG& (0+255),b
 11421                           
 11422                           ;main.c: 261: if (CFLEDFlashEnable)
 11423  0004F0  5040               	movf	_CFLEDFlashEnable,w,c
 11424  0004F2  B4D8               	btfsc	status,2,c
 11425  0004F4  D007               	goto	i2l616
 11426                           
 11427                           ; BSR set to: 0
 11428                           ;main.c: 262: CFLEDFlashState = !CFLEDFlashState;
 11429  0004F6  5041               	movf	_CFLEDFlashState,w,c
 11430  0004F8  A4D8               	btfss	status,2,c
 11431  0004FA  D002               	goto	i2u434_40
 11432  0004FC  0E01               	movlw	1
 11433  0004FE  D001               	goto	i2u435_40
 11434  000500                     i2u434_40:
 11435  000500  0E00               	movlw	0
 11436  000502                     i2u435_40:
 11437  000502  6E41               	movwf	_CFLEDFlashState,c
 11438  000504                     i2l616:
 11439                           
 11440                           ; BSR set to: 0
 11441                           ;main.c: 263: }
 11442                           ;main.c: 266: if (BTEnabled){
 11443  000504  503E               	movf	_BTEnabled,w,c
 11444  000506  B4D8               	btfsc	status,2,c
 11445  000508  D004               	goto	i2l5518
 11446                           
 11447                           ; BSR set to: 0
 11448                           ;main.c: 267: BTHighSpeedTickUIG++;
 11449  00050A  0100               	movlb	0	; () banked
 11450  00050C  4B70               	infsnz	_BTHighSpeedTickUIG& (0+255),f,b
 11451  00050E  2B71               	incf	(_BTHighSpeedTickUIG+1)& (0+255),f,b
 11452                           
 11453                           ;main.c: 268: }
 11454  000510  D01E               	goto	i2l5530
 11455  000512                     i2l5518:
 11456                           
 11457                           ; BSR set to: 0
 11458                           ;main.c: 269: else{
 11459                           ;main.c: 270: BTHighSpeedTickUIG = 0;
 11460  000512  0E00               	movlw	0
 11461  000514  0100               	movlb	0	; () banked
 11462  000516  6F71               	movwf	(_BTHighSpeedTickUIG+1)& (0+255),b
 11463  000518  0E00               	movlw	0
 11464  00051A  6F70               	movwf	_BTHighSpeedTickUIG& (0+255),b
 11465                           
 11466                           ; BSR set to: 0
 11467                           ;main.c: 272: if (IdleTimerUIG > 2000){
 11468  00051C  0ED1               	movlw	209
 11469  00051E  0100               	movlb	0	; () banked
 11470  000520  5D8E               	subwf	_IdleTimerUIG& (0+255),w,b
 11471  000522  0E07               	movlw	7
 11472  000524  0100               	movlb	0	; () banked
 11473  000526  598F               	subwfb	(_IdleTimerUIG+1)& (0+255),w,b
 11474  000528  A0D8               	btfss	status,0,c
 11475  00052A  D00B               	goto	i2l5528
 11476                           
 11477                           ; BSR set to: 0
 11478                           ;main.c: 274: Transmit_NULL_Packet();
 11479  00052C  EC01  F016         	call	_Transmit_NULL_Packet	;wreg free
 11480                           
 11481                           ;main.c: 275: IdleTimerUIG = 0;
 11482  000530  0E00               	movlw	0
 11483  000532  0100               	movlb	0	; () banked
 11484  000534  6F8F               	movwf	(_IdleTimerUIG+1)& (0+255),b
 11485  000536  0E00               	movlw	0
 11486  000538  6F8E               	movwf	_IdleTimerUIG& (0+255),b
 11487                           
 11488                           ; BSR set to: 0
 11489                           ;main.c: 276: IBC_ComsCrashTimer++;
 11490  00053A  0100               	movlb	0	; () banked
 11491  00053C  4B82               	infsnz	_IBC_ComsCrashTimer& (0+255),f,b
 11492  00053E  2B83               	incf	(_IBC_ComsCrashTimer+1)& (0+255),f,b
 11493                           
 11494                           ;main.c: 277: }
 11495  000540  D003               	goto	i2l621
 11496  000542                     i2l5528:
 11497                           
 11498                           ; BSR set to: 0
 11499                           ;main.c: 278: else
 11500                           ;main.c: 279: IdleTimerUIG++;
 11501  000542  0100               	movlb	0	; () banked
 11502  000544  4B8E               	infsnz	_IdleTimerUIG& (0+255),f,b
 11503  000546  2B8F               	incf	(_IdleTimerUIG+1)& (0+255),f,b
 11504  000548                     i2l621:
 11505                           
 11506                           ; BSR set to: 0
 11507                           ;main.c: 290: CheckISCTimerUIG++;
 11508  000548  0100               	movlb	0	; () banked
 11509  00054A  4B76               	infsnz	_CheckISCTimerUIG& (0+255),f,b
 11510  00054C  2B77               	incf	(_CheckISCTimerUIG+1)& (0+255),f,b
 11511  00054E                     i2l5530:
 11512                           
 11513                           ; BSR set to: 0
 11514                           ;main.c: 291: }
 11515                           ;main.c: 293: if (PATEnabled){
 11516  00054E  504F               	movf	_PATEnabled,w,c
 11517  000550  B4D8               	btfsc	status,2,c
 11518  000552  D012               	goto	i2l5540
 11519                           
 11520                           ; BSR set to: 0
 11521                           ;main.c: 294: if (HighSpeedTickPAUIG < 2000){
 11522  000554  0ED0               	movlw	208
 11523  000556  0100               	movlb	0	; () banked
 11524  000558  5D7C               	subwf	_HighSpeedTickPAUIG& (0+255),w,b
 11525  00055A  0E07               	movlw	7
 11526  00055C  0100               	movlb	0	; () banked
 11527  00055E  597D               	subwfb	(_HighSpeedTickPAUIG+1)& (0+255),w,b
 11528  000560  B0D8               	btfsc	status,0,c
 11529  000562  D004               	goto	i2l5536
 11530                           
 11531                           ; BSR set to: 0
 11532                           ;main.c: 295: HighSpeedTickPAUIG++;
 11533  000564  0100               	movlb	0	; () banked
 11534  000566  4B7C               	infsnz	_HighSpeedTickPAUIG& (0+255),f,b
 11535  000568  2B7D               	incf	(_HighSpeedTickPAUIG+1)& (0+255),f,b
 11536                           
 11537                           ;main.c: 296: }
 11538  00056A  D006               	goto	i2l5540
 11539  00056C                     i2l5536:
 11540                           
 11541                           ; BSR set to: 0
 11542                           ;main.c: 297: else{
 11543                           ;main.c: 298: HighSpeedTickPAUIG = 0;
 11544  00056C  0E00               	movlw	0
 11545  00056E  0100               	movlb	0	; () banked
 11546  000570  6F7D               	movwf	(_HighSpeedTickPAUIG+1)& (0+255),b
 11547  000572  0E00               	movlw	0
 11548  000574  6F7C               	movwf	_HighSpeedTickPAUIG& (0+255),b
 11549                           
 11550                           ; BSR set to: 0
 11551                           ;main.c: 299: LowSpeedTickPATCG++;
 11552  000576  2A4A               	incf	_LowSpeedTickPATCG,f,c
 11553  000578                     i2l5540:
 11554                           
 11555                           ; BSR set to: 0
 11556                           ;main.c: 300: }
 11557                           ;main.c: 301: }
 11558                           ;main.c: 303: if (HighSpeedTickUIG < 2000){
 11559  000578  0ED0               	movlw	208
 11560  00057A  0100               	movlb	0	; () banked
 11561  00057C  5D80               	subwf	_HighSpeedTickUIG& (0+255),w,b
 11562  00057E  0E07               	movlw	7
 11563  000580  0100               	movlb	0	; () banked
 11564  000582  5981               	subwfb	(_HighSpeedTickUIG+1)& (0+255),w,b
 11565  000584  B0D8               	btfsc	status,0,c
 11566  000586  D004               	goto	i2l5544
 11567                           
 11568                           ; BSR set to: 0
 11569                           ;main.c: 304: HighSpeedTickUIG++;
 11570  000588  0100               	movlb	0	; () banked
 11571  00058A  4B80               	infsnz	_HighSpeedTickUIG& (0+255),f,b
 11572  00058C  2B81               	incf	(_HighSpeedTickUIG+1)& (0+255),f,b
 11573                           
 11574                           ;main.c: 305: }
 11575  00058E  D009               	goto	i2l5552
 11576  000590                     i2l5544:
 11577                           
 11578                           ; BSR set to: 0
 11579                           ;main.c: 306: else{
 11580                           ;main.c: 307: HighSpeedTickUIG = 0;
 11581  000590  0E00               	movlw	0
 11582  000592  0100               	movlb	0	; () banked
 11583  000594  6F81               	movwf	(_HighSpeedTickUIG+1)& (0+255),b
 11584  000596  0E00               	movlw	0
 11585  000598  6F80               	movwf	_HighSpeedTickUIG& (0+255),b
 11586                           
 11587                           ; BSR set to: 0
 11588                           ;main.c: 308: LowSpeedTickCG++;
 11589  00059A  2A49               	incf	_LowSpeedTickCG,f,c
 11590                           
 11591                           ; BSR set to: 0
 11592                           ;main.c: 310: if (PBTEnabled){
 11593  00059C  5050               	movf	_PBTEnabled,w,c
 11594  00059E  A4D8               	btfss	status,2,c
 11595                           
 11596                           ; BSR set to: 0
 11597                           ;main.c: 311: LowSpeedTickPBTCG++;
 11598  0005A0  2A4B               	incf	_LowSpeedTickPBTCG,f,c
 11599  0005A2                     i2l5552:
 11600                           
 11601                           ; BSR set to: 0
 11602                           ;main.c: 312: }
 11603                           ;main.c: 315: }
 11604                           ;main.c: 317: if (LowSpeedTickPBTCG >= 60){
 11605  0005A2  0E3B               	movlw	59
 11606  0005A4  644B               	cpfsgt	_LowSpeedTickPBTCG,c
 11607  0005A6  D005               	goto	i2l5556
 11608                           
 11609                           ; BSR set to: 0
 11610                           ;main.c: 318: AlarmStatusUCG = 1;
 11611  0005A8  0E01               	movlw	1
 11612  0005AA  0100               	movlb	0	; () banked
 11613  0005AC  6FA6               	movwf	_AlarmStatusUCG& (0+255),b
 11614                           
 11615                           ;main.c: 319: CFLEDFlashEnable = 1;
 11616  0005AE  0E01               	movlw	1
 11617  0005B0  6E40               	movwf	_CFLEDFlashEnable,c
 11618  0005B2                     i2l5556:
 11619                           
 11620                           ; BSR set to: 0
 11621                           ;main.c: 320: }
 11622                           ;main.c: 321: if (LowSpeedTickPATCG >= 120){
 11623  0005B2  0E77               	movlw	119
 11624  0005B4  644A               	cpfsgt	_LowSpeedTickPATCG,c
 11625  0005B6  D005               	goto	i2l5560
 11626                           
 11627                           ; BSR set to: 0
 11628                           ;main.c: 322: AlarmStatusUCG = 1;
 11629  0005B8  0E01               	movlw	1
 11630  0005BA  0100               	movlb	0	; () banked
 11631  0005BC  6FA6               	movwf	_AlarmStatusUCG& (0+255),b
 11632                           
 11633                           ;main.c: 323: CFLEDFlashEnable = 1;
 11634  0005BE  0E01               	movlw	1
 11635  0005C0  6E40               	movwf	_CFLEDFlashEnable,c
 11636  0005C2                     i2l5560:
 11637                           
 11638                           ; BSR set to: 0
 11639                           ;main.c: 324: }
 11640                           ;main.c: 325: if (DeArmTickCG >= 7){
 11641  0005C2  0E06               	movlw	6
 11642  0005C4  6442               	cpfsgt	_DeArmTickCG,c
 11643  0005C6  D004               	goto	i2l630
 11644                           
 11645                           ; BSR set to: 0
 11646                           ;main.c: 326: ClearToFire = 1;
 11647  0005C8  0E01               	movlw	1
 11648  0005CA  0100               	movlb	0	; () banked
 11649  0005CC  6FA8               	movwf	_ClearToFire& (0+255),b
 11650                           
 11651                           ;main.c: 327: }
 11652  0005CE  D001               	goto	i2l5564
 11653  0005D0                     i2l630:
 11654                           
 11655                           ; BSR set to: 0
 11656                           ;main.c: 328: else
 11657                           ;main.c: 329: __nop();
 11658  0005D0  F000               	nop	
 11659  0005D2                     i2l5564:
 11660                           
 11661                           ;main.c: 331: if (LowSpeedTickCG >= 60)
 11662  0005D2  0E3B               	movlw	59
 11663  0005D4  6449               	cpfsgt	_LowSpeedTickCG,c
 11664  0005D6  D002               	goto	i2l5568
 11665                           
 11666                           ;main.c: 332: LowSpeedTickCG = 0;
 11667  0005D8  0E00               	movlw	0
 11668  0005DA  6E49               	movwf	_LowSpeedTickCG,c
 11669  0005DC                     i2l5568:
 11670                           
 11671                           ;main.c: 333: }
 11672                           ;main.c: 335: if(PIR3bits.SSP2IF){
 11673  0005DC  BEA4               	btfsc	4004,7,c	;volatile
 11674                           
 11675                           ;main.c: 336: SPIISRHandlerST7540();
 11676  0005DE  EC82  F013         	call	_SPIISRHandlerST7540	;wreg free
 11677                           
 11678                           ;main.c: 337: }
 11679                           ;main.c: 338: if (PIR1bits.RC1IF){
 11680  0005E2  AA9E               	btfss	3998,5,c	;volatile
 11681  0005E4  D003               	goto	i2l5578
 11682                           
 11683                           ;main.c: 339: UART_Read();
 11684  0005E6  ECD4  F014         	call	_UART_Read	;wreg free
 11685                           
 11686                           ;main.c: 340: PIR1bits.RC1IF = 0;
 11687  0005EA  9A9E               	bcf	3998,5,c	;volatile
 11688  0005EC                     i2l5578:
 11689                           
 11690                           ;main.c: 341: }
 11691                           ;main.c: 342: if (INTCONbits.RBIF){
 11692  0005EC  A0F2               	btfss	intcon,0,c	;volatile
 11693  0005EE  D003               	goto	i2l636
 11694                           
 11695                           ;main.c: 343: INTCONbits.RBIF = 0;
 11696  0005F0  90F2               	bcf	intcon,0,c	;volatile
 11697                           
 11698                           ;main.c: 344: RXReadyISRHandlerST7540();
 11699  0005F2  ECBC  F016         	call	_RXReadyISRHandlerST7540	;wreg free
 11700  0005F6                     i2l636:
 11701  0005F6  C03D  FFF5         	movff	??_isr+13,tablat
 11702  0005FA  C03C  FFF8         	movff	??_isr+12,tblptru
 11703  0005FE  C03B  FFF7         	movff	??_isr+11,tblptrh
 11704  000602  C03A  FFF6         	movff	??_isr+10,tblptrl
 11705  000606  C039  FFF4         	movff	??_isr+9,prodh
 11706  00060A  C038  FFF3         	movff	??_isr+8,prodl
 11707  00060E  C037  FFDA         	movff	??_isr+7,fsr2h
 11708  000612  C036  FFD9         	movff	??_isr+6,fsr2l
 11709  000616  C035  FFE2         	movff	??_isr+5,fsr1h
 11710  00061A  C034  FFE1         	movff	??_isr+4,fsr1l
 11711  00061E  C033  FFEA         	movff	??_isr+3,fsr0h
 11712  000622  C032  FFE9         	movff	??_isr+2,fsr0l
 11713  000626  C031  FFFB         	movff	??_isr+1,pclatu
 11714  00062A  C030  FFFA         	movff	??_isr,pclath
 11715  00062E  925E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 11716  000630  0011               	retfie		f
 11717  000632                     __end_of_isr:
 11718                           	opt stack 0
 11719                           pclatu	equ	0xFFB
 11720                           pclath	equ	0xFFA
 11721                           tblptru	equ	0xFF8
 11722                           tblptrh	equ	0xFF7
 11723                           tblptrl	equ	0xFF6
 11724                           tablat	equ	0xFF5
 11725                           prodh	equ	0xFF4
 11726                           prodl	equ	0xFF3
 11727                           intcon	equ	0xFF2
 11728                           indf0	equ	0xFEF
 11729                           postinc0	equ	0xFEE
 11730                           fsr0h	equ	0xFEA
 11731                           fsr0l	equ	0xFE9
 11732                           wreg	equ	0xFE8
 11733                           indf1	equ	0xFE7
 11734                           postdec1	equ	0xFE5
 11735                           fsr1h	equ	0xFE2
 11736                           fsr1l	equ	0xFE1
 11737                           indf2	equ	0xFDF
 11738                           postinc2	equ	0xFDE
 11739                           postdec2	equ	0xFDD
 11740                           fsr2h	equ	0xFDA
 11741                           fsr2l	equ	0xFD9
 11742                           status	equ	0xFD8
 11743                           
 11744 ;; *************** function _UART_TX_ISRHandler *****************
 11745 ;; Defined at:
 11746 ;;		line 268 in file "Released IBC-1 Code - 03-06-2016/UART.c"
 11747 ;; Parameters:    Size  Location     Type
 11748 ;;		None
 11749 ;; Auto vars:     Size  Location     Type
 11750 ;;		None
 11751 ;; Return value:  Size  Location     Type
 11752 ;;                  1    wreg      void 
 11753 ;; Registers used:
 11754 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11755 ;; Tracked objects:
 11756 ;;		On entry : 0/0
 11757 ;;		On exit  : 0/0
 11758 ;;		Unchanged: 0/0
 11759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11760 ;;      Params:         0       0       0       0       0       0       0
 11761 ;;      Locals:         0       0       0       0       0       0       0
 11762 ;;      Temps:          0       0       0       0       0       0       0
 11763 ;;      Totals:         0       0       0       0       0       0       0
 11764 ;;Total ram usage:        0 bytes
 11765 ;; Hardware stack levels used:    1
 11766 ;; Hardware stack levels required when called:    1
 11767 ;; This function calls:
 11768 ;;		i2_UART_Write
 11769 ;; This function is called by:
 11770 ;;		_isr
 11771 ;; This function uses a non-reentrant model
 11772 ;;
 11773                           
 11774                           	psect	text67
 11775  002BAC                     __ptext67:
 11776                           	opt stack 0
 11777  002BAC                     _UART_TX_ISRHandler:
 11778                           	opt stack 23
 11779                           
 11780                           ;UART.c: 270: if(flagUART & 1){
 11781                           
 11782                           ;incstack = 0
 11783  002BAC  A05A               	btfss	_flagUART,0,c
 11784  002BAE  0012               	return	
 11785                           
 11786                           ;UART.c: 271: if(PiBufferTXNEXTUCA > PiBufferTXLenUCA){
 11787  002BB0  5052               	movf	_PiBufferTXNEXTUCA,w,c
 11788  002BB2  0100               	movlb	0	; () banked
 11789  002BB4  5DB2               	subwf	_PiBufferTXLenUCA& (0+255),w,b
 11790  002BB6  B0D8               	btfsc	status,0,c
 11791  002BB8  D002               	goto	i2l4806
 11792                           
 11793                           ; BSR set to: 0
 11794                           ;UART.c: 272: flagUART &= ~1;
 11795  002BBA  905A               	bcf	_flagUART,0,c
 11796                           
 11797                           ; BSR set to: 0
 11798                           ;UART.c: 273: return;
 11799  002BBC  0012               	return	
 11800  002BBE                     i2l4806:
 11801                           
 11802                           ; BSR set to: 0
 11803                           ;UART.c: 274: }
 11804                           ;UART.c: 275: UART_Write(TransmitPiBufferCG[PiBufferTXNEXTUCA++]);
 11805  002BBE  5052               	movf	_PiBufferTXNEXTUCA,w,c
 11806  002BC0  0D01               	mullw	1
 11807  002BC2  0E00               	movlw	low _TransmitPiBufferCG
 11808  002BC4  24F3               	addwf	prodl,w,c
 11809  002BC6  6ED9               	movwf	fsr2l,c
 11810  002BC8  0E01               	movlw	high _TransmitPiBufferCG
 11811  002BCA  20F4               	addwfc	prodh,w,c
 11812  002BCC  6EDA               	movwf	fsr2h,c
 11813  002BCE  50DF               	movf	indf2,w,c
 11814  002BD0  ECEF  F016         	call	i2_UART_Write
 11815  002BD4  2A52               	incf	_PiBufferTXNEXTUCA,f,c
 11816  002BD6  0012               	return	
 11817  002BD8                     __end_of_UART_TX_ISRHandler:
 11818                           	opt stack 0
 11819                           pclatu	equ	0xFFB
 11820                           pclath	equ	0xFFA
 11821                           tblptru	equ	0xFF8
 11822                           tblptrh	equ	0xFF7
 11823                           tblptrl	equ	0xFF6
 11824                           tablat	equ	0xFF5
 11825                           prodh	equ	0xFF4
 11826                           prodl	equ	0xFF3
 11827                           intcon	equ	0xFF2
 11828                           indf0	equ	0xFEF
 11829                           postinc0	equ	0xFEE
 11830                           fsr0h	equ	0xFEA
 11831                           fsr0l	equ	0xFE9
 11832                           wreg	equ	0xFE8
 11833                           indf1	equ	0xFE7
 11834                           postdec1	equ	0xFE5
 11835                           fsr1h	equ	0xFE2
 11836                           fsr1l	equ	0xFE1
 11837                           indf2	equ	0xFDF
 11838                           postinc2	equ	0xFDE
 11839                           postdec2	equ	0xFDD
 11840                           fsr2h	equ	0xFDA
 11841                           fsr2l	equ	0xFD9
 11842                           status	equ	0xFD8
 11843                           
 11844 ;; *************** function _UART_Read *****************
 11845 ;; Defined at:
 11846 ;;		line 67 in file "Released IBC-1 Code - 03-06-2016/UART.c"
 11847 ;; Parameters:    Size  Location     Type
 11848 ;;		None
 11849 ;; Auto vars:     Size  Location     Type
 11850 ;;  charRS232       1    0[COMRAM] unsigned char 
 11851 ;; Return value:  Size  Location     Type
 11852 ;;                  1    wreg      unsigned char 
 11853 ;; Registers used:
 11854 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11855 ;; Tracked objects:
 11856 ;;		On entry : 0/0
 11857 ;;		On exit  : 0/0
 11858 ;;		Unchanged: 0/0
 11859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11860 ;;      Params:         0       0       0       0       0       0       0
 11861 ;;      Locals:         1       0       0       0       0       0       0
 11862 ;;      Temps:          0       0       0       0       0       0       0
 11863 ;;      Totals:         1       0       0       0       0       0       0
 11864 ;;Total ram usage:        1 bytes
 11865 ;; Hardware stack levels used:    1
 11866 ;; This function calls:
 11867 ;;		Nothing
 11868 ;; This function is called by:
 11869 ;;		_isr
 11870 ;; This function uses a non-reentrant model
 11871 ;;
 11872                           
 11873                           	psect	text68
 11874  0029A8                     __ptext68:
 11875                           	opt stack 0
 11876  0029A8                     _UART_Read:
 11877                           	opt stack 24
 11878                           
 11879                           ;UART.c: 69: char charRS232;
 11880                           ;UART.c: 70: charRS232 = RCREG1;
 11881                           
 11882                           ;incstack = 0
 11883  0029A8  CFAE F001          	movff	4014,UART_Read@charRS232	;volatile
 11884                           
 11885                           ;UART.c: 71: if((7 - 1) == PiBufferRXNEXTUCA){
 11886  0029AC  0E06               	movlw	6
 11887  0029AE  1851               	xorwf	_PiBufferRXNEXTUCA,w,c
 11888  0029B0  A4D8               	btfss	status,2,c
 11889  0029B2  D00F               	goto	i2l4776
 11890                           
 11891                           ;UART.c: 73: flagUARTRead = 1;
 11892  0029B4  0E01               	movlw	1
 11893  0029B6  6E5B               	movwf	_flagUARTRead,c
 11894                           
 11895                           ;UART.c: 74: ReceivedPiBufferCG[PiBufferRXNEXTUCA] = charRS232;
 11896  0029B8  5051               	movf	_PiBufferRXNEXTUCA,w,c
 11897  0029BA  0D01               	mullw	1
 11898  0029BC  0EB9               	movlw	low _ReceivedPiBufferCG
 11899  0029BE  24F3               	addwf	prodl,w,c
 11900  0029C0  6ED9               	movwf	fsr2l,c
 11901  0029C2  0E00               	movlw	high _ReceivedPiBufferCG
 11902  0029C4  20F4               	addwfc	prodh,w,c
 11903  0029C6  6EDA               	movwf	fsr2h,c
 11904  0029C8  C001  FFDF         	movff	UART_Read@charRS232,indf2
 11905                           
 11906                           ;UART.c: 75: PiBufferRXNEXTUCA = 0;
 11907  0029CC  0E00               	movlw	0
 11908  0029CE  6E51               	movwf	_PiBufferRXNEXTUCA,c
 11909                           
 11910                           ;UART.c: 77: }
 11911                           
 11912                           ;UART.c: 76: return;
 11913  0029D0  0012               	return	
 11914  0029D2                     i2l4776:
 11915                           
 11916                           ;UART.c: 78: else if (PiBufferRXNEXTUCA > 7 || flagUARTRead == 1){
 11917  0029D2  0E08               	movlw	8
 11918  0029D4  6051               	cpfslt	_PiBufferRXNEXTUCA,c
 11919  0029D6  D003               	goto	i2l4780
 11920  0029D8  045B               	decf	_flagUARTRead,w,c
 11921  0029DA  A4D8               	btfss	status,2,c
 11922  0029DC  D003               	goto	i2l4782
 11923  0029DE                     i2l4780:
 11924                           
 11925                           ;UART.c: 79: PiBufferRXNEXTUCA = 0;
 11926  0029DE  0E00               	movlw	0
 11927  0029E0  6E51               	movwf	_PiBufferRXNEXTUCA,c
 11928                           
 11929                           ;UART.c: 80: }
 11930  0029E2  0012               	return	
 11931  0029E4                     i2l4782:
 11932                           
 11933                           ;UART.c: 81: else{
 11934                           ;UART.c: 82: flagUARTRead = 0;
 11935  0029E4  0E00               	movlw	0
 11936  0029E6  6E5B               	movwf	_flagUARTRead,c
 11937                           
 11938                           ;UART.c: 83: ReceivedPiBufferCG[PiBufferRXNEXTUCA] = charRS232;
 11939  0029E8  5051               	movf	_PiBufferRXNEXTUCA,w,c
 11940  0029EA  0D01               	mullw	1
 11941  0029EC  0EB9               	movlw	low _ReceivedPiBufferCG
 11942  0029EE  24F3               	addwf	prodl,w,c
 11943  0029F0  6ED9               	movwf	fsr2l,c
 11944  0029F2  0E00               	movlw	high _ReceivedPiBufferCG
 11945  0029F4  20F4               	addwfc	prodh,w,c
 11946  0029F6  6EDA               	movwf	fsr2h,c
 11947  0029F8  C001  FFDF         	movff	UART_Read@charRS232,indf2
 11948                           
 11949                           ;UART.c: 84: PiBufferRXNEXTUCA++;
 11950  0029FC  2A51               	incf	_PiBufferRXNEXTUCA,f,c
 11951                           
 11952                           ;UART.c: 85: return;
 11953  0029FE  0012               	return	
 11954  002A00                     __end_of_UART_Read:
 11955                           	opt stack 0
 11956                           pclatu	equ	0xFFB
 11957                           pclath	equ	0xFFA
 11958                           tblptru	equ	0xFF8
 11959                           tblptrh	equ	0xFF7
 11960                           tblptrl	equ	0xFF6
 11961                           tablat	equ	0xFF5
 11962                           prodh	equ	0xFF4
 11963                           prodl	equ	0xFF3
 11964                           intcon	equ	0xFF2
 11965                           indf0	equ	0xFEF
 11966                           postinc0	equ	0xFEE
 11967                           fsr0h	equ	0xFEA
 11968                           fsr0l	equ	0xFE9
 11969                           wreg	equ	0xFE8
 11970                           indf1	equ	0xFE7
 11971                           postdec1	equ	0xFE5
 11972                           fsr1h	equ	0xFE2
 11973                           fsr1l	equ	0xFE1
 11974                           indf2	equ	0xFDF
 11975                           postinc2	equ	0xFDE
 11976                           postdec2	equ	0xFDD
 11977                           fsr2h	equ	0xFDA
 11978                           fsr2l	equ	0xFD9
 11979                           status	equ	0xFD8
 11980                           
 11981 ;; *************** function _Transmit_NULL_Packet *****************
 11982 ;; Defined at:
 11983 ;;		line 720 in file "Released IBC-1 Code - 03-06-2016/main.c"
 11984 ;; Parameters:    Size  Location     Type
 11985 ;;		None
 11986 ;; Auto vars:     Size  Location     Type
 11987 ;;		None
 11988 ;; Return value:  Size  Location     Type
 11989 ;;                  1    wreg      void 
 11990 ;; Registers used:
 11991 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11992 ;; Tracked objects:
 11993 ;;		On entry : 0/0
 11994 ;;		On exit  : 0/0
 11995 ;;		Unchanged: 0/0
 11996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11997 ;;      Params:         0       0       0       0       0       0       0
 11998 ;;      Locals:         0       0       0       0       0       0       0
 11999 ;;      Temps:          0       0       0       0       0       0       0
 12000 ;;      Totals:         0       0       0       0       0       0       0
 12001 ;;Total ram usage:        0 bytes
 12002 ;; Hardware stack levels used:    1
 12003 ;; Hardware stack levels required when called:    2
 12004 ;; This function calls:
 12005 ;;		i2_CreateMessageST7540
 12006 ;; This function is called by:
 12007 ;;		_isr
 12008 ;; This function uses a non-reentrant model
 12009 ;;
 12010                           
 12011                           	psect	text69
 12012  002C02                     __ptext69:
 12013                           	opt stack 0
 12014  002C02                     _Transmit_NULL_Packet:
 12015                           	opt stack 22
 12016                           
 12017                           ;main.c: 721: CreateMessageST7540(0x0010, 0x3FFF, 0b00101001, 0, "");
 12018                           
 12019                           ;incstack = 0
 12020  002C02  0E00               	movlw	0
 12021  002C04  6E1E               	movwf	i2CreateMessageST7540@packetSourceUS+1,c
 12022  002C06  0E10               	movlw	16
 12023  002C08  6E1D               	movwf	i2CreateMessageST7540@packetSourceUS,c
 12024  002C0A  0E3F               	movlw	63
 12025  002C0C  6E20               	movwf	i2CreateMessageST7540@packetDestUS+1,c
 12026  002C0E  681F               	setf	i2CreateMessageST7540@packetDestUS,c
 12027  002C10  0E29               	movlw	41
 12028  002C12  6E21               	movwf	i2CreateMessageST7540@commandUC,c
 12029  002C14  0E00               	movlw	0
 12030  002C16  6E22               	movwf	i2CreateMessageST7540@dataLenUC,c
 12031  002C18  0E37               	movlw	low STR_1
 12032  002C1A  6E23               	movwf	i2CreateMessageST7540@dataBuf,c
 12033  002C1C  0E06               	movlw	high STR_1
 12034  002C1E  6E24               	movwf	i2CreateMessageST7540@dataBuf+1,c
 12035  002C20  EC39  F00E         	call	i2_CreateMessageST7540	;wreg free
 12036                           
 12037                           ;main.c: 722: ISC_Transmit_Packet_Ready = 1;
 12038  002C24  0E01               	movlw	1
 12039  002C26  0100               	movlb	0	; () banked
 12040  002C28  6FAE               	movwf	_ISC_Transmit_Packet_Ready& (0+255),b
 12041                           
 12042                           ; BSR set to: 0
 12043  002C2A  0012               	return		;funcret
 12044  002C2C                     __end_of_Transmit_NULL_Packet:
 12045                           	opt stack 0
 12046                           pclatu	equ	0xFFB
 12047                           pclath	equ	0xFFA
 12048                           tblptru	equ	0xFF8
 12049                           tblptrh	equ	0xFF7
 12050                           tblptrl	equ	0xFF6
 12051                           tablat	equ	0xFF5
 12052                           prodh	equ	0xFF4
 12053                           prodl	equ	0xFF3
 12054                           intcon	equ	0xFF2
 12055                           indf0	equ	0xFEF
 12056                           postinc0	equ	0xFEE
 12057                           fsr0h	equ	0xFEA
 12058                           fsr0l	equ	0xFE9
 12059                           wreg	equ	0xFE8
 12060                           indf1	equ	0xFE7
 12061                           postdec1	equ	0xFE5
 12062                           fsr1h	equ	0xFE2
 12063                           fsr1l	equ	0xFE1
 12064                           indf2	equ	0xFDF
 12065                           postinc2	equ	0xFDE
 12066                           postdec2	equ	0xFDD
 12067                           fsr2h	equ	0xFDA
 12068                           fsr2l	equ	0xFD9
 12069                           status	equ	0xFD8
 12070                           
 12071 ;; *************** function _SPIISRHandlerST7540 *****************
 12072 ;; Defined at:
 12073 ;;		line 165 in file "Released IBC-1 Code - 03-06-2016/ST7540.c"
 12074 ;; Parameters:    Size  Location     Type
 12075 ;;		None
 12076 ;; Auto vars:     Size  Location     Type
 12077 ;;  dataReadUC      1    0[COMRAM] unsigned char 
 12078 ;; Return value:  Size  Location     Type
 12079 ;;                  1    wreg      void 
 12080 ;; Registers used:
 12081 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12082 ;; Tracked objects:
 12083 ;;		On entry : 0/0
 12084 ;;		On exit  : 0/0
 12085 ;;		Unchanged: 0/0
 12086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12087 ;;      Params:         0       0       0       0       0       0       0
 12088 ;;      Locals:         1       0       0       0       0       0       0
 12089 ;;      Temps:          0       0       0       0       0       0       0
 12090 ;;      Totals:         1       0       0       0       0       0       0
 12091 ;;Total ram usage:        1 bytes
 12092 ;; Hardware stack levels used:    1
 12093 ;; This function calls:
 12094 ;;		Nothing
 12095 ;; This function is called by:
 12096 ;;		_isr
 12097 ;; This function uses a non-reentrant model
 12098 ;;
 12099                           
 12100                           	psect	text70
 12101  002704                     __ptext70:
 12102                           	opt stack 0
 12103  002704                     _SPIISRHandlerST7540:
 12104                           	opt stack 24
 12105                           
 12106                           ;ST7540.c: 166: unsigned char dataReadUC;
 12107                           ;ST7540.c: 168: if(!PIE3bits.SSP2IE){
 12108                           
 12109                           ; BSR set to: 0
 12110                           ;incstack = 0
 12111  002704  BEA3               	btfsc	4003,7,c	;volatile
 12112  002706  D002               	goto	i2l87
 12113                           
 12114                           ;ST7540.c: 169: PIR3bits.SSP2IF = 0;
 12115  002708  9EA4               	bcf	4004,7,c	;volatile
 12116                           
 12117                           ;ST7540.c: 170: return;
 12118  00270A  0012               	return	
 12119  00270C                     i2l87:
 12120                           
 12121                           ;ST7540.c: 171: }
 12122                           ;ST7540.c: 173: dataReadUC = SSP2BUF;
 12123  00270C  CF6F F001          	movff	3951,SPIISRHandlerST7540@dataReadUC	;volatile
 12124                           
 12125                           ;ST7540.c: 174: SSP2BUF = 0;
 12126  002710  0E00               	movlw	0
 12127  002712  6E6F               	movwf	3951,c	;volatile
 12128                           
 12129                           ;ST7540.c: 176: if(flagST7540 & 1){
 12130  002714  A059               	btfss	_flagST7540,0,c
 12131  002716  D015               	goto	i2l89
 12132                           
 12133                           ;ST7540.c: 177: if(bufferTXNextUCA > bufferTXLenUCA){
 12134  002718  5058               	movf	_bufferTXNextUCA,w,c
 12135  00271A  5C57               	subwf	_bufferTXLenUCA,w,c
 12136  00271C  B0D8               	btfsc	status,0,c
 12137  00271E  D005               	goto	i2l4732
 12138                           
 12139                           ;ST7540.c: 178: flagST7540 &= ~1;
 12140  002720  9059               	bcf	_flagST7540,0,c
 12141                           
 12142                           ;ST7540.c: 179: SSP2CON1bits.SSPEN = 0;
 12143  002722  9A6C               	bcf	3948,5,c	;volatile
 12144                           
 12145                           ;ST7540.c: 180: PIR3bits.SSP2IF = 0;
 12146  002724  9EA4               	bcf	4004,7,c	;volatile
 12147                           
 12148                           ;ST7540.c: 181: LATCbits.LATC5 = 1;
 12149  002726  8A8B               	bsf	3979,5,c	;volatile
 12150                           
 12151                           ;ST7540.c: 182: return;
 12152  002728  0012               	return	
 12153  00272A                     i2l4732:
 12154                           
 12155                           ;ST7540.c: 183: }
 12156                           ;ST7540.c: 184: SSP2BUF = bufferTXST7540UCA[bufferTXNextUCA++];
 12157  00272A  5058               	movf	_bufferTXNextUCA,w,c
 12158  00272C  0D01               	mullw	1
 12159  00272E  0E50               	movlw	low _bufferTXST7540UCA
 12160  002730  24F3               	addwf	prodl,w,c
 12161  002732  6ED9               	movwf	fsr2l,c
 12162  002734  0E01               	movlw	high _bufferTXST7540UCA
 12163  002736  20F4               	addwfc	prodh,w,c
 12164  002738  6EDA               	movwf	fsr2h,c
 12165  00273A  50DF               	movf	indf2,w,c
 12166  00273C  6E6F               	movwf	3951,c	;volatile
 12167  00273E  2A58               	incf	_bufferTXNextUCA,f,c
 12168                           
 12169                           ;ST7540.c: 185: }else if(flagST7540 & 2){
 12170  002740  D017               	goto	i2l91
 12171  002742                     i2l89:
 12172  002742  A259               	btfss	_flagST7540,1,c
 12173  002744  D015               	goto	i2l91
 12174                           
 12175                           ;ST7540.c: 186: bufferRXST7540UCA[bufferRXNextUCA++] = dataReadUC;
 12176  002746  5056               	movf	_bufferRXNextUCA,w,c
 12177  002748  0D01               	mullw	1
 12178  00274A  0E9F               	movlw	low _bufferRXST7540UCA
 12179  00274C  24F3               	addwf	prodl,w,c
 12180  00274E  6ED9               	movwf	fsr2l,c
 12181  002750  0E01               	movlw	high _bufferRXST7540UCA
 12182  002752  20F4               	addwfc	prodh,w,c
 12183  002754  6EDA               	movwf	fsr2h,c
 12184  002756  C001  FFDF         	movff	SPIISRHandlerST7540@dataReadUC,indf2
 12185  00275A  2A56               	incf	_bufferRXNextUCA,f,c
 12186                           
 12187                           ;ST7540.c: 187: if(bufferRXST7540UCA[0] == bufferRXNextUCA){
 12188  00275C  5056               	movf	_bufferRXNextUCA,w,c
 12189  00275E  0101               	movlb	1	; () banked
 12190  002760  199F               	xorwf	_bufferRXST7540UCA& (0+255),w,b
 12191  002762  A4D8               	btfss	status,2,c
 12192  002764  D005               	goto	i2l91
 12193                           
 12194                           ; BSR set to: 1
 12195                           ;ST7540.c: 188: flagST7540 |= 4;
 12196  002766  8459               	bsf	_flagST7540,2,c
 12197                           
 12198                           ;ST7540.c: 189: flagST7540 &= ~2;
 12199  002768  9259               	bcf	_flagST7540,1,c
 12200                           
 12201                           ; BSR set to: 1
 12202                           ;ST7540.c: 190: SSP2CON1bits.SSPEN = 0;
 12203  00276A  9A6C               	bcf	3948,5,c	;volatile
 12204                           
 12205                           ; BSR set to: 1
 12206                           ;ST7540.c: 191: PIR3bits.SSP2IF = 0;
 12207  00276C  9EA4               	bcf	4004,7,c	;volatile
 12208                           
 12209                           ; BSR set to: 1
 12210                           ;ST7540.c: 192: return;
 12211  00276E  0012               	return	
 12212  002770                     i2l91:
 12213                           
 12214                           ;ST7540.c: 193: }
 12215                           ;ST7540.c: 194: }
 12216                           ;ST7540.c: 195: PIR3bits.SSP2IF = 0;
 12217  002770  9EA4               	bcf	4004,7,c	;volatile
 12218  002772  0012               	return		;funcret
 12219  002774                     __end_of_SPIISRHandlerST7540:
 12220                           	opt stack 0
 12221                           pclatu	equ	0xFFB
 12222                           pclath	equ	0xFFA
 12223                           tblptru	equ	0xFF8
 12224                           tblptrh	equ	0xFF7
 12225                           tblptrl	equ	0xFF6
 12226                           tablat	equ	0xFF5
 12227                           prodh	equ	0xFF4
 12228                           prodl	equ	0xFF3
 12229                           intcon	equ	0xFF2
 12230                           indf0	equ	0xFEF
 12231                           postinc0	equ	0xFEE
 12232                           fsr0h	equ	0xFEA
 12233                           fsr0l	equ	0xFE9
 12234                           wreg	equ	0xFE8
 12235                           indf1	equ	0xFE7
 12236                           postdec1	equ	0xFE5
 12237                           fsr1h	equ	0xFE2
 12238                           fsr1l	equ	0xFE1
 12239                           indf2	equ	0xFDF
 12240                           postinc2	equ	0xFDE
 12241                           postdec2	equ	0xFDD
 12242                           fsr2h	equ	0xFDA
 12243                           fsr2l	equ	0xFD9
 12244                           status	equ	0xFD8
 12245                           
 12246 ;; *************** function _Receive_ISC_Packet *****************
 12247 ;; Defined at:
 12248 ;;		line 547 in file "Released IBC-1 Code - 03-06-2016/main.c"
 12249 ;; Parameters:    Size  Location     Type
 12250 ;;		None
 12251 ;; Auto vars:     Size  Location     Type
 12252 ;;  tempIscSeria    2   45[COMRAM] unsigned short 
 12253 ;; Return value:  Size  Location     Type
 12254 ;;                  1    wreg      void 
 12255 ;; Registers used:
 12256 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12257 ;; Tracked objects:
 12258 ;;		On entry : 0/0
 12259 ;;		On exit  : 0/0
 12260 ;;		Unchanged: 0/0
 12261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12262 ;;      Params:         0       0       0       0       0       0       0
 12263 ;;      Locals:         2       0       0       0       0       0       0
 12264 ;;      Temps:          2       0       0       0       0       0       0
 12265 ;;      Totals:         4       0       0       0       0       0       0
 12266 ;;Total ram usage:        4 bytes
 12267 ;; Hardware stack levels used:    1
 12268 ;; Hardware stack levels required when called:    3
 12269 ;; This function calls:
 12270 ;;		_PacketDataST7540
 12271 ;;		_PacketReadParamST7540
 12272 ;;		i2_CheckBroadcastPacket
 12273 ;;		i2_CreateMessageST7540
 12274 ;;		i2_CreateMessageUART
 12275 ;;		i2_ReceiveNewDataST7540
 12276 ;;		i2_SendUARTPacket
 12277 ;; This function is called by:
 12278 ;;		_isr
 12279 ;; This function uses a non-reentrant model
 12280 ;;
 12281                           
 12282                           	psect	text71
 12283  000D20                     __ptext71:
 12284                           	opt stack 0
 12285  000D20                     _Receive_ISC_Packet:
 12286                           	opt stack 21
 12287                           
 12288                           ;main.c: 548: unsigned short tempIscSerial = PacketReadParamST7540(1);
 12289                           
 12290                           ;incstack = 0
 12291  000D20  0E01               	movlw	1
 12292  000D22  ECFF  F010         	call	_PacketReadParamST7540
 12293  000D26  C016  F02E         	movff	?_PacketReadParamST7540,Receive_ISC_Packet@tempIscSerial
 12294  000D2A  C017  F02F         	movff	?_PacketReadParamST7540+1,Receive_ISC_Packet@tempIscSerial+1
 12295                           
 12296                           ;main.c: 549: LATCbits.LATC0 = !LATCbits.LATC0;
 12297  000D2E  B08B               	btfsc	3979,0,c	;volatile
 12298  000D30  D003               	goto	i2u374_40
 12299  000D32  6A2C               	clrf	??_Receive_ISC_Packet& (0+255),c
 12300  000D34  2A2C               	incf	??_Receive_ISC_Packet& (0+255),f,c
 12301  000D36  D001               	goto	i2u375_48
 12302  000D38                     i2u374_40:
 12303  000D38  6A2C               	clrf	??_Receive_ISC_Packet& (0+255),c
 12304  000D3A                     i2u375_48:
 12305  000D3A  508B               	movf	3979,w,c	;volatile
 12306  000D3C  182C               	xorwf	??_Receive_ISC_Packet,w,c
 12307  000D3E  0BFE               	andlw	-2
 12308  000D40  182C               	xorwf	??_Receive_ISC_Packet,w,c
 12309  000D42  6E8B               	movwf	3979,c	;volatile
 12310                           
 12311                           ;main.c: 550: if(PacketReadParamST7540(5) && PacketReadParamST7540(2)==0x0010){
 12312  000D44  0E05               	movlw	5
 12313  000D46  ECFF  F010         	call	_PacketReadParamST7540
 12314  000D4A  5016               	movf	?_PacketReadParamST7540,w,c
 12315  000D4C  1017               	iorwf	?_PacketReadParamST7540+1,w,c
 12316  000D4E  B4D8               	btfsc	status,2,c
 12317  000D50  0012               	return	
 12318  000D52  0E02               	movlw	2
 12319  000D54  ECFF  F010         	call	_PacketReadParamST7540
 12320  000D58  0E10               	movlw	16
 12321  000D5A  1816               	xorwf	?_PacketReadParamST7540,w,c
 12322  000D5C  1017               	iorwf	?_PacketReadParamST7540+1,w,c
 12323  000D5E  A4D8               	btfss	status,2,c
 12324  000D60  0012               	return	
 12325                           
 12326                           ;main.c: 551: ReceiveNewDataST7540();
 12327  000D62  ECB3  F016         	call	i2_ReceiveNewDataST7540	;wreg free
 12328                           
 12329                           ;main.c: 552: CheckBroadcastPacket(PacketReadParamST7540(4));
 12330  000D66  0E04               	movlw	4
 12331  000D68  ECFF  F010         	call	_PacketReadParamST7540
 12332  000D6C  5016               	movf	?_PacketReadParamST7540,w,c
 12333  000D6E  ECFF  F016         	call	i2_CheckBroadcastPacket
 12334                           
 12335                           ;main.c: 553: if (BroadcastCheckUC == 0){
 12336  000D72  503F               	movf	_BroadcastCheckUC,w,c
 12337  000D74  B4D8               	btfsc	status,2,c
 12338  000D76  D0FA               	goto	i2l4886
 12339  000D78  D117               	goto	i2l4888
 12340  000D7A                     i2l4826:
 12341                           
 12342                           ;main.c: 557: CreateMessageUART(PacketReadParamST7540(1), 0b00000010, PacketReadParamST7
      +                          540(0), PacketDataST7540());
 12343  000D7A  0E01               	movlw	1
 12344  000D7C  ECFF  F010         	call	_PacketReadParamST7540
 12345  000D80  C016  F01D         	movff	?_PacketReadParamST7540,i2CreateMessageUART@packetSourceUS
 12346  000D84  C017  F01E         	movff	?_PacketReadParamST7540+1,i2CreateMessageUART@packetSourceUS+1
 12347  000D88  0E02               	movlw	2
 12348  000D8A  6E1F               	movwf	i2CreateMessageUART@commandUC,c
 12349  000D8C  0E00               	movlw	0
 12350  000D8E  ECFF  F010         	call	_PacketReadParamST7540
 12351  000D92  5016               	movf	?_PacketReadParamST7540,w,c
 12352  000D94  6E20               	movwf	i2CreateMessageUART@dataLenUC,c
 12353  000D96  EC04  F017         	call	_PacketDataST7540	;wreg free
 12354  000D9A  C001  F021         	movff	?_PacketDataST7540,i2CreateMessageUART@dataBuf
 12355  000D9E  C002  F022         	movff	?_PacketDataST7540+1,i2CreateMessageUART@dataBuf+1
 12356  000DA2  ECF4  F00F         	call	i2_CreateMessageUART	;wreg free
 12357                           
 12358                           ;main.c: 558: SendUARTPacket();
 12359  000DA6  ECCD  F016         	call	i2_SendUARTPacket	;wreg free
 12360                           
 12361                           ;main.c: 559: return;
 12362  000DAA  0012               	return	
 12363  000DAC                     i2l4832:
 12364                           
 12365                           ;main.c: 562: CreateMessageUART(PacketReadParamST7540(1), 0b00000011, PacketReadParamST7
      +                          540(0), PacketDataST7540());
 12366  000DAC  0E01               	movlw	1
 12367  000DAE  ECFF  F010         	call	_PacketReadParamST7540
 12368  000DB2  C016  F01D         	movff	?_PacketReadParamST7540,i2CreateMessageUART@packetSourceUS
 12369  000DB6  C017  F01E         	movff	?_PacketReadParamST7540+1,i2CreateMessageUART@packetSourceUS+1
 12370  000DBA  0E03               	movlw	3
 12371  000DBC  6E1F               	movwf	i2CreateMessageUART@commandUC,c
 12372  000DBE  0E00               	movlw	0
 12373  000DC0  ECFF  F010         	call	_PacketReadParamST7540
 12374  000DC4  5016               	movf	?_PacketReadParamST7540,w,c
 12375  000DC6  6E20               	movwf	i2CreateMessageUART@dataLenUC,c
 12376  000DC8  EC04  F017         	call	_PacketDataST7540	;wreg free
 12377  000DCC  C001  F021         	movff	?_PacketDataST7540,i2CreateMessageUART@dataBuf
 12378  000DD0  C002  F022         	movff	?_PacketDataST7540+1,i2CreateMessageUART@dataBuf+1
 12379  000DD4  ECF4  F00F         	call	i2_CreateMessageUART	;wreg free
 12380                           
 12381                           ;main.c: 563: SendUARTPacket();
 12382  000DD8  ECCD  F016         	call	i2_SendUARTPacket	;wreg free
 12383                           
 12384                           ;main.c: 564: return;
 12385  000DDC  0012               	return	
 12386  000DDE                     i2l4838:
 12387                           
 12388                           ;main.c: 567: CreateMessageUART(PacketReadParamST7540(1), 0b00000011, PacketReadParamST7
      +                          540(0), PacketDataST7540());
 12389  000DDE  0E01               	movlw	1
 12390  000DE0  ECFF  F010         	call	_PacketReadParamST7540
 12391  000DE4  C016  F01D         	movff	?_PacketReadParamST7540,i2CreateMessageUART@packetSourceUS
 12392  000DE8  C017  F01E         	movff	?_PacketReadParamST7540+1,i2CreateMessageUART@packetSourceUS+1
 12393  000DEC  0E03               	movlw	3
 12394  000DEE  6E1F               	movwf	i2CreateMessageUART@commandUC,c
 12395  000DF0  0E00               	movlw	0
 12396  000DF2  ECFF  F010         	call	_PacketReadParamST7540
 12397  000DF6  5016               	movf	?_PacketReadParamST7540,w,c
 12398  000DF8  6E20               	movwf	i2CreateMessageUART@dataLenUC,c
 12399  000DFA  EC04  F017         	call	_PacketDataST7540	;wreg free
 12400  000DFE  C001  F021         	movff	?_PacketDataST7540,i2CreateMessageUART@dataBuf
 12401  000E02  C002  F022         	movff	?_PacketDataST7540+1,i2CreateMessageUART@dataBuf+1
 12402  000E06  ECF4  F00F         	call	i2_CreateMessageUART	;wreg free
 12403                           
 12404                           ;main.c: 568: SendUARTPacket();
 12405  000E0A  ECCD  F016         	call	i2_SendUARTPacket	;wreg free
 12406                           
 12407                           ;main.c: 569: return;
 12408  000E0E  0012               	return	
 12409  000E10                     i2l4844:
 12410                           
 12411                           ;main.c: 572: CreateMessageUART(PacketReadParamST7540(1), 0b00000100, PacketReadParamST7
      +                          540(0), PacketDataST7540());
 12412  000E10  0E01               	movlw	1
 12413  000E12  ECFF  F010         	call	_PacketReadParamST7540
 12414  000E16  C016  F01D         	movff	?_PacketReadParamST7540,i2CreateMessageUART@packetSourceUS
 12415  000E1A  C017  F01E         	movff	?_PacketReadParamST7540+1,i2CreateMessageUART@packetSourceUS+1
 12416  000E1E  0E04               	movlw	4
 12417  000E20  6E1F               	movwf	i2CreateMessageUART@commandUC,c
 12418  000E22  0E00               	movlw	0
 12419  000E24  ECFF  F010         	call	_PacketReadParamST7540
 12420  000E28  5016               	movf	?_PacketReadParamST7540,w,c
 12421  000E2A  6E20               	movwf	i2CreateMessageUART@dataLenUC,c
 12422  000E2C  EC04  F017         	call	_PacketDataST7540	;wreg free
 12423  000E30  C001  F021         	movff	?_PacketDataST7540,i2CreateMessageUART@dataBuf
 12424  000E34  C002  F022         	movff	?_PacketDataST7540+1,i2CreateMessageUART@dataBuf+1
 12425  000E38  ECF4  F00F         	call	i2_CreateMessageUART	;wreg free
 12426                           
 12427                           ;main.c: 573: SendUARTPacket();
 12428  000E3C  ECCD  F016         	call	i2_SendUARTPacket	;wreg free
 12429                           
 12430                           ;main.c: 574: CreateMessageST7540(0x0010, PacketReadParamST7540(1), 0b00001010, 0, "");
 12431  000E40  0E00               	movlw	0
 12432  000E42  6E1E               	movwf	i2CreateMessageST7540@packetSourceUS+1,c
 12433  000E44  0E10               	movlw	16
 12434  000E46  6E1D               	movwf	i2CreateMessageST7540@packetSourceUS,c
 12435  000E48  0E01               	movlw	1
 12436  000E4A  ECFF  F010         	call	_PacketReadParamST7540
 12437  000E4E  C016  F01F         	movff	?_PacketReadParamST7540,i2CreateMessageST7540@packetDestUS
 12438  000E52  C017  F020         	movff	?_PacketReadParamST7540+1,i2CreateMessageST7540@packetDestUS+1
 12439  000E56  0E0A               	movlw	10
 12440  000E58  6E21               	movwf	i2CreateMessageST7540@commandUC,c
 12441  000E5A  0E00               	movlw	0
 12442  000E5C  6E22               	movwf	i2CreateMessageST7540@dataLenUC,c
 12443  000E5E  0E37               	movlw	low STR_1
 12444  000E60  6E23               	movwf	i2CreateMessageST7540@dataBuf,c
 12445  000E62  0E06               	movlw	high STR_1
 12446  000E64  6E24               	movwf	i2CreateMessageST7540@dataBuf+1,c
 12447  000E66  EC39  F00E         	call	i2_CreateMessageST7540	;wreg free
 12448                           
 12449                           ;main.c: 575: ISC_Transmit_Packet_Ready = 1;
 12450  000E6A  0E01               	movlw	1
 12451  000E6C  0100               	movlb	0	; () banked
 12452  000E6E  6FAE               	movwf	_ISC_Transmit_Packet_Ready& (0+255),b
 12453                           
 12454                           ; BSR set to: 0
 12455                           ;main.c: 576: return;
 12456  000E70  0012               	return	
 12457  000E72                     i2l4854:
 12458                           
 12459                           ;main.c: 579: CreateMessageUART(PacketReadParamST7540(1), 0b00000101, PacketReadParamST7
      +                          540(0), PacketDataST7540());
 12460  000E72  0E01               	movlw	1
 12461  000E74  ECFF  F010         	call	_PacketReadParamST7540
 12462  000E78  C016  F01D         	movff	?_PacketReadParamST7540,i2CreateMessageUART@packetSourceUS
 12463  000E7C  C017  F01E         	movff	?_PacketReadParamST7540+1,i2CreateMessageUART@packetSourceUS+1
 12464  000E80  0E05               	movlw	5
 12465  000E82  6E1F               	movwf	i2CreateMessageUART@commandUC,c
 12466  000E84  0E00               	movlw	0
 12467  000E86  ECFF  F010         	call	_PacketReadParamST7540
 12468  000E8A  5016               	movf	?_PacketReadParamST7540,w,c
 12469  000E8C  6E20               	movwf	i2CreateMessageUART@dataLenUC,c
 12470  000E8E  EC04  F017         	call	_PacketDataST7540	;wreg free
 12471  000E92  C001  F021         	movff	?_PacketDataST7540,i2CreateMessageUART@dataBuf
 12472  000E96  C002  F022         	movff	?_PacketDataST7540+1,i2CreateMessageUART@dataBuf+1
 12473  000E9A  ECF4  F00F         	call	i2_CreateMessageUART	;wreg free
 12474                           
 12475                           ;main.c: 580: SendUARTPacket();
 12476  000E9E  ECCD  F016         	call	i2_SendUARTPacket	;wreg free
 12477                           
 12478                           ;main.c: 581: CreateMessageST7540(0x0010, PacketReadParamST7540(1), 0b00001011, 0, "");
 12479  000EA2  0E00               	movlw	0
 12480  000EA4  6E1E               	movwf	i2CreateMessageST7540@packetSourceUS+1,c
 12481  000EA6  0E10               	movlw	16
 12482  000EA8  6E1D               	movwf	i2CreateMessageST7540@packetSourceUS,c
 12483  000EAA  0E01               	movlw	1
 12484  000EAC  ECFF  F010         	call	_PacketReadParamST7540
 12485  000EB0  C016  F01F         	movff	?_PacketReadParamST7540,i2CreateMessageST7540@packetDestUS
 12486  000EB4  C017  F020         	movff	?_PacketReadParamST7540+1,i2CreateMessageST7540@packetDestUS+1
 12487  000EB8  0E0B               	movlw	11
 12488  000EBA  6E21               	movwf	i2CreateMessageST7540@commandUC,c
 12489  000EBC  0E00               	movlw	0
 12490  000EBE  6E22               	movwf	i2CreateMessageST7540@dataLenUC,c
 12491  000EC0  0E37               	movlw	low STR_1
 12492  000EC2  6E23               	movwf	i2CreateMessageST7540@dataBuf,c
 12493  000EC4  0E06               	movlw	high STR_1
 12494  000EC6  6E24               	movwf	i2CreateMessageST7540@dataBuf+1,c
 12495  000EC8  EC39  F00E         	call	i2_CreateMessageST7540	;wreg free
 12496                           
 12497                           ;main.c: 582: ISC_Transmit_Packet_Ready = 1;
 12498  000ECC  0E01               	movlw	1
 12499  000ECE  0100               	movlb	0	; () banked
 12500  000ED0  6FAE               	movwf	_ISC_Transmit_Packet_Ready& (0+255),b
 12501                           
 12502                           ; BSR set to: 0
 12503                           ;main.c: 583: return;
 12504  000ED2  0012               	return	
 12505  000ED4                     i2l4864:
 12506                           
 12507                           ;main.c: 586: tempIscSerial = (tempIscSerial << 8) & 0XFF00;
 12508  000ED4  502E               	movf	Receive_ISC_Packet@tempIscSerial,w,c
 12509  000ED6  6E2D               	movwf	(??_Receive_ISC_Packet+1)& (0+255),c
 12510  000ED8  6A2C               	clrf	??_Receive_ISC_Packet& (0+255),c
 12511  000EDA  0E00               	movlw	0
 12512  000EDC  142C               	andwf	??_Receive_ISC_Packet,w,c
 12513  000EDE  6E2E               	movwf	Receive_ISC_Packet@tempIscSerial,c
 12514  000EE0  0EFF               	movlw	255
 12515  000EE2  142D               	andwf	??_Receive_ISC_Packet+1,w,c
 12516  000EE4  6E2F               	movwf	Receive_ISC_Packet@tempIscSerial+1,c
 12517                           
 12518                           ;main.c: 587: tempIscSerial |= (PacketReadParamST7540(1) >> 8) & 0XFF;
 12519  000EE6  0E01               	movlw	1
 12520  000EE8  ECFF  F010         	call	_PacketReadParamST7540
 12521  000EEC  C017  F016         	movff	?_PacketReadParamST7540+1,?_PacketReadParamST7540
 12522  000EF0  6A17               	clrf	?_PacketReadParamST7540+1,c
 12523  000EF2  5016               	movf	?_PacketReadParamST7540,w,c
 12524  000EF4  122E               	iorwf	Receive_ISC_Packet@tempIscSerial,f,c
 12525                           
 12526                           ;main.c: 588: CreateMessageUART(0x0010, 0b00000001, PacketReadParamST7540(0) + 2, &tempI
      +                          scSerial);
 12527  000EF6  0E00               	movlw	0
 12528  000EF8  6E1E               	movwf	i2CreateMessageUART@packetSourceUS+1,c
 12529  000EFA  0E10               	movlw	16
 12530  000EFC  6E1D               	movwf	i2CreateMessageUART@packetSourceUS,c
 12531  000EFE  0E01               	movlw	1
 12532  000F00  6E1F               	movwf	i2CreateMessageUART@commandUC,c
 12533  000F02  0E00               	movlw	0
 12534  000F04  ECFF  F010         	call	_PacketReadParamST7540
 12535  000F08  5016               	movf	?_PacketReadParamST7540,w,c
 12536  000F0A  0F02               	addlw	2
 12537  000F0C  6E20               	movwf	i2CreateMessageUART@dataLenUC,c
 12538  000F0E  0E2E               	movlw	low Receive_ISC_Packet@tempIscSerial
 12539  000F10  6E21               	movwf	i2CreateMessageUART@dataBuf,c
 12540  000F12  0E00               	movlw	high Receive_ISC_Packet@tempIscSerial
 12541  000F14  6E22               	movwf	i2CreateMessageUART@dataBuf+1,c
 12542  000F16  ECF4  F00F         	call	i2_CreateMessageUART	;wreg free
 12543                           
 12544                           ;main.c: 589: SendUARTPacket();
 12545  000F1A  ECCD  F016         	call	i2_SendUARTPacket	;wreg free
 12546                           
 12547                           ;main.c: 590: return;
 12548  000F1E  0012               	return	
 12549  000F20                     i2l4874:
 12550                           
 12551                           ;main.c: 593: tempIscSerial = (tempIscSerial << 8) & 0XFF00;
 12552  000F20  502E               	movf	Receive_ISC_Packet@tempIscSerial,w,c
 12553  000F22  6E2D               	movwf	(??_Receive_ISC_Packet+1)& (0+255),c
 12554  000F24  6A2C               	clrf	??_Receive_ISC_Packet& (0+255),c
 12555  000F26  0E00               	movlw	0
 12556  000F28  142C               	andwf	??_Receive_ISC_Packet,w,c
 12557  000F2A  6E2E               	movwf	Receive_ISC_Packet@tempIscSerial,c
 12558  000F2C  0EFF               	movlw	255
 12559  000F2E  142D               	andwf	??_Receive_ISC_Packet+1,w,c
 12560  000F30  6E2F               	movwf	Receive_ISC_Packet@tempIscSerial+1,c
 12561                           
 12562                           ;main.c: 594: tempIscSerial |= (PacketReadParamST7540(1) >> 8) & 0XFF;
 12563  000F32  0E01               	movlw	1
 12564  000F34  ECFF  F010         	call	_PacketReadParamST7540
 12565  000F38  C017  F016         	movff	?_PacketReadParamST7540+1,?_PacketReadParamST7540
 12566  000F3C  6A17               	clrf	?_PacketReadParamST7540+1,c
 12567  000F3E  5016               	movf	?_PacketReadParamST7540,w,c
 12568  000F40  122E               	iorwf	Receive_ISC_Packet@tempIscSerial,f,c
 12569                           
 12570                           ;main.c: 595: CreateMessageUART(0x0010, 0b00000001, PacketReadParamST7540(0) + 2, &tempI
      +                          scSerial);
 12571  000F42  0E00               	movlw	0
 12572  000F44  6E1E               	movwf	i2CreateMessageUART@packetSourceUS+1,c
 12573  000F46  0E10               	movlw	16
 12574  000F48  6E1D               	movwf	i2CreateMessageUART@packetSourceUS,c
 12575  000F4A  0E01               	movlw	1
 12576  000F4C  6E1F               	movwf	i2CreateMessageUART@commandUC,c
 12577  000F4E  0E00               	movlw	0
 12578  000F50  ECFF  F010         	call	_PacketReadParamST7540
 12579  000F54  5016               	movf	?_PacketReadParamST7540,w,c
 12580  000F56  0F02               	addlw	2
 12581  000F58  6E20               	movwf	i2CreateMessageUART@dataLenUC,c
 12582  000F5A  0E2E               	movlw	low Receive_ISC_Packet@tempIscSerial
 12583  000F5C  6E21               	movwf	i2CreateMessageUART@dataBuf,c
 12584  000F5E  0E00               	movlw	high Receive_ISC_Packet@tempIscSerial
 12585  000F60  6E22               	movwf	i2CreateMessageUART@dataBuf+1,c
 12586  000F62  ECF4  F00F         	call	i2_CreateMessageUART	;wreg free
 12587                           
 12588                           ;main.c: 596: SendUARTPacket();
 12589  000F66  ECCD  F016         	call	i2_SendUARTPacket	;wreg free
 12590                           
 12591                           ;main.c: 599: }
 12592                           
 12593                           ;main.c: 597: return;
 12594  000F6A  0012               	return	
 12595  000F6C                     i2l4886:
 12596  000F6C  0E04               	movlw	4
 12597  000F6E  ECFF  F010         	call	_PacketReadParamST7540
 12598                           
 12599                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12600                           ; Switch size 1, requested type "space"
 12601                           ; Number of cases is 1, Range of values is 0 to 0
 12602                           ; switch strategies available:
 12603                           ; Name         Instructions Cycles
 12604                           ; simple_byte            4     3 (average)
 12605                           ;	Chosen strategy is simple_byte
 12606  000F72  5017               	movf	?_PacketReadParamST7540+1,w,c
 12607  000F74  0A00               	xorlw	0	; case 0
 12608  000F76  A4D8               	btfss	status,2,c
 12609  000F78  0012               	return	
 12610                           
 12611                           ; Switch size 1, requested type "space"
 12612                           ; Number of cases is 7, Range of values is 0 to 64
 12613                           ; switch strategies available:
 12614                           ; Name         Instructions Cycles
 12615                           ; simple_byte           22    12 (average)
 12616                           ;	Chosen strategy is simple_byte
 12617  000F7A  5016               	movf	?_PacketReadParamST7540,w,c
 12618  000F7C  0A00               	xorlw	0	; case 0
 12619  000F7E  B4D8               	btfsc	status,2,c
 12620  000F80  D715               	goto	i2l4832
 12621  000F82  0A07               	xorlw	7	; case 7
 12622  000F84  B4D8               	btfsc	status,2,c
 12623  000F86  D6F9               	goto	i2l4826
 12624  000F88  0A0E               	xorlw	14	; case 9
 12625  000F8A  B4D8               	btfsc	status,2,c
 12626  000F8C  D7A3               	goto	i2l4864
 12627  000F8E  0A03               	xorlw	3	; case 10
 12628  000F90  B4D8               	btfsc	status,2,c
 12629  000F92  D73E               	goto	i2l4844
 12630  000F94  0A01               	xorlw	1	; case 11
 12631  000F96  B4D8               	btfsc	status,2,c
 12632  000F98  D76C               	goto	i2l4854
 12633  000F9A  0A22               	xorlw	34	; case 41
 12634  000F9C  B4D8               	btfsc	status,2,c
 12635  000F9E  D7C0               	goto	i2l4874
 12636  000FA0  0A69               	xorlw	105	; case 64
 12637  000FA2  A4D8               	btfss	status,2,c
 12638                           
 12639                           ;main.c: 600: }
 12640  000FA4  0012               	return	
 12641  000FA6  D71B               	goto	i2l4838
 12642  000FA8                     i2l4888:
 12643                           
 12644                           ;main.c: 601: else
 12645                           ;main.c: 602: ReceiveNewDataST7540();
 12646  000FA8  ECB3  F016         	call	i2_ReceiveNewDataST7540	;wreg free
 12647  000FAC  0012               	return	
 12648  000FAE                     __end_of_Receive_ISC_Packet:
 12649                           	opt stack 0
 12650                           pclatu	equ	0xFFB
 12651                           pclath	equ	0xFFA
 12652                           tblptru	equ	0xFF8
 12653                           tblptrh	equ	0xFF7
 12654                           tblptrl	equ	0xFF6
 12655                           tablat	equ	0xFF5
 12656                           prodh	equ	0xFF4
 12657                           prodl	equ	0xFF3
 12658                           intcon	equ	0xFF2
 12659                           indf0	equ	0xFEF
 12660                           postinc0	equ	0xFEE
 12661                           fsr0h	equ	0xFEA
 12662                           fsr0l	equ	0xFE9
 12663                           wreg	equ	0xFE8
 12664                           indf1	equ	0xFE7
 12665                           postdec1	equ	0xFE5
 12666                           fsr1h	equ	0xFE2
 12667                           fsr1l	equ	0xFE1
 12668                           indf2	equ	0xFDF
 12669                           postinc2	equ	0xFDE
 12670                           postdec2	equ	0xFDD
 12671                           fsr2h	equ	0xFDA
 12672                           fsr2l	equ	0xFD9
 12673                           status	equ	0xFD8
 12674                           
 12675 ;; *************** function i2_SendUARTPacket *****************
 12676 ;; Defined at:
 12677 ;;		line 255 in file "Released IBC-1 Code - 03-06-2016/UART.c"
 12678 ;; Parameters:    Size  Location     Type
 12679 ;;		None
 12680 ;; Auto vars:     Size  Location     Type
 12681 ;;		None
 12682 ;; Return value:  Size  Location     Type
 12683 ;;                  1    wreg      void 
 12684 ;; Registers used:
 12685 ;;		wreg, status,2, status,0, cstack
 12686 ;; Tracked objects:
 12687 ;;		On entry : 0/0
 12688 ;;		On exit  : 0/0
 12689 ;;		Unchanged: 0/0
 12690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12691 ;;      Params:         0       0       0       0       0       0       0
 12692 ;;      Locals:         0       0       0       0       0       0       0
 12693 ;;      Temps:          0       0       0       0       0       0       0
 12694 ;;      Totals:         0       0       0       0       0       0       0
 12695 ;;Total ram usage:        0 bytes
 12696 ;; Hardware stack levels used:    1
 12697 ;; Hardware stack levels required when called:    1
 12698 ;; This function calls:
 12699 ;;		i2_UART_Write
 12700 ;; This function is called by:
 12701 ;;		_Receive_ISC_Packet
 12702 ;; This function uses a non-reentrant model
 12703 ;;
 12704                           
 12705                           	psect	text72
 12706  002D9A                     __ptext72:
 12707                           	opt stack 0
 12708  002D9A                     i2_SendUARTPacket:
 12709                           	opt stack 22
 12710                           
 12711                           ;UART.c: 257: flagUART |= 1;
 12712                           
 12713                           ;incstack = 0
 12714  002D9A  805A               	bsf	_flagUART,0,c
 12715                           
 12716                           ;UART.c: 258: UART_Write(TransmitPiBufferCG[0]);
 12717  002D9C  0101               	movlb	1	; () banked
 12718  002D9E  5100               	movf	_TransmitPiBufferCG& (0+255),w,b
 12719  002DA0  ECEF  F016         	call	i2_UART_Write
 12720                           
 12721                           ;UART.c: 259: PiBufferTXNEXTUCA = 1;
 12722  002DA4  0E01               	movlw	1
 12723  002DA6  6E52               	movwf	_PiBufferTXNEXTUCA,c
 12724  002DA8  0012               	return		;funcret
 12725  002DAA                     __end_ofi2_SendUARTPacket:
 12726                           	opt stack 0
 12727                           pclatu	equ	0xFFB
 12728                           pclath	equ	0xFFA
 12729                           tblptru	equ	0xFF8
 12730                           tblptrh	equ	0xFF7
 12731                           tblptrl	equ	0xFF6
 12732                           tablat	equ	0xFF5
 12733                           prodh	equ	0xFF4
 12734                           prodl	equ	0xFF3
 12735                           intcon	equ	0xFF2
 12736                           indf0	equ	0xFEF
 12737                           postinc0	equ	0xFEE
 12738                           fsr0h	equ	0xFEA
 12739                           fsr0l	equ	0xFE9
 12740                           wreg	equ	0xFE8
 12741                           indf1	equ	0xFE7
 12742                           postdec1	equ	0xFE5
 12743                           fsr1h	equ	0xFE2
 12744                           fsr1l	equ	0xFE1
 12745                           indf2	equ	0xFDF
 12746                           postinc2	equ	0xFDE
 12747                           postdec2	equ	0xFDD
 12748                           fsr2h	equ	0xFDA
 12749                           fsr2l	equ	0xFD9
 12750                           status	equ	0xFD8
 12751                           
 12752 ;; *************** function i2_UART_Write *****************
 12753 ;; Defined at:
 12754 ;;		line 262 in file "Released IBC-1 Code - 03-06-2016/UART.c"
 12755 ;; Parameters:    Size  Location     Type
 12756 ;;  data            1    wreg     unsigned char 
 12757 ;; Auto vars:     Size  Location     Type
 12758 ;;  data            1    0[COMRAM] unsigned char 
 12759 ;; Return value:  Size  Location     Type
 12760 ;;                  1    wreg      void 
 12761 ;; Registers used:
 12762 ;;		wreg
 12763 ;; Tracked objects:
 12764 ;;		On entry : 0/0
 12765 ;;		On exit  : 0/0
 12766 ;;		Unchanged: 0/0
 12767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12768 ;;      Params:         0       0       0       0       0       0       0
 12769 ;;      Locals:         1       0       0       0       0       0       0
 12770 ;;      Temps:          0       0       0       0       0       0       0
 12771 ;;      Totals:         1       0       0       0       0       0       0
 12772 ;;Total ram usage:        1 bytes
 12773 ;; Hardware stack levels used:    1
 12774 ;; This function calls:
 12775 ;;		Nothing
 12776 ;; This function is called by:
 12777 ;;		_UART_TX_ISRHandler
 12778 ;;		i2_SendUARTPacket
 12779 ;; This function uses a non-reentrant model
 12780 ;;
 12781                           
 12782                           	psect	text73
 12783  002DDE                     __ptext73:
 12784                           	opt stack 0
 12785  002DDE                     i2_UART_Write:
 12786                           	opt stack 23
 12787                           
 12788                           ;incstack = 0
 12789                           ;i2UART_Write@data stored from wreg
 12790  002DDE  6E01               	movwf	i2UART_Write@data,c
 12791  002DE0                     i2l237:
 12792  002DE0  A2AC               	btfss	4012,1,c	;volatile
 12793  002DE2  D7FE               	goto	i2l237
 12794                           
 12795                           ;UART.c: 265: TXREG1 = data;
 12796  002DE4  C001  FFAD         	movff	i2UART_Write@data,4013	;volatile
 12797  002DE8  0012               	return		;funcret
 12798  002DEA                     __end_ofi2_UART_Write:
 12799                           	opt stack 0
 12800                           pclatu	equ	0xFFB
 12801                           pclath	equ	0xFFA
 12802                           tblptru	equ	0xFF8
 12803                           tblptrh	equ	0xFF7
 12804                           tblptrl	equ	0xFF6
 12805                           tablat	equ	0xFF5
 12806                           prodh	equ	0xFF4
 12807                           prodl	equ	0xFF3
 12808                           intcon	equ	0xFF2
 12809                           indf0	equ	0xFEF
 12810                           postinc0	equ	0xFEE
 12811                           fsr0h	equ	0xFEA
 12812                           fsr0l	equ	0xFE9
 12813                           wreg	equ	0xFE8
 12814                           indf1	equ	0xFE7
 12815                           postdec1	equ	0xFE5
 12816                           fsr1h	equ	0xFE2
 12817                           fsr1l	equ	0xFE1
 12818                           indf2	equ	0xFDF
 12819                           postinc2	equ	0xFDE
 12820                           postdec2	equ	0xFDD
 12821                           fsr2h	equ	0xFDA
 12822                           fsr2l	equ	0xFD9
 12823                           status	equ	0xFD8
 12824                           
 12825 ;; *************** function i2_ReceiveNewDataST7540 *****************
 12826 ;; Defined at:
 12827 ;;		line 254 in file "Released IBC-1 Code - 03-06-2016/ST7540.c"
 12828 ;; Parameters:    Size  Location     Type
 12829 ;;		None
 12830 ;; Auto vars:     Size  Location     Type
 12831 ;;  ReceiveNewDa    1    0[COMRAM] unsigned char 
 12832 ;; Return value:  Size  Location     Type
 12833 ;;                  1    wreg      void 
 12834 ;; Registers used:
 12835 ;;		wreg, status,2, status,0
 12836 ;; Tracked objects:
 12837 ;;		On entry : 0/0
 12838 ;;		On exit  : 0/0
 12839 ;;		Unchanged: 0/0
 12840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12841 ;;      Params:         0       0       0       0       0       0       0
 12842 ;;      Locals:         1       0       0       0       0       0       0
 12843 ;;      Temps:          0       0       0       0       0       0       0
 12844 ;;      Totals:         1       0       0       0       0       0       0
 12845 ;;Total ram usage:        1 bytes
 12846 ;; Hardware stack levels used:    1
 12847 ;; This function calls:
 12848 ;;		Nothing
 12849 ;; This function is called by:
 12850 ;;		_isr
 12851 ;;		_Receive_ISC_Packet
 12852 ;; This function uses a non-reentrant model
 12853 ;;
 12854                           
 12855                           	psect	text74
 12856  002D66                     __ptext74:
 12857                           	opt stack 0
 12858  002D66                     i2_ReceiveNewDataST7540:
 12859                           	opt stack 24
 12860                           
 12861                           ;ST7540.c: 255: unsigned char discardUC;
 12862                           ;ST7540.c: 257: flagST7540 |= 2;
 12863                           
 12864                           ;incstack = 0
 12865  002D66  8259               	bsf	_flagST7540,1,c
 12866                           
 12867                           ;ST7540.c: 258: flagST7540 &= ~4;
 12868  002D68  9459               	bcf	_flagST7540,2,c
 12869                           
 12870                           ;ST7540.c: 259: discardUC = SSP1BUF;
 12871  002D6A  CFC9 F001          	movff	4041,i2ReceiveNewDataST7540@discardUC	;volatile
 12872                           
 12873                           ;ST7540.c: 260: SSP2BUF = 0;
 12874  002D6E  0E00               	movlw	0
 12875  002D70  6E6F               	movwf	3951,c	;volatile
 12876                           
 12877                           ;ST7540.c: 261: bufferRXNextUCA = 0;
 12878  002D72  0E00               	movlw	0
 12879  002D74  6E56               	movwf	_bufferRXNextUCA,c
 12880  002D76  0012               	return		;funcret
 12881  002D78                     __end_ofi2_ReceiveNewDataST7540:
 12882                           	opt stack 0
 12883                           pclatu	equ	0xFFB
 12884                           pclath	equ	0xFFA
 12885                           tblptru	equ	0xFF8
 12886                           tblptrh	equ	0xFF7
 12887                           tblptrl	equ	0xFF6
 12888                           tablat	equ	0xFF5
 12889                           prodh	equ	0xFF4
 12890                           prodl	equ	0xFF3
 12891                           intcon	equ	0xFF2
 12892                           indf0	equ	0xFEF
 12893                           postinc0	equ	0xFEE
 12894                           fsr0h	equ	0xFEA
 12895                           fsr0l	equ	0xFE9
 12896                           wreg	equ	0xFE8
 12897                           indf1	equ	0xFE7
 12898                           postdec1	equ	0xFE5
 12899                           fsr1h	equ	0xFE2
 12900                           fsr1l	equ	0xFE1
 12901                           indf2	equ	0xFDF
 12902                           postinc2	equ	0xFDE
 12903                           postdec2	equ	0xFDD
 12904                           fsr2h	equ	0xFDA
 12905                           fsr2l	equ	0xFD9
 12906                           status	equ	0xFD8
 12907                           
 12908 ;; *************** function i2_CreateMessageUART *****************
 12909 ;; Defined at:
 12910 ;;		line 231 in file "Released IBC-1 Code - 03-06-2016/UART.c"
 12911 ;; Parameters:    Size  Location     Type
 12912 ;;  packetSource    2   28[COMRAM] unsigned short 
 12913 ;;  commandUC       1   30[COMRAM] unsigned char 
 12914 ;;  dataLenUC       1   31[COMRAM] unsigned char 
 12915 ;;  dataBuf         2   32[COMRAM] PTR unsigned char 
 12916 ;;		 -> PiDefaultData(2), Receive_ISC_Packet@tempIscSerial(2), bufferRXST7540UCA(75), 
 12917 ;; Auto vars:     Size  Location     Type
 12918 ;;  CreateMessag    2   36[COMRAM] unsigned short 
 12919 ;;  CreateMessag    1   38[COMRAM] unsigned char 
 12920 ;; Return value:  Size  Location     Type
 12921 ;;                  1    wreg      void 
 12922 ;; Registers used:
 12923 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12924 ;; Tracked objects:
 12925 ;;		On entry : 0/0
 12926 ;;		On exit  : 0/0
 12927 ;;		Unchanged: 0/0
 12928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12929 ;;      Params:         6       0       0       0       0       0       0
 12930 ;;      Locals:         3       0       0       0       0       0       0
 12931 ;;      Temps:          2       0       0       0       0       0       0
 12932 ;;      Totals:        11       0       0       0       0       0       0
 12933 ;;Total ram usage:       11 bytes
 12934 ;; Hardware stack levels used:    1
 12935 ;; Hardware stack levels required when called:    1
 12936 ;; This function calls:
 12937 ;;		i2_CRC16
 12938 ;; This function is called by:
 12939 ;;		_Receive_ISC_Packet
 12940 ;; This function uses a non-reentrant model
 12941 ;;
 12942                           
 12943                           	psect	text75
 12944  001FE8                     __ptext75:
 12945                           	opt stack 0
 12946  001FE8                     i2_CreateMessageUART:
 12947                           	opt stack 22
 12948                           
 12949                           ;UART.c: 232: unsigned char dataBufLocUC;
 12950                           ;UART.c: 233: unsigned short packetCRCUS;
 12951                           ;UART.c: 235: TransmitPiBufferCG[0] = 0xAA;
 12952                           
 12953                           ;incstack = 0
 12954  001FE8  0EAA               	movlw	170
 12955  001FEA  0101               	movlb	1	; () banked
 12956  001FEC  6F00               	movwf	_TransmitPiBufferCG& (0+255),b
 12957                           
 12958                           ;UART.c: 236: TransmitPiBufferCG[1] = 0xAA;
 12959  001FEE  0EAA               	movlw	170
 12960  001FF0  0101               	movlb	1	; () banked
 12961  001FF2  6F01               	movwf	(_TransmitPiBufferCG+1)& (0+255),b
 12962                           
 12963                           ; BSR set to: 1
 12964                           ;UART.c: 238: TransmitPiBufferCG[2] = 8 + dataLenUC;
 12965  001FF4  5020               	movf	i2CreateMessageUART@dataLenUC,w,c
 12966  001FF6  0F08               	addlw	8
 12967  001FF8  0101               	movlb	1	; () banked
 12968  001FFA  6F02               	movwf	(_TransmitPiBufferCG+2)& (0+255),b
 12969                           
 12970                           ; BSR set to: 1
 12971                           ;UART.c: 240: TransmitPiBufferCG[3] = commandUC;
 12972  001FFC  C01F  F103         	movff	i2CreateMessageUART@commandUC,_TransmitPiBufferCG+3
 12973                           
 12974                           ; BSR set to: 1
 12975                           ;UART.c: 242: TransmitPiBufferCG[4] = packetSourceUS >> 8;
 12976  002000  501E               	movf	i2CreateMessageUART@packetSourceUS+1,w,c
 12977  002002  0101               	movlb	1	; () banked
 12978  002004  6F04               	movwf	(_TransmitPiBufferCG+4)& (0+255),b
 12979                           
 12980                           ; BSR set to: 1
 12981                           ;UART.c: 243: TransmitPiBufferCG[5] = packetSourceUS;
 12982  002006  C01D  F105         	movff	i2CreateMessageUART@packetSourceUS,_TransmitPiBufferCG+5
 12983                           
 12984                           ; BSR set to: 1
 12985                           ;UART.c: 245: for(dataBufLocUC = 0; dataBufLocUC < dataLenUC; dataBufLocUC++)
 12986  00200A  0E00               	movlw	0
 12987  00200C  6E27               	movwf	i2CreateMessageUART@dataBufLocUC,c
 12988  00200E  D018               	goto	i2l4688
 12989  002010                     i2l4684:
 12990                           
 12991                           ;UART.c: 246: TransmitPiBufferCG[dataBufLocUC + 6] = dataBuf[dataBufLocUC];
 12992  002010  5027               	movf	i2CreateMessageUART@dataBufLocUC,w,c
 12993  002012  0D01               	mullw	1
 12994  002014  50F3               	movf	prodl,w,c
 12995  002016  2421               	addwf	i2CreateMessageUART@dataBuf,w,c
 12996  002018  6ED9               	movwf	fsr2l,c
 12997  00201A  50F4               	movf	prodh,w,c
 12998  00201C  2022               	addwfc	i2CreateMessageUART@dataBuf+1,w,c
 12999  00201E  6EDA               	movwf	fsr2h,c
 13000  002020  5027               	movf	i2CreateMessageUART@dataBufLocUC,w,c
 13001  002022  6E23               	movwf	??i2_CreateMessageUART& (0+255),c
 13002  002024  6A24               	clrf	(??i2_CreateMessageUART+1)& (0+255),c
 13003  002026  0E06               	movlw	6
 13004  002028  2623               	addwf	??i2_CreateMessageUART,f,c
 13005  00202A  0E00               	movlw	0
 13006  00202C  2224               	addwfc	??i2_CreateMessageUART+1,f,c
 13007  00202E  0E00               	movlw	low _TransmitPiBufferCG
 13008  002030  2423               	addwf	??i2_CreateMessageUART,w,c
 13009  002032  6EE1               	movwf	fsr1l,c
 13010  002034  0E01               	movlw	high _TransmitPiBufferCG
 13011  002036  2024               	addwfc	??i2_CreateMessageUART+1,w,c
 13012  002038  6EE2               	movwf	fsr1h,c
 13013  00203A  CFDF FFE7          	movff	indf2,indf1
 13014  00203E  2A27               	incf	i2CreateMessageUART@dataBufLocUC,f,c
 13015  002040                     i2l4688:
 13016  002040  5020               	movf	i2CreateMessageUART@dataLenUC,w,c
 13017  002042  5C27               	subwf	i2CreateMessageUART@dataBufLocUC,w,c
 13018  002044  A0D8               	btfss	status,0,c
 13019  002046  D7E4               	goto	i2l4684
 13020                           
 13021                           ;UART.c: 247: dataBufLocUC += 6;
 13022  002048  0E06               	movlw	6
 13023  00204A  2627               	addwf	i2CreateMessageUART@dataBufLocUC,f,c
 13024                           
 13025                           ;UART.c: 249: packetCRCUS = CRC16(TransmitPiBufferCG, 8 + dataLenUC - 2);
 13026  00204C  0E00               	movlw	low _TransmitPiBufferCG
 13027  00204E  6E01               	movwf	i2CRC16@data_p,c
 13028  002050  0E01               	movlw	high _TransmitPiBufferCG
 13029  002052  6E02               	movwf	i2CRC16@data_p+1,c
 13030  002054  0E06               	movlw	6
 13031  002056  2420               	addwf	i2CreateMessageUART@dataLenUC,w,c
 13032  002058  6E03               	movwf	i2CRC16@length,c
 13033  00205A  6A04               	clrf	i2CRC16@length+1,c
 13034  00205C  0E00               	movlw	0
 13035  00205E  2204               	addwfc	i2CRC16@length+1,f,c
 13036  002060  EC27  F00F         	call	i2_CRC16	;wreg free
 13037  002064  C001  F025         	movff	?i2_CRC16,i2CreateMessageUART@packetCRCUS
 13038  002068  C002  F026         	movff	?i2_CRC16+1,i2CreateMessageUART@packetCRCUS+1
 13039                           
 13040                           ;UART.c: 250: TransmitPiBufferCG[dataBufLocUC++] = packetCRCUS >> 8;
 13041  00206C  5027               	movf	i2CreateMessageUART@dataBufLocUC,w,c
 13042  00206E  0D01               	mullw	1
 13043  002070  0E00               	movlw	low _TransmitPiBufferCG
 13044  002072  24F3               	addwf	prodl,w,c
 13045  002074  6ED9               	movwf	fsr2l,c
 13046  002076  0E01               	movlw	high _TransmitPiBufferCG
 13047  002078  20F4               	addwfc	prodh,w,c
 13048  00207A  6EDA               	movwf	fsr2h,c
 13049  00207C  5026               	movf	i2CreateMessageUART@packetCRCUS+1,w,c
 13050  00207E  6EDF               	movwf	indf2,c
 13051  002080  2A27               	incf	i2CreateMessageUART@dataBufLocUC,f,c
 13052                           
 13053                           ;UART.c: 251: TransmitPiBufferCG[dataBufLocUC] = packetCRCUS;
 13054  002082  5027               	movf	i2CreateMessageUART@dataBufLocUC,w,c
 13055  002084  0D01               	mullw	1
 13056  002086  0E00               	movlw	low _TransmitPiBufferCG
 13057  002088  24F3               	addwf	prodl,w,c
 13058  00208A  6ED9               	movwf	fsr2l,c
 13059  00208C  0E01               	movlw	high _TransmitPiBufferCG
 13060  00208E  20F4               	addwfc	prodh,w,c
 13061  002090  6EDA               	movwf	fsr2h,c
 13062  002092  C025  FFDF         	movff	i2CreateMessageUART@packetCRCUS,indf2
 13063                           
 13064                           ;UART.c: 252: PiBufferTXLenUCA = dataBufLocUC++;
 13065  002096  C027  F0B2         	movff	i2CreateMessageUART@dataBufLocUC,_PiBufferTXLenUCA
 13066  00209A  2A27               	incf	i2CreateMessageUART@dataBufLocUC,f,c
 13067  00209C  0012               	return		;funcret
 13068  00209E                     __end_ofi2_CreateMessageUART:
 13069                           	opt stack 0
 13070                           pclatu	equ	0xFFB
 13071                           pclath	equ	0xFFA
 13072                           tblptru	equ	0xFF8
 13073                           tblptrh	equ	0xFF7
 13074                           tblptrl	equ	0xFF6
 13075                           tablat	equ	0xFF5
 13076                           prodh	equ	0xFF4
 13077                           prodl	equ	0xFF3
 13078                           intcon	equ	0xFF2
 13079                           indf0	equ	0xFEF
 13080                           postinc0	equ	0xFEE
 13081                           fsr0h	equ	0xFEA
 13082                           fsr0l	equ	0xFE9
 13083                           wreg	equ	0xFE8
 13084                           indf1	equ	0xFE7
 13085                           postdec1	equ	0xFE5
 13086                           fsr1h	equ	0xFE2
 13087                           fsr1l	equ	0xFE1
 13088                           indf2	equ	0xFDF
 13089                           postinc2	equ	0xFDE
 13090                           postdec2	equ	0xFDD
 13091                           fsr2h	equ	0xFDA
 13092                           fsr2l	equ	0xFD9
 13093                           status	equ	0xFD8
 13094                           
 13095 ;; *************** function i2_CreateMessageST7540 *****************
 13096 ;; Defined at:
 13097 ;;		line 212 in file "Released IBC-1 Code - 03-06-2016/ST7540.c"
 13098 ;; Parameters:    Size  Location     Type
 13099 ;;  packetSource    2   28[COMRAM] unsigned short 
 13100 ;;  packetDestUS    2   30[COMRAM] unsigned short 
 13101 ;;  commandUC       1   32[COMRAM] unsigned char 
 13102 ;;  dataLenUC       1   33[COMRAM] unsigned char 
 13103 ;;  dataBuf         2   34[COMRAM] PTR unsigned char 
 13104 ;;		 -> Assign_ISC_New_SN@ISC_NEW_SN(2), STR_14(1), STR_13(1), STR_12(1), 
 13105 ;;		 -> STR_11(1), STR_10(1), STR_9(1), STR_8(1), 
 13106 ;;		 -> STR_7(1), STR_6(1), STR_5(1), STR_4(1), 
 13107 ;;		 -> STR_3(1), STR_2(1), STR_1(1), 
 13108 ;; Auto vars:     Size  Location     Type
 13109 ;;  CreateMessag    2   40[COMRAM] unsigned short 
 13110 ;;  CreateMessag    1   42[COMRAM] unsigned char 
 13111 ;; Return value:  Size  Location     Type
 13112 ;;                  1    wreg      void 
 13113 ;; Registers used:
 13114 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13115 ;; Tracked objects:
 13116 ;;		On entry : 0/0
 13117 ;;		On exit  : 0/0
 13118 ;;		Unchanged: 0/0
 13119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13120 ;;      Params:         8       0       0       0       0       0       0
 13121 ;;      Locals:         3       0       0       0       0       0       0
 13122 ;;      Temps:          4       0       0       0       0       0       0
 13123 ;;      Totals:        15       0       0       0       0       0       0
 13124 ;;Total ram usage:       15 bytes
 13125 ;; Hardware stack levels used:    1
 13126 ;; Hardware stack levels required when called:    1
 13127 ;; This function calls:
 13128 ;;		i2_CRC16
 13129 ;; This function is called by:
 13130 ;;		_Receive_ISC_Packet
 13131 ;;		_Transmit_NULL_Packet
 13132 ;; This function uses a non-reentrant model
 13133 ;;
 13134                           
 13135                           	psect	text76
 13136  001C72                     __ptext76:
 13137                           	opt stack 0
 13138  001C72                     i2_CreateMessageST7540:
 13139                           	opt stack 22
 13140                           
 13141                           ;ST7540.c: 213: unsigned char dataBufLocUC;
 13142                           ;ST7540.c: 214: unsigned short packetCRCUS;
 13143                           ;ST7540.c: 216: bufferTXST7540UCA[0] = 0xAA;
 13144                           
 13145                           ;incstack = 0
 13146  001C72  0EAA               	movlw	170
 13147  001C74  0101               	movlb	1	; () banked
 13148  001C76  6F50               	movwf	_bufferTXST7540UCA& (0+255),b
 13149                           
 13150                           ;ST7540.c: 217: bufferTXST7540UCA[1] = 0xAA;
 13151  001C78  0EAA               	movlw	170
 13152  001C7A  0101               	movlb	1	; () banked
 13153  001C7C  6F51               	movwf	(_bufferTXST7540UCA+1)& (0+255),b
 13154                           
 13155                           ;ST7540.c: 218: bufferTXST7540UCA[2] = (unsigned long short) 0x9b58 >> 8;
 13156  001C7E  0E9B               	movlw	155
 13157  001C80  0101               	movlb	1	; () banked
 13158  001C82  6F52               	movwf	(_bufferTXST7540UCA+2)& (0+255),b
 13159                           
 13160                           ;ST7540.c: 219: bufferTXST7540UCA[3] = (unsigned long short) 0x9b58;
 13161  001C84  0E58               	movlw	88
 13162  001C86  0101               	movlb	1	; () banked
 13163  001C88  6F53               	movwf	(_bufferTXST7540UCA+3)& (0+255),b
 13164                           
 13165                           ; BSR set to: 1
 13166                           ;ST7540.c: 220: bufferTXST7540UCA[4] = 9 + dataLenUC;
 13167  001C8A  5022               	movf	i2CreateMessageST7540@dataLenUC,w,c
 13168  001C8C  0F09               	addlw	9
 13169  001C8E  0101               	movlb	1	; () banked
 13170  001C90  6F54               	movwf	(_bufferTXST7540UCA+4)& (0+255),b
 13171                           
 13172                           ; BSR set to: 1
 13173                           ;ST7540.c: 221: bufferTXST7540UCA[5] = packetSourceUS >> 8;
 13174  001C92  501E               	movf	i2CreateMessageST7540@packetSourceUS+1,w,c
 13175  001C94  0101               	movlb	1	; () banked
 13176  001C96  6F55               	movwf	(_bufferTXST7540UCA+5)& (0+255),b
 13177                           
 13178                           ; BSR set to: 1
 13179                           ;ST7540.c: 222: bufferTXST7540UCA[6] = packetSourceUS;
 13180  001C98  C01D  F156         	movff	i2CreateMessageST7540@packetSourceUS,_bufferTXST7540UCA+6
 13181                           
 13182                           ; BSR set to: 1
 13183                           ;ST7540.c: 223: bufferTXST7540UCA[7] = packetDestUS >> 8;
 13184  001C9C  5020               	movf	i2CreateMessageST7540@packetDestUS+1,w,c
 13185  001C9E  0101               	movlb	1	; () banked
 13186  001CA0  6F57               	movwf	(_bufferTXST7540UCA+7)& (0+255),b
 13187                           
 13188                           ; BSR set to: 1
 13189                           ;ST7540.c: 224: bufferTXST7540UCA[8] = packetDestUS;
 13190  001CA2  C01F  F158         	movff	i2CreateMessageST7540@packetDestUS,_bufferTXST7540UCA+8
 13191                           
 13192                           ; BSR set to: 1
 13193                           ;ST7540.c: 225: bufferTXST7540UCA[9] = packetNumberUC++;
 13194  001CA6  C0B8  F159         	movff	_packetNumberUC,_bufferTXST7540UCA+9
 13195                           
 13196                           ; BSR set to: 1
 13197  001CAA  0100               	movlb	0	; () banked
 13198  001CAC  2BB8               	incf	_packetNumberUC& (0+255),f,b
 13199                           
 13200                           ; BSR set to: 0
 13201                           ;ST7540.c: 226: bufferTXST7540UCA[10] = commandUC;
 13202  001CAE  C021  F15A         	movff	i2CreateMessageST7540@commandUC,_bufferTXST7540UCA+10
 13203                           
 13204                           ; BSR set to: 0
 13205                           ;ST7540.c: 228: for(dataBufLocUC = 0; dataBufLocUC < dataLenUC; dataBufLocUC++)
 13206  001CB2  0E00               	movlw	0
 13207  001CB4  6E2B               	movwf	i2CreateMessageST7540@dataBufLocUC,c
 13208  001CB6  D029               	goto	i2l4650
 13209  001CB8                     i2l4646:
 13210                           
 13211                           ;ST7540.c: 229: bufferTXST7540UCA[dataBufLocUC + 11] = dataBuf[dataBufLocUC];
 13212  001CB8  502B               	movf	i2CreateMessageST7540@dataBufLocUC,w,c
 13213  001CBA  0D01               	mullw	1
 13214  001CBC  C023  F025         	movff	i2CreateMessageST7540@dataBuf,??i2_CreateMessageST7540
 13215  001CC0  C024  F026         	movff	i2CreateMessageST7540@dataBuf+1,??i2_CreateMessageST7540+1
 13216  001CC4  50F3               	movf	prodl,w,c
 13217  001CC6  2625               	addwf	??i2_CreateMessageST7540,f,c
 13218  001CC8  50F4               	movf	prodh,w,c
 13219  001CCA  2226               	addwfc	??i2_CreateMessageST7540+1,f,c
 13220  001CCC  C025  FFF6         	movff	??i2_CreateMessageST7540,tblptrl
 13221  001CD0  C026  FFF7         	movff	??i2_CreateMessageST7540+1,tblptrh
 13222  001CD4  6AF8               	clrf	tblptru,c
 13223  001CD6  502B               	movf	i2CreateMessageST7540@dataBufLocUC,w,c
 13224  001CD8  6E27               	movwf	(??i2_CreateMessageST7540+2)& (0+255),c
 13225  001CDA  6A28               	clrf	(??i2_CreateMessageST7540+3)& (0+255),c
 13226  001CDC  0E0B               	movlw	11
 13227  001CDE  2627               	addwf	??i2_CreateMessageST7540+2,f,c
 13228  001CE0  0E00               	movlw	0
 13229  001CE2  2228               	addwfc	??i2_CreateMessageST7540+3,f,c
 13230  001CE4  0E50               	movlw	low _bufferTXST7540UCA
 13231  001CE6  2427               	addwf	??i2_CreateMessageST7540+2,w,c
 13232  001CE8  6ED9               	movwf	fsr2l,c
 13233  001CEA  0E01               	movlw	high _bufferTXST7540UCA
 13234  001CEC  2028               	addwfc	??i2_CreateMessageST7540+3,w,c
 13235  001CEE  6EDA               	movwf	fsr2h,c
 13236  001CF0  0E05               	movlw	(high __ramtop+-1)
 13237  001CF2  64F7               	cpfsgt	tblptrh,c
 13238  001CF4  D003               	bra	i2u359_47
 13239  001CF6  0008               	tblrd		*
 13240  001CF8  50F5               	movf	tablat,w,c
 13241  001CFA  D005               	bra	i2u359_40
 13242  001CFC                     i2u359_47:
 13243  001CFC  CFF6 FFE9          	movff	tblptrl,fsr0l
 13244  001D00  CFF7 FFEA          	movff	tblptrh,fsr0h
 13245  001D04  50EF               	movf	indf0,w,c
 13246  001D06                     i2u359_40:
 13247  001D06  6EDF               	movwf	indf2,c
 13248  001D08  2A2B               	incf	i2CreateMessageST7540@dataBufLocUC,f,c
 13249  001D0A                     i2l4650:
 13250  001D0A  5022               	movf	i2CreateMessageST7540@dataLenUC,w,c
 13251  001D0C  5C2B               	subwf	i2CreateMessageST7540@dataBufLocUC,w,c
 13252  001D0E  A0D8               	btfss	status,0,c
 13253  001D10  D7D3               	goto	i2l4646
 13254                           
 13255                           ;ST7540.c: 230: dataBufLocUC += 11;
 13256  001D12  0E0B               	movlw	11
 13257  001D14  262B               	addwf	i2CreateMessageST7540@dataBufLocUC,f,c
 13258                           
 13259                           ;ST7540.c: 232: packetCRCUS = CRC16(bufferTXST7540UCA + 4, 9 + dataLenUC - 2);
 13260  001D16  0E54               	movlw	low (_bufferTXST7540UCA+4)
 13261  001D18  6E01               	movwf	i2CRC16@data_p,c
 13262  001D1A  0E01               	movlw	high (_bufferTXST7540UCA+4)
 13263  001D1C  6E02               	movwf	i2CRC16@data_p+1,c
 13264  001D1E  0E07               	movlw	7
 13265  001D20  2422               	addwf	i2CreateMessageST7540@dataLenUC,w,c
 13266  001D22  6E03               	movwf	i2CRC16@length,c
 13267  001D24  6A04               	clrf	i2CRC16@length+1,c
 13268  001D26  0E00               	movlw	0
 13269  001D28  2204               	addwfc	i2CRC16@length+1,f,c
 13270  001D2A  EC27  F00F         	call	i2_CRC16	;wreg free
 13271  001D2E  C001  F029         	movff	?i2_CRC16,i2CreateMessageST7540@packetCRCUS
 13272  001D32  C002  F02A         	movff	?i2_CRC16+1,i2CreateMessageST7540@packetCRCUS+1
 13273                           
 13274                           ;ST7540.c: 233: bufferTXST7540UCA[dataBufLocUC++] = packetCRCUS >> 8;
 13275  001D36  502B               	movf	i2CreateMessageST7540@dataBufLocUC,w,c
 13276  001D38  0D01               	mullw	1
 13277  001D3A  0E50               	movlw	low _bufferTXST7540UCA
 13278  001D3C  24F3               	addwf	prodl,w,c
 13279  001D3E  6ED9               	movwf	fsr2l,c
 13280  001D40  0E01               	movlw	high _bufferTXST7540UCA
 13281  001D42  20F4               	addwfc	prodh,w,c
 13282  001D44  6EDA               	movwf	fsr2h,c
 13283  001D46  502A               	movf	i2CreateMessageST7540@packetCRCUS+1,w,c
 13284  001D48  6EDF               	movwf	indf2,c
 13285  001D4A  2A2B               	incf	i2CreateMessageST7540@dataBufLocUC,f,c
 13286                           
 13287                           ;ST7540.c: 234: bufferTXST7540UCA[dataBufLocUC] = packetCRCUS;
 13288  001D4C  502B               	movf	i2CreateMessageST7540@dataBufLocUC,w,c
 13289  001D4E  0D01               	mullw	1
 13290  001D50  0E50               	movlw	low _bufferTXST7540UCA
 13291  001D52  24F3               	addwf	prodl,w,c
 13292  001D54  6ED9               	movwf	fsr2l,c
 13293  001D56  0E01               	movlw	high _bufferTXST7540UCA
 13294  001D58  20F4               	addwfc	prodh,w,c
 13295  001D5A  6EDA               	movwf	fsr2h,c
 13296  001D5C  C029  FFDF         	movff	i2CreateMessageST7540@packetCRCUS,indf2
 13297                           
 13298                           ;ST7540.c: 235: bufferTXLenUCA = dataBufLocUC;
 13299  001D60  C02B  F057         	movff	i2CreateMessageST7540@dataBufLocUC,_bufferTXLenUCA
 13300  001D64  0012               	return		;funcret
 13301  001D66                     __end_ofi2_CreateMessageST7540:
 13302                           	opt stack 0
 13303                           pclatu	equ	0xFFB
 13304                           pclath	equ	0xFFA
 13305                           tblptru	equ	0xFF8
 13306                           tblptrh	equ	0xFF7
 13307                           tblptrl	equ	0xFF6
 13308                           tablat	equ	0xFF5
 13309                           prodh	equ	0xFF4
 13310                           prodl	equ	0xFF3
 13311                           intcon	equ	0xFF2
 13312                           indf0	equ	0xFEF
 13313                           postinc0	equ	0xFEE
 13314                           fsr0h	equ	0xFEA
 13315                           fsr0l	equ	0xFE9
 13316                           wreg	equ	0xFE8
 13317                           indf1	equ	0xFE7
 13318                           postdec1	equ	0xFE5
 13319                           fsr1h	equ	0xFE2
 13320                           fsr1l	equ	0xFE1
 13321                           indf2	equ	0xFDF
 13322                           postinc2	equ	0xFDE
 13323                           postdec2	equ	0xFDD
 13324                           fsr2h	equ	0xFDA
 13325                           fsr2l	equ	0xFD9
 13326                           status	equ	0xFD8
 13327                           
 13328 ;; *************** function i2_CheckBroadcastPacket *****************
 13329 ;; Defined at:
 13330 ;;		line 739 in file "Released IBC-1 Code - 03-06-2016/main.c"
 13331 ;; Parameters:    Size  Location     Type
 13332 ;;  Command         1    wreg     unsigned char 
 13333 ;; Auto vars:     Size  Location     Type
 13334 ;;  Command         1    0[COMRAM] unsigned char 
 13335 ;; Return value:  Size  Location     Type
 13336 ;;                  1    wreg      void 
 13337 ;; Registers used:
 13338 ;;		wreg, status,2, status,0
 13339 ;; Tracked objects:
 13340 ;;		On entry : 0/0
 13341 ;;		On exit  : 0/0
 13342 ;;		Unchanged: 0/0
 13343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13344 ;;      Params:         0       0       0       0       0       0       0
 13345 ;;      Locals:         1       0       0       0       0       0       0
 13346 ;;      Temps:          0       0       0       0       0       0       0
 13347 ;;      Totals:         1       0       0       0       0       0       0
 13348 ;;Total ram usage:        1 bytes
 13349 ;; Hardware stack levels used:    1
 13350 ;; This function calls:
 13351 ;;		Nothing
 13352 ;; This function is called by:
 13353 ;;		_Receive_ISC_Packet
 13354 ;; This function uses a non-reentrant model
 13355 ;;
 13356                           
 13357                           	psect	text77
 13358  002DFE                     __ptext77:
 13359                           	opt stack 0
 13360  002DFE                     i2_CheckBroadcastPacket:
 13361                           	opt stack 23
 13362                           
 13363                           ;incstack = 0
 13364                           ;i2CheckBroadcastPacket@Command stored from wreg
 13365  002DFE  6E01               	movwf	i2CheckBroadcastPacket@Command,c
 13366                           
 13367                           ;main.c: 741: BroadcastCheckUC = (Command & 0b10000000);
 13368  002E00  5001               	movf	i2CheckBroadcastPacket@Command,w,c
 13369  002E02  0B80               	andlw	128
 13370  002E04  6E3F               	movwf	_BroadcastCheckUC,c
 13371  002E06  0012               	return		;funcret
 13372  002E08                     __end_ofi2_CheckBroadcastPacket:
 13373                           	opt stack 0
 13374                           pclatu	equ	0xFFB
 13375                           pclath	equ	0xFFA
 13376                           tblptru	equ	0xFF8
 13377                           tblptrh	equ	0xFF7
 13378                           tblptrl	equ	0xFF6
 13379                           tablat	equ	0xFF5
 13380                           prodh	equ	0xFF4
 13381                           prodl	equ	0xFF3
 13382                           intcon	equ	0xFF2
 13383                           indf0	equ	0xFEF
 13384                           postinc0	equ	0xFEE
 13385                           fsr0h	equ	0xFEA
 13386                           fsr0l	equ	0xFE9
 13387                           wreg	equ	0xFE8
 13388                           indf1	equ	0xFE7
 13389                           postdec1	equ	0xFE5
 13390                           fsr1h	equ	0xFE2
 13391                           fsr1l	equ	0xFE1
 13392                           indf2	equ	0xFDF
 13393                           postinc2	equ	0xFDE
 13394                           postdec2	equ	0xFDD
 13395                           fsr2h	equ	0xFDA
 13396                           fsr2l	equ	0xFD9
 13397                           status	equ	0xFD8
 13398                           
 13399 ;; *************** function _PacketReadParamST7540 *****************
 13400 ;; Defined at:
 13401 ;;		line 264 in file "Released IBC-1 Code - 03-06-2016/ST7540.c"
 13402 ;; Parameters:    Size  Location     Type
 13403 ;;  paramName       1    wreg     unsigned char 
 13404 ;; Auto vars:     Size  Location     Type
 13405 ;;  paramName       1   25[COMRAM] unsigned char 
 13406 ;;  retValueUS      2   26[COMRAM] unsigned short 
 13407 ;; Return value:  Size  Location     Type
 13408 ;;                  2   21[COMRAM] unsigned short 
 13409 ;; Registers used:
 13410 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13411 ;; Tracked objects:
 13412 ;;		On entry : 0/0
 13413 ;;		On exit  : 0/0
 13414 ;;		Unchanged: 0/0
 13415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13416 ;;      Params:         2       0       0       0       0       0       0
 13417 ;;      Locals:         3       0       0       0       0       0       0
 13418 ;;      Temps:          2       0       0       0       0       0       0
 13419 ;;      Totals:         7       0       0       0       0       0       0
 13420 ;;Total ram usage:        7 bytes
 13421 ;; Hardware stack levels used:    1
 13422 ;; Hardware stack levels required when called:    2
 13423 ;; This function calls:
 13424 ;;		_CheckCRCST7540
 13425 ;; This function is called by:
 13426 ;;		_isr
 13427 ;;		_Receive_ISC_Packet
 13428 ;; This function uses a non-reentrant model
 13429 ;;
 13430                           
 13431                           	psect	text78
 13432  0021FE                     __ptext78:
 13433                           	opt stack 0
 13434  0021FE                     _PacketReadParamST7540:
 13435                           	opt stack 21
 13436                           
 13437                           ;incstack = 0
 13438                           ;PacketReadParamST7540@paramName stored from wreg
 13439  0021FE  6E1A               	movwf	PacketReadParamST7540@paramName,c
 13440                           
 13441                           ;ST7540.c: 265: unsigned short retValueUS = 0;
 13442  002200  0E00               	movlw	0
 13443  002202  6E1C               	movwf	PacketReadParamST7540@retValueUS+1,c
 13444  002204  0E00               	movlw	0
 13445  002206  6E1B               	movwf	PacketReadParamST7540@retValueUS,c
 13446                           
 13447                           ;ST7540.c: 267: switch(paramName){
 13448  002208  D037               	goto	i2l4288
 13449  00220A                     i2l4266:
 13450                           
 13451                           ;ST7540.c: 269: return bufferRXST7540UCA[0] - 9;
 13452  00220A  0EF7               	movlw	247
 13453  00220C  0101               	movlb	1	; () banked
 13454  00220E  259F               	addwf	_bufferRXST7540UCA& (0+255),w,b
 13455  002210  6E16               	movwf	?_PacketReadParamST7540,c
 13456  002212  6A17               	clrf	?_PacketReadParamST7540+1,c
 13457  002214  0EFF               	movlw	255
 13458  002216  2217               	addwfc	?_PacketReadParamST7540+1,f,c
 13459                           
 13460                           ; BSR set to: 1
 13461  002218  0012               	return	
 13462  00221A                     i2l4270:
 13463                           
 13464                           ;ST7540.c: 271: retValueUS |= ((unsigned short) bufferRXST7540UCA[1] << 8);
 13465  00221A  0101               	movlb	1	; () banked
 13466  00221C  51A0               	movf	(_bufferRXST7540UCA+1)& (0+255),w,b
 13467  00221E  6E19               	movwf	(??_PacketReadParamST7540+1)& (0+255),c
 13468  002220  6A18               	clrf	??_PacketReadParamST7540& (0+255),c
 13469  002222  5018               	movf	??_PacketReadParamST7540,w,c
 13470  002224  121B               	iorwf	PacketReadParamST7540@retValueUS,f,c
 13471  002226  5019               	movf	??_PacketReadParamST7540+1,w,c
 13472  002228  121C               	iorwf	PacketReadParamST7540@retValueUS+1,f,c
 13473                           
 13474                           ;ST7540.c: 272: retValueUS |= bufferRXST7540UCA[2];
 13475  00222A  0101               	movlb	1	; () banked
 13476  00222C  51A1               	movf	(_bufferRXST7540UCA+2)& (0+255),w,b
 13477  00222E  121B               	iorwf	PacketReadParamST7540@retValueUS,f,c
 13478                           
 13479                           ; BSR set to: 1
 13480                           ;ST7540.c: 273: return retValueUS;
 13481  002230  C01B  F016         	movff	PacketReadParamST7540@retValueUS,?_PacketReadParamST7540
 13482  002234  C01C  F017         	movff	PacketReadParamST7540@retValueUS+1,?_PacketReadParamST7540+1
 13483                           
 13484                           ; BSR set to: 1
 13485  002238  0012               	return	
 13486  00223A                     i2l4276:
 13487                           
 13488                           ;ST7540.c: 275: retValueUS |= ((unsigned short) bufferRXST7540UCA[3] << 8);
 13489  00223A  0101               	movlb	1	; () banked
 13490  00223C  51A2               	movf	(_bufferRXST7540UCA+3)& (0+255),w,b
 13491  00223E  6E19               	movwf	(??_PacketReadParamST7540+1)& (0+255),c
 13492  002240  6A18               	clrf	??_PacketReadParamST7540& (0+255),c
 13493  002242  5018               	movf	??_PacketReadParamST7540,w,c
 13494  002244  121B               	iorwf	PacketReadParamST7540@retValueUS,f,c
 13495  002246  5019               	movf	??_PacketReadParamST7540+1,w,c
 13496  002248  121C               	iorwf	PacketReadParamST7540@retValueUS+1,f,c
 13497                           
 13498                           ;ST7540.c: 276: retValueUS |= bufferRXST7540UCA[4];
 13499  00224A  0101               	movlb	1	; () banked
 13500  00224C  51A3               	movf	(_bufferRXST7540UCA+4)& (0+255),w,b
 13501  00224E  121B               	iorwf	PacketReadParamST7540@retValueUS,f,c
 13502                           
 13503                           ; BSR set to: 1
 13504                           ;ST7540.c: 277: return retValueUS;
 13505  002250  C01B  F016         	movff	PacketReadParamST7540@retValueUS,?_PacketReadParamST7540
 13506  002254  C01C  F017         	movff	PacketReadParamST7540@retValueUS+1,?_PacketReadParamST7540+1
 13507                           
 13508                           ; BSR set to: 1
 13509  002258  0012               	return	
 13510  00225A                     i2l127:
 13511                           
 13512                           ;ST7540.c: 279: return bufferRXST7540UCA[5];
 13513  00225A  C1A4  F016         	movff	_bufferRXST7540UCA+5,?_PacketReadParamST7540
 13514  00225E  6A17               	clrf	?_PacketReadParamST7540+1,c
 13515  002260  0012               	return	
 13516  002262                     i2l128:
 13517                           
 13518                           ;ST7540.c: 281: return bufferRXST7540UCA[6];
 13519  002262  C1A5  F016         	movff	_bufferRXST7540UCA+6,?_PacketReadParamST7540
 13520  002266  6A17               	clrf	?_PacketReadParamST7540+1,c
 13521  002268  0012               	return	
 13522  00226A                     i2l4282:
 13523                           
 13524                           ;ST7540.c: 283: return CheckCRCST7540();
 13525  00226A  EC83  F012         	call	_CheckCRCST7540	;wreg free
 13526  00226E  6E18               	movwf	??_PacketReadParamST7540& (0+255),c
 13527  002270  5018               	movf	??_PacketReadParamST7540,w,c
 13528  002272  6E16               	movwf	?_PacketReadParamST7540,c
 13529  002274  6A17               	clrf	?_PacketReadParamST7540+1,c
 13530  002276  0012               	return	
 13531  002278                     i2l4288:
 13532  002278  501A               	movf	PacketReadParamST7540@paramName,w,c
 13533                           
 13534                           ; Switch size 1, requested type "space"
 13535                           ; Number of cases is 6, Range of values is 0 to 5
 13536                           ; switch strategies available:
 13537                           ; Name         Instructions Cycles
 13538                           ; simple_byte           19    10 (average)
 13539                           ;	Chosen strategy is simple_byte
 13540  00227A  0A00               	xorlw	0	; case 0
 13541  00227C  B4D8               	btfsc	status,2,c
 13542  00227E  D7C5               	goto	i2l4266
 13543  002280  0A01               	xorlw	1	; case 1
 13544  002282  B4D8               	btfsc	status,2,c
 13545  002284  D7CA               	goto	i2l4270
 13546  002286  0A03               	xorlw	3	; case 2
 13547  002288  B4D8               	btfsc	status,2,c
 13548  00228A  D7D7               	goto	i2l4276
 13549  00228C  0A01               	xorlw	1	; case 3
 13550  00228E  B4D8               	btfsc	status,2,c
 13551  002290  D7E4               	goto	i2l127
 13552  002292  0A07               	xorlw	7	; case 4
 13553  002294  B4D8               	btfsc	status,2,c
 13554  002296  D7E5               	goto	i2l128
 13555  002298  0A01               	xorlw	1	; case 5
 13556  00229A  B4D8               	btfsc	status,2,c
 13557  00229C  D7E6               	goto	i2l4282
 13558                           
 13559                           ;ST7540.c: 286: return 0;
 13560  00229E  0E00               	movlw	0
 13561  0022A0  6E17               	movwf	?_PacketReadParamST7540+1,c
 13562  0022A2  0E00               	movlw	0
 13563  0022A4  6E16               	movwf	?_PacketReadParamST7540,c
 13564  0022A6  0012               	return	
 13565  0022A8                     __end_of_PacketReadParamST7540:
 13566                           	opt stack 0
 13567                           pclatu	equ	0xFFB
 13568                           pclath	equ	0xFFA
 13569                           tblptru	equ	0xFF8
 13570                           tblptrh	equ	0xFF7
 13571                           tblptrl	equ	0xFF6
 13572                           tablat	equ	0xFF5
 13573                           prodh	equ	0xFF4
 13574                           prodl	equ	0xFF3
 13575                           intcon	equ	0xFF2
 13576                           indf0	equ	0xFEF
 13577                           postinc0	equ	0xFEE
 13578                           fsr0h	equ	0xFEA
 13579                           fsr0l	equ	0xFE9
 13580                           wreg	equ	0xFE8
 13581                           indf1	equ	0xFE7
 13582                           postdec1	equ	0xFE5
 13583                           fsr1h	equ	0xFE2
 13584                           fsr1l	equ	0xFE1
 13585                           indf2	equ	0xFDF
 13586                           postinc2	equ	0xFDE
 13587                           postdec2	equ	0xFDD
 13588                           fsr2h	equ	0xFDA
 13589                           fsr2l	equ	0xFD9
 13590                           status	equ	0xFD8
 13591                           
 13592 ;; *************** function _CheckCRCST7540 *****************
 13593 ;; Defined at:
 13594 ;;		line 297 in file "Released IBC-1 Code - 03-06-2016/ST7540.c"
 13595 ;; Parameters:    Size  Location     Type
 13596 ;;		None
 13597 ;; Auto vars:     Size  Location     Type
 13598 ;;  receivedCRCU    2   18[COMRAM] unsigned short 
 13599 ;;  expectedCRCU    2   16[COMRAM] unsigned short 
 13600 ;;  packetLenUC     1   20[COMRAM] unsigned char 
 13601 ;; Return value:  Size  Location     Type
 13602 ;;                  1    wreg      unsigned char 
 13603 ;; Registers used:
 13604 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13605 ;; Tracked objects:
 13606 ;;		On entry : 0/0
 13607 ;;		On exit  : 0/0
 13608 ;;		Unchanged: 0/0
 13609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13610 ;;      Params:         0       0       0       0       0       0       0
 13611 ;;      Locals:         5       0       0       0       0       0       0
 13612 ;;      Temps:          3       0       0       0       0       0       0
 13613 ;;      Totals:         8       0       0       0       0       0       0
 13614 ;;Total ram usage:        8 bytes
 13615 ;; Hardware stack levels used:    1
 13616 ;; Hardware stack levels required when called:    1
 13617 ;; This function calls:
 13618 ;;		i2_CRC16
 13619 ;; This function is called by:
 13620 ;;		_PacketReadParamST7540
 13621 ;; This function uses a non-reentrant model
 13622 ;;
 13623                           
 13624                           	psect	text79
 13625  002506                     __ptext79:
 13626                           	opt stack 0
 13627  002506                     _CheckCRCST7540:
 13628                           	opt stack 21
 13629                           
 13630                           ;ST7540.c: 298: unsigned short expectedCRCUS;
 13631                           ;ST7540.c: 299: unsigned short receivedCRCUS = 0;
 13632                           
 13633                           ;incstack = 0
 13634  002506  0E00               	movlw	0
 13635  002508  6E14               	movwf	CheckCRCST7540@receivedCRCUS+1,c
 13636  00250A  0E00               	movlw	0
 13637  00250C  6E13               	movwf	CheckCRCST7540@receivedCRCUS,c
 13638                           
 13639                           ;ST7540.c: 300: unsigned char packetLenUC;
 13640                           ;ST7540.c: 302: packetLenUC = bufferRXST7540UCA[0]-2;
 13641  00250E  0101               	movlb	1	; () banked
 13642  002510  519F               	movf	_bufferRXST7540UCA& (0+255),w,b
 13643  002512  0FFE               	addlw	254
 13644  002514  6E15               	movwf	CheckCRCST7540@packetLenUC,c
 13645                           
 13646                           ; BSR set to: 1
 13647                           ;ST7540.c: 303: expectedCRCUS = CRC16(bufferRXST7540UCA, packetLenUC);
 13648  002516  0E9F               	movlw	low _bufferRXST7540UCA
 13649  002518  6E01               	movwf	i2CRC16@data_p,c
 13650  00251A  0E01               	movlw	high _bufferRXST7540UCA
 13651  00251C  6E02               	movwf	i2CRC16@data_p+1,c
 13652  00251E  C015  F003         	movff	CheckCRCST7540@packetLenUC,i2CRC16@length
 13653  002522  6A04               	clrf	i2CRC16@length+1,c
 13654  002524  EC27  F00F         	call	i2_CRC16	;wreg free
 13655  002528  C001  F011         	movff	?i2_CRC16,CheckCRCST7540@expectedCRCUS
 13656  00252C  C002  F012         	movff	?i2_CRC16+1,CheckCRCST7540@expectedCRCUS+1
 13657                           
 13658                           ;ST7540.c: 304: receivedCRCUS |= ((unsigned short) bufferRXST7540UCA[packetLenUC] << 8);
 13659  002530  5015               	movf	CheckCRCST7540@packetLenUC,w,c
 13660  002532  0D01               	mullw	1
 13661  002534  0E9F               	movlw	low _bufferRXST7540UCA
 13662  002536  24F3               	addwf	prodl,w,c
 13663  002538  6ED9               	movwf	fsr2l,c
 13664  00253A  0E01               	movlw	high _bufferRXST7540UCA
 13665  00253C  20F4               	addwfc	prodh,w,c
 13666  00253E  6EDA               	movwf	fsr2h,c
 13667  002540  50DF               	movf	indf2,w,c
 13668  002542  6E0E               	movwf	??_CheckCRCST7540& (0+255),c
 13669  002544  500E               	movf	??_CheckCRCST7540,w,c
 13670  002546  6E10               	movwf	(??_CheckCRCST7540+2)& (0+255),c
 13671  002548  6A0F               	clrf	(??_CheckCRCST7540+1)& (0+255),c
 13672  00254A  500F               	movf	??_CheckCRCST7540+1,w,c
 13673  00254C  1213               	iorwf	CheckCRCST7540@receivedCRCUS,f,c
 13674  00254E  5010               	movf	??_CheckCRCST7540+2,w,c
 13675  002550  1214               	iorwf	CheckCRCST7540@receivedCRCUS+1,f,c
 13676                           
 13677                           ;ST7540.c: 305: receivedCRCUS |= bufferRXST7540UCA[packetLenUC+1];
 13678  002552  5015               	movf	CheckCRCST7540@packetLenUC,w,c
 13679  002554  6E0E               	movwf	??_CheckCRCST7540& (0+255),c
 13680  002556  6A0F               	clrf	(??_CheckCRCST7540+1)& (0+255),c
 13681  002558  0E01               	movlw	1
 13682  00255A  260E               	addwf	??_CheckCRCST7540,f,c
 13683  00255C  0E00               	movlw	0
 13684  00255E  220F               	addwfc	??_CheckCRCST7540+1,f,c
 13685  002560  0E9F               	movlw	low _bufferRXST7540UCA
 13686  002562  240E               	addwf	??_CheckCRCST7540,w,c
 13687  002564  6ED9               	movwf	fsr2l,c
 13688  002566  0E01               	movlw	high _bufferRXST7540UCA
 13689  002568  200F               	addwfc	??_CheckCRCST7540+1,w,c
 13690  00256A  6EDA               	movwf	fsr2h,c
 13691  00256C  50DF               	movf	indf2,w,c
 13692  00256E  6E10               	movwf	(??_CheckCRCST7540+2)& (0+255),c
 13693  002570  5010               	movf	??_CheckCRCST7540+2,w,c
 13694  002572  1213               	iorwf	CheckCRCST7540@receivedCRCUS,f,c
 13695                           
 13696                           ;ST7540.c: 307: return (expectedCRCUS == receivedCRCUS);
 13697  002574  5013               	movf	CheckCRCST7540@receivedCRCUS,w,c
 13698  002576  1811               	xorwf	CheckCRCST7540@expectedCRCUS,w,c
 13699  002578  E106               	bnz	i2u268_40
 13700  00257A  5014               	movf	CheckCRCST7540@receivedCRCUS+1,w,c
 13701  00257C  1812               	xorwf	CheckCRCST7540@expectedCRCUS+1,w,c
 13702  00257E  A4D8               	btfss	status,2,c
 13703  002580  D002               	goto	i2u268_40
 13704  002582  0E01               	movlw	1
 13705  002584  0012               	return	
 13706  002586                     i2u268_40:
 13707  002586  0E00               	movlw	0
 13708  002588  0012               	return	
 13709  00258A                     __end_of_CheckCRCST7540:
 13710                           	opt stack 0
 13711                           pclatu	equ	0xFFB
 13712                           pclath	equ	0xFFA
 13713                           tblptru	equ	0xFF8
 13714                           tblptrh	equ	0xFF7
 13715                           tblptrl	equ	0xFF6
 13716                           tablat	equ	0xFF5
 13717                           prodh	equ	0xFF4
 13718                           prodl	equ	0xFF3
 13719                           intcon	equ	0xFF2
 13720                           indf0	equ	0xFEF
 13721                           postinc0	equ	0xFEE
 13722                           fsr0h	equ	0xFEA
 13723                           fsr0l	equ	0xFE9
 13724                           wreg	equ	0xFE8
 13725                           indf1	equ	0xFE7
 13726                           postdec1	equ	0xFE5
 13727                           fsr1h	equ	0xFE2
 13728                           fsr1l	equ	0xFE1
 13729                           indf2	equ	0xFDF
 13730                           postinc2	equ	0xFDE
 13731                           postdec2	equ	0xFDD
 13732                           fsr2h	equ	0xFDA
 13733                           fsr2l	equ	0xFD9
 13734                           status	equ	0xFD8
 13735                           
 13736 ;; *************** function i2_CRC16 *****************
 13737 ;; Defined at:
 13738 ;;		line 19 in file "Released IBC-1 Code - 03-06-2016/crc16.c"
 13739 ;; Parameters:    Size  Location     Type
 13740 ;;  data_p          2    0[COMRAM] PTR unsigned char 
 13741 ;;		 -> TransmitPiBufferCG(80), ReceivedPiBufferCG(7), bufferRXST7540UCA(75), bufferTXST7540UCA(79), 
 13742 ;;  length          2    2[COMRAM] unsigned short 
 13743 ;; Auto vars:     Size  Location     Type
 13744 ;;  CRC16           2   11[COMRAM] unsigned int 
 13745 ;;  CRC16           2    8[COMRAM] unsigned int 
 13746 ;;  CRC16           1   10[COMRAM] unsigned char 
 13747 ;; Return value:  Size  Location     Type
 13748 ;;                  2    0[COMRAM] unsigned short 
 13749 ;; Registers used:
 13750 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13751 ;; Tracked objects:
 13752 ;;		On entry : 0/0
 13753 ;;		On exit  : 0/0
 13754 ;;		Unchanged: 0/0
 13755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13756 ;;      Params:         4       0       0       0       0       0       0
 13757 ;;      Locals:         5       0       0       0       0       0       0
 13758 ;;      Temps:          4       0       0       0       0       0       0
 13759 ;;      Totals:        13       0       0       0       0       0       0
 13760 ;;Total ram usage:       13 bytes
 13761 ;; Hardware stack levels used:    1
 13762 ;; This function calls:
 13763 ;;		Nothing
 13764 ;; This function is called by:
 13765 ;;		_CheckCRCST7540
 13766 ;;		i2_CreateMessageST7540
 13767 ;;		i2_CreateMessageUART
 13768 ;; This function uses a non-reentrant model
 13769 ;;
 13770                           
 13771                           	psect	text80
 13772  001E4E                     __ptext80:
 13773                           	opt stack 0
 13774  001E4E                     i2_CRC16:
 13775                           	opt stack 22
 13776                           
 13777                           ;crc16.c: 21: unsigned char i;
 13778                           ;crc16.c: 22: unsigned int data;
 13779                           ;crc16.c: 23: unsigned int crc = 0xffff;
 13780                           
 13781                           ;incstack = 0
 13782  001E4E  680C               	setf	i2CRC16@crc,c
 13783  001E50  680D               	setf	i2CRC16@crc+1,c
 13784                           
 13785                           ;crc16.c: 25: if (length == 0)
 13786  001E52  5003               	movf	i2CRC16@length,w,c
 13787  001E54  1004               	iorwf	i2CRC16@length+1,w,c
 13788  001E56  A4D8               	btfss	status,2,c
 13789  001E58  D005               	goto	i2l3850
 13790                           
 13791                           ;crc16.c: 26: return (~crc);
 13792  001E5A  1C0C               	comf	i2CRC16@crc,w,c
 13793  001E5C  6E01               	movwf	?i2_CRC16,c
 13794  001E5E  1C0D               	comf	i2CRC16@crc+1,w,c
 13795  001E60  6E02               	movwf	?i2_CRC16+1,c
 13796  001E62  0012               	return	
 13797  001E64                     i2l3850:
 13798                           
 13799                           ;crc16.c: 29: {
 13800                           ;crc16.c: 30: for (i=0, data=(unsigned int)0xff & *data_p++;
 13801  001E64  0E00               	movlw	0
 13802  001E66  6E0B               	movwf	i2CRC16@i,c
 13803  001E68  C001  FFD9         	movff	i2CRC16@data_p,fsr2l
 13804  001E6C  C002  FFDA         	movff	i2CRC16@data_p+1,fsr2h
 13805  001E70  50DF               	movf	indf2,w,c
 13806  001E72  6E05               	movwf	??i2_CRC16& (0+255),c
 13807  001E74  5005               	movf	??i2_CRC16,w,c
 13808  001E76  6E09               	movwf	i2CRC16@data,c
 13809  001E78  6A0A               	clrf	i2CRC16@data+1,c
 13810  001E7A  4A01               	infsnz	i2CRC16@data_p,f,c
 13811  001E7C  2A02               	incf	i2CRC16@data_p+1,f,c
 13812  001E7E                     i2l3856:
 13813                           
 13814                           ;crc16.c: 31: i < 8;
 13815                           ;crc16.c: 32: i++, data >>= 1)
 13816  001E7E  0E07               	movlw	7
 13817  001E80  640B               	cpfsgt	i2CRC16@i,c
 13818  001E82  D001               	goto	i2l3860
 13819  001E84  D028               	goto	i2l3868
 13820  001E86                     i2l3860:
 13821                           
 13822                           ;crc16.c: 33: {
 13823                           ;crc16.c: 34: if ((crc & 0x0001) ^ (data & 0x0001))
 13824  001E86  0E01               	movlw	1
 13825  001E88  1409               	andwf	i2CRC16@data,w,c
 13826  001E8A  6E05               	movwf	??i2_CRC16& (0+255),c
 13827  001E8C  0E00               	movlw	0
 13828  001E8E  140A               	andwf	i2CRC16@data+1,w,c
 13829  001E90  6E06               	movwf	(??i2_CRC16+1)& (0+255),c
 13830  001E92  0E01               	movlw	1
 13831  001E94  140C               	andwf	i2CRC16@crc,w,c
 13832  001E96  6E07               	movwf	(??i2_CRC16+2)& (0+255),c
 13833  001E98  0E00               	movlw	0
 13834  001E9A  140D               	andwf	i2CRC16@crc+1,w,c
 13835  001E9C  6E08               	movwf	(??i2_CRC16+3)& (0+255),c
 13836  001E9E  5005               	movf	??i2_CRC16,w,c
 13837  001EA0  1A07               	xorwf	??i2_CRC16+2,f,c
 13838  001EA2  5006               	movf	??i2_CRC16+1,w,c
 13839  001EA4  1A08               	xorwf	??i2_CRC16+3,f,c
 13840  001EA6  5007               	movf	??i2_CRC16+2,w,c
 13841  001EA8  1008               	iorwf	??i2_CRC16+3,w,c
 13842  001EAA  B4D8               	btfsc	status,2,c
 13843  001EAC  D00C               	goto	i2l3864
 13844                           
 13845                           ;crc16.c: 35: crc = (crc >> 1) ^ 0x8408;
 13846  001EAE  90D8               	bcf	status,0,c
 13847  001EB0  300D               	rrcf	i2CRC16@crc+1,w,c
 13848  001EB2  6E06               	movwf	(??i2_CRC16+1)& (0+255),c
 13849  001EB4  300C               	rrcf	i2CRC16@crc,w,c
 13850  001EB6  6E05               	movwf	??i2_CRC16& (0+255),c
 13851  001EB8  0E08               	movlw	8
 13852  001EBA  1805               	xorwf	??i2_CRC16,w,c
 13853  001EBC  6E0C               	movwf	i2CRC16@crc,c
 13854  001EBE  0E84               	movlw	132
 13855  001EC0  1806               	xorwf	??i2_CRC16+1,w,c
 13856  001EC2  6E0D               	movwf	i2CRC16@crc+1,c
 13857  001EC4  D003               	goto	i2l254
 13858  001EC6                     i2l3864:
 13859                           
 13860                           ;crc16.c: 36: else crc >>= 1;
 13861  001EC6  90D8               	bcf	status,0,c
 13862  001EC8  320D               	rrcf	i2CRC16@crc+1,f,c
 13863  001ECA  320C               	rrcf	i2CRC16@crc,f,c
 13864  001ECC                     i2l254:
 13865  001ECC  2A0B               	incf	i2CRC16@i,f,c
 13866  001ECE  90D8               	bcf	status,0,c
 13867  001ED0  320A               	rrcf	i2CRC16@data+1,f,c
 13868  001ED2  3209               	rrcf	i2CRC16@data,f,c
 13869  001ED4  D7D4               	goto	i2l3856
 13870  001ED6                     i2l3868:
 13871                           
 13872                           ;crc16.c: 37: }
 13873                           ;crc16.c: 38: } while (--length);
 13874  001ED6  0603               	decf	i2CRC16@length,f,c
 13875  001ED8  A0D8               	btfss	status,0,c
 13876  001EDA  0604               	decf	i2CRC16@length+1,f,c
 13877  001EDC  5003               	movf	i2CRC16@length,w,c
 13878  001EDE  1004               	iorwf	i2CRC16@length+1,w,c
 13879  001EE0  A4D8               	btfss	status,2,c
 13880  001EE2  D7C0               	goto	i2l3850
 13881                           
 13882                           ;crc16.c: 40: crc = ~crc;
 13883  001EE4  1E0C               	comf	i2CRC16@crc,f,c
 13884  001EE6  1E0D               	comf	i2CRC16@crc+1,f,c
 13885                           
 13886                           ;crc16.c: 41: data = crc;
 13887  001EE8  C00C  F009         	movff	i2CRC16@crc,i2CRC16@data
 13888  001EEC  C00D  F00A         	movff	i2CRC16@crc+1,i2CRC16@data+1
 13889                           
 13890                           ;crc16.c: 42: crc = (crc << 8) | (data >> 8 & 0xff);
 13891  001EF0  C009  F005         	movff	i2CRC16@data,??i2_CRC16
 13892  001EF4  C00A  F006         	movff	i2CRC16@data+1,??i2_CRC16+1
 13893  001EF8  C006  F005         	movff	??i2_CRC16+1,??i2_CRC16
 13894  001EFC  6A06               	clrf	??i2_CRC16+1,c
 13895  001EFE  5005               	movf	??i2_CRC16,w,c
 13896  001F00  C00C  F007         	movff	i2CRC16@crc,??i2_CRC16+2
 13897  001F04  C00D  F008         	movff	i2CRC16@crc+1,??i2_CRC16+3
 13898  001F08  C007  F008         	movff	??i2_CRC16+2,??i2_CRC16+3
 13899  001F0C  6A07               	clrf	??i2_CRC16+2,c
 13900  001F0E  1007               	iorwf	??i2_CRC16+2,w,c
 13901  001F10  6E0C               	movwf	i2CRC16@crc,c
 13902  001F12  5008               	movf	??i2_CRC16+3,w,c
 13903  001F14  6E0D               	movwf	i2CRC16@crc+1,c
 13904                           
 13905                           ;crc16.c: 44: return (crc);
 13906  001F16  C00C  F001         	movff	i2CRC16@crc,?i2_CRC16
 13907  001F1A  C00D  F002         	movff	i2CRC16@crc+1,?i2_CRC16+1
 13908  001F1E  0012               	return	
 13909  001F20                     __end_ofi2_CRC16:
 13910                           	opt stack 0
 13911                           pclatu	equ	0xFFB
 13912                           pclath	equ	0xFFA
 13913                           tblptru	equ	0xFF8
 13914                           tblptrh	equ	0xFF7
 13915                           tblptrl	equ	0xFF6
 13916                           tablat	equ	0xFF5
 13917                           prodh	equ	0xFF4
 13918                           prodl	equ	0xFF3
 13919                           intcon	equ	0xFF2
 13920                           indf0	equ	0xFEF
 13921                           postinc0	equ	0xFEE
 13922                           fsr0h	equ	0xFEA
 13923                           fsr0l	equ	0xFE9
 13924                           wreg	equ	0xFE8
 13925                           indf1	equ	0xFE7
 13926                           postdec1	equ	0xFE5
 13927                           fsr1h	equ	0xFE2
 13928                           fsr1l	equ	0xFE1
 13929                           indf2	equ	0xFDF
 13930                           postinc2	equ	0xFDE
 13931                           postdec2	equ	0xFDD
 13932                           fsr2h	equ	0xFDA
 13933                           fsr2l	equ	0xFD9
 13934                           status	equ	0xFD8
 13935                           
 13936 ;; *************** function _PacketDataST7540 *****************
 13937 ;; Defined at:
 13938 ;;		line 289 in file "Released IBC-1 Code - 03-06-2016/ST7540.c"
 13939 ;; Parameters:    Size  Location     Type
 13940 ;;		None
 13941 ;; Auto vars:     Size  Location     Type
 13942 ;;		None
 13943 ;; Return value:  Size  Location     Type
 13944 ;;                  2    0[COMRAM] PTR unsigned char 
 13945 ;; Registers used:
 13946 ;;		wreg, status,2, status,0
 13947 ;; Tracked objects:
 13948 ;;		On entry : 0/0
 13949 ;;		On exit  : 0/0
 13950 ;;		Unchanged: 0/0
 13951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13952 ;;      Params:         2       0       0       0       0       0       0
 13953 ;;      Locals:         0       0       0       0       0       0       0
 13954 ;;      Temps:          0       0       0       0       0       0       0
 13955 ;;      Totals:         2       0       0       0       0       0       0
 13956 ;;Total ram usage:        2 bytes
 13957 ;; Hardware stack levels used:    1
 13958 ;; This function calls:
 13959 ;;		Nothing
 13960 ;; This function is called by:
 13961 ;;		_Receive_ISC_Packet
 13962 ;; This function uses a non-reentrant model
 13963 ;;
 13964                           
 13965                           	psect	text81
 13966  002E08                     __ptext81:
 13967                           	opt stack 0
 13968  002E08                     _PacketDataST7540:
 13969                           	opt stack 23
 13970                           
 13971                           ;ST7540.c: 290: return (bufferRXST7540UCA + 7);
 13972                           
 13973                           ;incstack = 0
 13974  002E08  0EA6               	movlw	low (_bufferRXST7540UCA+7)
 13975  002E0A  6E01               	movwf	?_PacketDataST7540,c
 13976  002E0C  0E01               	movlw	high (_bufferRXST7540UCA+7)
 13977  002E0E  6E02               	movwf	?_PacketDataST7540+1,c
 13978  002E10  0012               	return	
 13979  002E12                     __end_of_PacketDataST7540:
 13980                           	opt stack 0
 13981                           pclatu	equ	0xFFB
 13982                           pclath	equ	0xFFA
 13983                           tblptru	equ	0xFF8
 13984                           tblptrh	equ	0xFF7
 13985                           tblptrl	equ	0xFF6
 13986                           tablat	equ	0xFF5
 13987                           prodh	equ	0xFF4
 13988                           prodl	equ	0xFF3
 13989                           intcon	equ	0xFF2
 13990                           indf0	equ	0xFEF
 13991                           postinc0	equ	0xFEE
 13992                           fsr0h	equ	0xFEA
 13993                           fsr0l	equ	0xFE9
 13994                           wreg	equ	0xFE8
 13995                           indf1	equ	0xFE7
 13996                           postdec1	equ	0xFE5
 13997                           fsr1h	equ	0xFE2
 13998                           fsr1l	equ	0xFE1
 13999                           indf2	equ	0xFDF
 14000                           postinc2	equ	0xFDE
 14001                           postdec2	equ	0xFDD
 14002                           fsr2h	equ	0xFDA
 14003                           fsr2l	equ	0xFD9
 14004                           status	equ	0xFD8
 14005                           
 14006 ;; *************** function _RXReadyISRHandlerST7540 *****************
 14007 ;; Defined at:
 14008 ;;		line 198 in file "Released IBC-1 Code - 03-06-2016/ST7540.c"
 14009 ;; Parameters:    Size  Location     Type
 14010 ;;		None
 14011 ;; Auto vars:     Size  Location     Type
 14012 ;;  ReadIOCC        1    0[COMRAM] unsigned char 
 14013 ;; Return value:  Size  Location     Type
 14014 ;;                  1    wreg      void 
 14015 ;; Registers used:
 14016 ;;		wreg
 14017 ;; Tracked objects:
 14018 ;;		On entry : 0/0
 14019 ;;		On exit  : 0/0
 14020 ;;		Unchanged: 0/0
 14021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14022 ;;      Params:         0       0       0       0       0       0       0
 14023 ;;      Locals:         1       0       0       0       0       0       0
 14024 ;;      Temps:          0       0       0       0       0       0       0
 14025 ;;      Totals:         1       0       0       0       0       0       0
 14026 ;;Total ram usage:        1 bytes
 14027 ;; Hardware stack levels used:    1
 14028 ;; This function calls:
 14029 ;;		Nothing
 14030 ;; This function is called by:
 14031 ;;		_isr
 14032 ;; This function uses a non-reentrant model
 14033 ;;
 14034                           
 14035                           	psect	text82
 14036  002D78                     __ptext82:
 14037                           	opt stack 0
 14038  002D78                     _RXReadyISRHandlerST7540:
 14039                           	opt stack 24
 14040                           
 14041                           ;ST7540.c: 200: char ReadIOCC;
 14042                           ;ST7540.c: 201: if((flagST7540 & 2) && !PORTBbits.RB0)
 14043                           
 14044                           ;incstack = 0
 14045  002D78  B259               	btfsc	_flagST7540,1,c
 14046  002D7A  B081               	btfsc	3969,0,c	;volatile
 14047  002D7C  D001               	goto	i2l4756
 14048                           
 14049                           ;ST7540.c: 202: SSP2CON1bits.SSPEN = 1;
 14050  002D7E  8A6C               	bsf	3948,5,c	;volatile
 14051  002D80                     i2l4756:
 14052                           
 14053                           ;ST7540.c: 203: ReadIOCC = PORTBbits.RB4;
 14054  002D80  0E00               	movlw	0
 14055  002D82  B881               	btfsc	3969,4,c	;volatile
 14056  002D84  0E01               	movlw	1
 14057  002D86  6E01               	movwf	RXReadyISRHandlerST7540@ReadIOCC,c
 14058  002D88  0012               	return		;funcret
 14059  002D8A                     __end_of_RXReadyISRHandlerST7540:
 14060                           	opt stack 0
 14061                           pclatu	equ	0xFFB
 14062                           pclath	equ	0xFFA
 14063                           tblptru	equ	0xFF8
 14064                           tblptrh	equ	0xFF7
 14065                           tblptrl	equ	0xFF6
 14066                           tablat	equ	0xFF5
 14067                           prodh	equ	0xFF4
 14068                           prodl	equ	0xFF3
 14069                           intcon	equ	0xFF2
 14070                           indf0	equ	0xFEF
 14071                           postinc0	equ	0xFEE
 14072                           fsr0h	equ	0xFEA
 14073                           fsr0l	equ	0xFE9
 14074                           wreg	equ	0xFE8
 14075                           indf1	equ	0xFE7
 14076                           postdec1	equ	0xFE5
 14077                           fsr1h	equ	0xFE2
 14078                           fsr1l	equ	0xFE1
 14079                           indf2	equ	0xFDF
 14080                           postinc2	equ	0xFDE
 14081                           postdec2	equ	0xFDD
 14082                           fsr2h	equ	0xFDA
 14083                           fsr2l	equ	0xFD9
 14084                           status	equ	0xFD8
 14085                           
 14086 ;; *************** function _DataReadyST7540 *****************
 14087 ;; Defined at:
 14088 ;;		line 293 in file "Released IBC-1 Code - 03-06-2016/ST7540.c"
 14089 ;; Parameters:    Size  Location     Type
 14090 ;;		None
 14091 ;; Auto vars:     Size  Location     Type
 14092 ;;		None
 14093 ;; Return value:  Size  Location     Type
 14094 ;;                  1    wreg      unsigned char 
 14095 ;; Registers used:
 14096 ;;		wreg, status,2, status,0
 14097 ;; Tracked objects:
 14098 ;;		On entry : 0/0
 14099 ;;		On exit  : 0/0
 14100 ;;		Unchanged: 0/0
 14101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14102 ;;      Params:         0       0       0       0       0       0       0
 14103 ;;      Locals:         0       0       0       0       0       0       0
 14104 ;;      Temps:          0       0       0       0       0       0       0
 14105 ;;      Totals:         0       0       0       0       0       0       0
 14106 ;;Total ram usage:        0 bytes
 14107 ;; Hardware stack levels used:    1
 14108 ;; This function calls:
 14109 ;;		Nothing
 14110 ;; This function is called by:
 14111 ;;		_isr
 14112 ;; This function uses a non-reentrant model
 14113 ;;
 14114                           
 14115                           	psect	text83
 14116  002E24                     __ptext83:
 14117                           	opt stack 0
 14118  002E24                     _DataReadyST7540:
 14119                           	opt stack 24
 14120                           
 14121                           ;ST7540.c: 294: return (flagST7540 & 4);
 14122                           
 14123                           ;incstack = 0
 14124  002E24  5059               	movf	_flagST7540,w,c
 14125  002E26  0B04               	andlw	4
 14126  002E28  0012               	return	
 14127  002E2A                     __end_of_DataReadyST7540:
 14128                           	opt stack 0
 14129                           pclatu	equ	0xFFB
 14130                           pclath	equ	0xFFA
 14131                           tblptru	equ	0xFF8
 14132                           tblptrh	equ	0xFF7
 14133                           tblptrl	equ	0xFF6
 14134                           tablat	equ	0xFF5
 14135                           prodh	equ	0xFF4
 14136                           prodl	equ	0xFF3
 14137                           intcon	equ	0xFF2
 14138                           indf0	equ	0xFEF
 14139                           postinc0	equ	0xFEE
 14140                           fsr0h	equ	0xFEA
 14141                           fsr0l	equ	0xFE9
 14142                           wreg	equ	0xFE8
 14143                           indf1	equ	0xFE7
 14144                           postdec1	equ	0xFE5
 14145                           fsr1h	equ	0xFE2
 14146                           fsr1l	equ	0xFE1
 14147                           indf2	equ	0xFDF
 14148                           postinc2	equ	0xFDE
 14149                           postdec2	equ	0xFDD
 14150                           fsr2h	equ	0xFDA
 14151                           fsr2l	equ	0xFD9
 14152                           status	equ	0xFD8
 14153                           pclatu	equ	0xFFB
 14154                           pclath	equ	0xFFA
 14155                           tblptru	equ	0xFF8
 14156                           tblptrh	equ	0xFF7
 14157                           tblptrl	equ	0xFF6
 14158                           tablat	equ	0xFF5
 14159                           prodh	equ	0xFF4
 14160                           prodl	equ	0xFF3
 14161                           intcon	equ	0xFF2
 14162                           indf0	equ	0xFEF
 14163                           postinc0	equ	0xFEE
 14164                           fsr0h	equ	0xFEA
 14165                           fsr0l	equ	0xFE9
 14166                           wreg	equ	0xFE8
 14167                           indf1	equ	0xFE7
 14168                           postdec1	equ	0xFE5
 14169                           fsr1h	equ	0xFE2
 14170                           fsr1l	equ	0xFE1
 14171                           indf2	equ	0xFDF
 14172                           postinc2	equ	0xFDE
 14173                           postdec2	equ	0xFDD
 14174                           fsr2h	equ	0xFDA
 14175                           fsr2l	equ	0xFD9
 14176                           status	equ	0xFD8
 14177                           
 14178                           	psect	rparam
 14179  0000                     pclatu	equ	0xFFB
 14180                           pclath	equ	0xFFA
 14181                           tblptru	equ	0xFF8
 14182                           tblptrh	equ	0xFF7
 14183                           tblptrl	equ	0xFF6
 14184                           tablat	equ	0xFF5
 14185                           prodh	equ	0xFF4
 14186                           prodl	equ	0xFF3
 14187                           intcon	equ	0xFF2
 14188                           indf0	equ	0xFEF
 14189                           postinc0	equ	0xFEE
 14190                           fsr0h	equ	0xFEA
 14191                           fsr0l	equ	0xFE9
 14192                           wreg	equ	0xFE8
 14193                           indf1	equ	0xFE7
 14194                           postdec1	equ	0xFE5
 14195                           fsr1h	equ	0xFE2
 14196                           fsr1l	equ	0xFE1
 14197                           indf2	equ	0xFDF
 14198                           postinc2	equ	0xFDE
 14199                           postdec2	equ	0xFDD
 14200                           fsr2h	equ	0xFDA
 14201                           fsr2l	equ	0xFD9
 14202                           status	equ	0xFD8
 14203                           
 14204                           	psect	temp
 14205  00005E                     btemp:
 14206                           	opt stack 0
 14207  00005E                     	ds	1
 14208  0000                     int$flags	set	btemp
 14209                           pclatu	equ	0xFFB
 14210                           pclath	equ	0xFFA
 14211                           tblptru	equ	0xFF8
 14212                           tblptrh	equ	0xFF7
 14213                           tblptrl	equ	0xFF6
 14214                           tablat	equ	0xFF5
 14215                           prodh	equ	0xFF4
 14216                           prodl	equ	0xFF3
 14217                           intcon	equ	0xFF2
 14218                           indf0	equ	0xFEF
 14219                           postinc0	equ	0xFEE
 14220                           fsr0h	equ	0xFEA
 14221                           fsr0l	equ	0xFE9
 14222                           wreg	equ	0xFE8
 14223                           indf1	equ	0xFE7
 14224                           postdec1	equ	0xFE5
 14225                           fsr1h	equ	0xFE2
 14226                           fsr1l	equ	0xFE1
 14227                           indf2	equ	0xFDF
 14228                           postinc2	equ	0xFDE
 14229                           postdec2	equ	0xFDD
 14230                           fsr2h	equ	0xFDA
 14231                           fsr2l	equ	0xFD9
 14232                           status	equ	0xFD8


Data Sizes:
    Strings     1
    Constant    0
    Data        1
    BSS         1285
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     61      93
    BANK0           160     52     150
    BANK1           256      0     234
    BANK2           256      0     240
    BANK3           256      0     251
    BANK4           256      0      71
    BANK5           256      0       0

Pointer List with Targets:

    CRC16@data_p	PTR unsigned char  size(2) Largest target is 80
		 -> TransmitPiBufferCG(BANK1[80]), ReceivedPiBufferCG(BANK0[7]), bufferRXST7540UCA(BANK1[75]), bufferTXST7540UCA(BANK1[79]), 

    CreateMessageUART@dataBuf	PTR unsigned char  size(2) Largest target is 75
		 -> PiDefaultData(BANK0[2]), Receive_ISC_Packet@tempIscSerial(COMRAM[2]), bufferRXST7540UCA(BANK1[75]), 

    sp__PacketDataST7540	PTR unsigned char  size(2) Largest target is 75
		 -> bufferRXST7540UCA(BANK1[75]), 

    CreateMessageST7540@dataBuf	PTR unsigned char  size(2) Largest target is 2
		 -> Assign_ISC_New_SN@ISC_NEW_SN(COMRAM[2]), STR_14(CODE[1]), STR_13(CODE[1]), STR_12(CODE[1]), 
		 -> STR_11(CODE[1]), STR_10(CODE[1]), STR_9(CODE[1]), STR_8(CODE[1]), 
		 -> STR_7(CODE[1]), STR_6(CODE[1]), STR_5(CODE[1]), STR_4(CODE[1]), 
		 -> STR_3(CODE[1]), STR_2(CODE[1]), STR_1(CODE[1]), 

    ReadConfigST7540@configDataUS	PTR unsigned um size(2) Largest target is 3
		 -> InitST7540@configDataRXUS(BANK0[3]), 

    ReadConfigST7540@frameDataUS	PTR unsigned um size(2) Largest target is 3
		 -> InitST7540@frameDataRXUS(BANK0[3]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _isr in COMRAM

    _isr->_Receive_ISC_Packet
    _UART_TX_ISRHandler->i2_UART_Write
    _Transmit_NULL_Packet->i2_CreateMessageST7540
    _Receive_ISC_Packet->i2_CreateMessageST7540
    i2_SendUARTPacket->i2_UART_Write
    i2_CreateMessageUART->_PacketReadParamST7540
    i2_CreateMessageST7540->_PacketReadParamST7540
    _PacketReadParamST7540->_CheckCRCST7540
    _CheckCRCST7540->i2_CRC16

Critical Paths under _main in BANK0

    _main->_Receive_Pi_Packet
    _getResetButtonState->_WaitTickCount
    _getKeySwitchState->_ReadMAINS_ZeroCrossing
    _getFireButtonState->_WaitTickCount
    _Transmit_Pi_Default_Data->_CreateMessageUART
    _SendUARTPacket->_UART_Write
    _CreateMessageUART->_CRC16
    _Transmit_BLAST_Command_Packet->_CreateMessageST7540
    _Receive_Pi_Packet->_CreateMessageST7540
    _PacketReadParamUART->_CheckCRCUART
    _CheckCRCUART->_CRC16
    _Check_ALL_ISC->_CreateMessageST7540
    _CreateMessageST7540->_PacketReadParamUART
    _ReadFireOut->___ftadd
    _ReadFireOut->___ftdiv
    ___lwtoft->___ftpack
    ___ftdiv->___ftpack
    ___ftadd->___lwtoft
    _InitSystem->_UART_Init
    _checkCableFaults->_ReadEarthLeakage
    _ReadEarthLeakage->_ReadAnalogVoltage
    _ReadCableFault->_ReadAnalogVoltage
    _UART_Init->___aldiv
    _InitST7540->_WriteConfigST7540
    _WriteConfigST7540->_WaitTickCount
    _EEPROMRead->_Read_b_eep
    _EEPROMClearReset->_Write_b_eep
    _FIRE->_ReadMAINS_ZeroCrossing
    _GenerateMissingPulse->_ReadMAINS_ZeroCrossing
    _ReadMAINS_ZeroCrossing->_WaitTickCount
    _EEPROMSetReset->_Write_b_eep

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   45168
                                             50 BANK0      2     2      0
                     _ClearDataReady
                      _DataReadyUART
                     _EEPROMSetReset
                               _FIRE
                         _InitSystem
                     _LineIdleST7540
                _PacketReadParamUART
                        _ReadFireOut
                  _Receive_Pi_Packet
                     _SendUARTPacket
                 _StartPreArmedTimer
                _StartTransmitST7540
                  _StopPostFireTimer
                  _StopPreArmedTimer
                 _TransmitBusyST7540
      _Transmit_BLAST_Command_Packet
           _Transmit_Pi_Default_Data
                _TurnBuzzer_AlarmOff
                 _TurnBuzzer_AlarmOn
                       _TurnRelayOff
                        _TurnRelayOn
                        _TurnSSR1Off
                         _TurnSSR1On
                      _WaitTickCount
                             ___ftge
                   _checkCableFaults
                 _getFireButtonState
                  _getIBCDefaultData
                  _getKeySwitchState
                _getResetButtonState
                  _resetUARTPointers
 ---------------------------------------------------------------------------------
 (1) _resetUARTPointers                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getResetButtonState                                  2     2      0     858
                                              2 BANK0      2     2      0
                      _WaitTickCount
 ---------------------------------------------------------------------------------
 (1) _getKeySwitchState                                    0     0      0    1603
             _ReadMAINS_ZeroCrossing
                      _WaitTickCount
 ---------------------------------------------------------------------------------
 (1) _getIBCDefaultData                                    2     2      0      36
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _getFireButtonState                                   2     2      0     858
                                              2 BANK0      2     2      0
                      _WaitTickCount
 ---------------------------------------------------------------------------------
 (1) ___ftge                                               9     3      6     264
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (1) _TurnRelayOn                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TurnBuzzer_AlarmOn                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TurnBuzzer_AlarmOff                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Transmit_Pi_Default_Data                             0     0      0    3097
                  _CreateMessageUART
                     _SendUARTPacket
 ---------------------------------------------------------------------------------
 (2) _SendUARTPacket                                       0     0      0      22
                         _UART_Write
 ---------------------------------------------------------------------------------
 (3) _UART_Write                                           1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _CreateMessageUART                                   11     5      6    3075
                                             13 BANK0     11     5      6
                              _CRC16
 ---------------------------------------------------------------------------------
 (1) _Transmit_BLAST_Command_Packet                        2     2      0    6209
                                             44 BANK0      2     2      0
                _CreateMessageST7540
                     _LineIdleST7540
                _StartTransmitST7540
                 _TransmitBusyST7540
 ---------------------------------------------------------------------------------
 (2) _TransmitBusyST7540                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _StartTransmitST7540                                  1     1      0       1
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _LineIdleST7540                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _StopPreArmedTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _StopPostFireTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _StartPreArmedTimer                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Receive_Pi_Packet                                    6     6      0   14263
                                             44 BANK0      6     6      0
               _CheckBroadcastPacket
                      _Check_ALL_ISC
                _CreateMessageST7540
                _PacketReadParamUART
 ---------------------------------------------------------------------------------
 (2) _PacketReadParamUART                                  7     5      2    1563
                                             22 BANK0      7     5      2
                       _CheckCRCUART
 ---------------------------------------------------------------------------------
 (3) _CheckCRCUART                                         9     9      0    1492
                                             13 BANK0      9     9      0
                              _CRC16
 ---------------------------------------------------------------------------------
 (2) _Check_ALL_ISC                                        0     0      0    6208
                _CreateMessageST7540
 ---------------------------------------------------------------------------------
 (2) _CreateMessageST7540                                 15     7      8    6208
                                             29 BANK0     15     7      8
                              _CRC16
                _PacketReadParamUART (ARG)
 ---------------------------------------------------------------------------------
 (3) _CRC16                                               13     9      4    1419
                                              0 BANK0     13     9      4
 ---------------------------------------------------------------------------------
 (2) _CheckBroadcastPacket                                 1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ReadFireOut                                          2     2      0    8742
                                             23 BANK0      2     2      0
                  _ReadAnalogVoltage
             _ReadMAINS_ZeroCrossing
                            ___ftadd
                            ___ftdiv
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    2117
                                              8 BANK0      3     0      3
                  _ReadAnalogVoltage (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    2541
                                              8 BANK0     15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    3203
                                             11 BANK0     12     6      6
                  _ReadAnalogVoltage (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2031
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _InitSystem                                           0     0      0    3637
                   _EEPROMClearReset
                         _EEPROMRead
                         _InitST7540
               _ReceiveNewDataST7540
                       _TurnRelayOff
                        _TurnSSR1Off
                          _UART_Init
                   _checkCableFaults
 ---------------------------------------------------------------------------------
 (1) _checkCableFaults                                     0     0      0     160
                     _ReadCableFault
                   _ReadEarthLeakage
            _TurnCableFaultDetectOff
             _TurnCableFaultDetectOn
 ---------------------------------------------------------------------------------
 (2) _TurnCableFaultDetectOn                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TurnCableFaultDetectOff                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ReadEarthLeakage                                     6     6      0     115
                                              3 BANK0      6     6      0
                  _ReadAnalogVoltage
 ---------------------------------------------------------------------------------
 (2) _ReadCableFault                                       2     2      0      45
                                              3 BANK0      2     2      0
                  _ReadAnalogVoltage
 ---------------------------------------------------------------------------------
 (3) _ReadAnalogVoltage                                    3     1      2      22
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _UART_Init                                           14    10      4     777
                                             14 BANK0     14    10      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     556
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _TurnRelayOff                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ReceiveNewDataST7540                                 1     1      0       1
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _InitST7540                                          12    12      0    1812
                                             13 BANK0     12    12      0
                     _InitST7540Pins
                   _ReadConfigST7540
                  _WriteConfigST7540
 ---------------------------------------------------------------------------------
 (3) _WriteConfigST7540                                   11     5      6    1247
                                              2 BANK0     11     5      6
                      _WaitTickCount
 ---------------------------------------------------------------------------------
 (3) _ReadConfigST7540                                     9     5      4     329
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (3) _InitST7540Pins                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EEPROMRead                                           2     2      0     284
                                              2 BANK0      2     2      0
                         _Read_b_eep
 ---------------------------------------------------------------------------------
 (3) _Read_b_eep                                           2     0      2     214
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EEPROMClearReset                                     2     2      0     603
                                              4 BANK0      2     2      0
                           _Busy_eep
                        _Write_b_eep
 ---------------------------------------------------------------------------------
 (1) _FIRE                                                 2     2      0    2462
                                              5 BANK0      2     2      0
               _GenerateMissingPulse
             _ReadMAINS_ZeroCrossing
                    _StartBlastTimer
                 _StartPostFireTimer
                     _StopBlastTimer
 ---------------------------------------------------------------------------------
 (2) _StopBlastTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _StartPostFireTimer                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _StartBlastTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _GenerateMissingPulse                                 0     0      0    1603
             _ReadMAINS_ZeroCrossing
                        _TurnSSR1Off
                         _TurnSSR1On
                      _WaitTickCount
 ---------------------------------------------------------------------------------
 (1) _TurnSSR1On                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TurnSSR1Off                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ReadMAINS_ZeroCrossing                               3     3      0     813
                                              2 BANK0      3     3      0
                      _WaitTickCount
 ---------------------------------------------------------------------------------
 (2) _WaitTickCount                                        2     0      2     790
                                              0 BANK0      2     0      2
                        _WaitNewTick
 ---------------------------------------------------------------------------------
 (3) _WaitNewTick                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EEPROMSetReset                                       2     2      0     603
                                              4 BANK0      2     2      0
                           _Busy_eep
                        _Write_b_eep
 ---------------------------------------------------------------------------------
 (3) _Write_b_eep                                          4     1      3     580
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (3) _Busy_eep                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DataReadyUART                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ClearDataReady                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                 14    14      0    5581
                                             47 COMRAM    14    14      0
                    _DataReadyST7540
              _PacketReadParamST7540
            _RXReadyISRHandlerST7540
                 _Receive_ISC_Packet
                _SPIISRHandlerST7540
               _Transmit_NULL_Packet
                          _UART_Read
                 _UART_TX_ISRHandler
             i2_ReceiveNewDataST7540
 ---------------------------------------------------------------------------------
 (7) _UART_TX_ISRHandler                                   0     0      0      22
                       i2_UART_Write
 ---------------------------------------------------------------------------------
 (7) _UART_Read                                            1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _Transmit_NULL_Packet                                 0     0      0    1244
              i2_CreateMessageST7540
 ---------------------------------------------------------------------------------
 (7) _SPIISRHandlerST7540                                  1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _Receive_ISC_Packet                                   4     4      0    3584
                                             43 COMRAM     4     4      0
                   _PacketDataST7540
              _PacketReadParamST7540
             i2_CheckBroadcastPacket
              i2_CreateMessageST7540
                i2_CreateMessageUART
             i2_ReceiveNewDataST7540
                   i2_SendUARTPacket
 ---------------------------------------------------------------------------------
 (8) i2_SendUARTPacket                                     0     0      0      22
                       i2_UART_Write
 ---------------------------------------------------------------------------------
 (8) i2_UART_Write                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) i2_ReceiveNewDataST7540                               1     1      0       1
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) i2_CreateMessageUART                                 11     5      6    1539
                                             28 COMRAM    11     5      6
                   _PacketDataST7540 (ARG)
              _PacketReadParamST7540 (ARG)
                            i2_CRC16
 ---------------------------------------------------------------------------------
 (8) i2_CreateMessageST7540                               15     7      8    1244
                                             28 COMRAM    15     7      8
              _PacketReadParamST7540 (ARG)
                            i2_CRC16
 ---------------------------------------------------------------------------------
 (8) i2_CheckBroadcastPacket                               1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _PacketReadParamST7540                                7     5      2     661
                                             21 COMRAM     7     5      2
                     _CheckCRCST7540
 ---------------------------------------------------------------------------------
 (9) _CheckCRCST7540                                       8     8      0     590
                                             13 COMRAM     8     8      0
                            i2_CRC16
 ---------------------------------------------------------------------------------
 (9) i2_CRC16                                             13     9      4     475
                                              0 COMRAM    13     9      4
 ---------------------------------------------------------------------------------
 (8) _PacketDataST7540                                     2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (7) _RXReadyISRHandlerST7540                              1     1      0       1
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _DataReadyST7540                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearDataReady
   _DataReadyUART
   _EEPROMSetReset
     _Busy_eep
     _Write_b_eep
   _FIRE
     _GenerateMissingPulse
       _ReadMAINS_ZeroCrossing
         _WaitTickCount
           _WaitNewTick
       _TurnSSR1Off
       _TurnSSR1On
       _WaitTickCount
         _WaitNewTick
     _ReadMAINS_ZeroCrossing
       _WaitTickCount
         _WaitNewTick
     _StartBlastTimer
     _StartPostFireTimer
     _StopBlastTimer
   _InitSystem
     _EEPROMClearReset
       _Busy_eep
       _Write_b_eep
     _EEPROMRead
       _Read_b_eep
     _InitST7540
       _InitST7540Pins
       _ReadConfigST7540
       _WriteConfigST7540
         _WaitTickCount
           _WaitNewTick
     _ReceiveNewDataST7540
     _TurnRelayOff
     _TurnSSR1Off
     _UART_Init
       ___aldiv
     _checkCableFaults
       _ReadCableFault
         _ReadAnalogVoltage
       _ReadEarthLeakage
         _ReadAnalogVoltage
       _TurnCableFaultDetectOff
       _TurnCableFaultDetectOn
   _LineIdleST7540
   _PacketReadParamUART
     _CheckCRCUART
       _CRC16
   _ReadFireOut
     _ReadAnalogVoltage
     _ReadMAINS_ZeroCrossing
       _WaitTickCount
         _WaitNewTick
     ___ftadd
       _ReadAnalogVoltage (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         _ReadAnalogVoltage (ARG)
         ___ftpack (ARG)
     ___ftdiv
       ___ftpack
     ___lwtoft
       _ReadAnalogVoltage (ARG)
       ___ftpack (ARG)
   _Receive_Pi_Packet
     _CheckBroadcastPacket
     _Check_ALL_ISC
       _CreateMessageST7540
         _CRC16
         _PacketReadParamUART (ARG)
           _CheckCRCUART
             _CRC16
     _CreateMessageST7540
       _CRC16
       _PacketReadParamUART (ARG)
         _CheckCRCUART
           _CRC16
     _PacketReadParamUART
       _CheckCRCUART
         _CRC16
   _SendUARTPacket
     _UART_Write
   _StartPreArmedTimer
   _StartTransmitST7540
   _StopPostFireTimer
   _StopPreArmedTimer
   _TransmitBusyST7540
   _Transmit_BLAST_Command_Packet
     _CreateMessageST7540
       _CRC16
       _PacketReadParamUART (ARG)
         _CheckCRCUART
           _CRC16
     _LineIdleST7540
     _StartTransmitST7540
     _TransmitBusyST7540
   _Transmit_Pi_Default_Data
     _CreateMessageUART
       _CRC16
     _SendUARTPacket
       _UART_Write
   _TurnBuzzer_AlarmOff
   _TurnBuzzer_AlarmOn
   _TurnRelayOff
   _TurnRelayOn
   _TurnSSR1Off
   _TurnSSR1On
   _WaitTickCount
     _WaitNewTick
   ___ftge
   _checkCableFaults
     _ReadCableFault
       _ReadAnalogVoltage
     _ReadEarthLeakage
       _ReadAnalogVoltage
     _TurnCableFaultDetectOff
     _TurnCableFaultDetectOn
   _getFireButtonState
     _WaitTickCount
       _WaitNewTick
   _getIBCDefaultData
   _getKeySwitchState
     _ReadMAINS_ZeroCrossing
       _WaitTickCount
         _WaitNewTick
     _WaitTickCount
       _WaitNewTick
   _getResetButtonState
     _WaitTickCount
       _WaitNewTick
   _resetUARTPointers

 _isr (ROOT)
   _DataReadyST7540
   _PacketReadParamST7540
     _CheckCRCST7540
       i2_CRC16
   _RXReadyISRHandlerST7540
   _Receive_ISC_Packet
     _PacketDataST7540
     _PacketReadParamST7540
       _CheckCRCST7540
         i2_CRC16
     i2_CheckBroadcastPacket
     i2_CreateMessageST7540
       _PacketReadParamST7540 (ARG)
         _CheckCRCST7540
           i2_CRC16
       i2_CRC16 (ARG)
     i2_CreateMessageUART
       _PacketDataST7540 (ARG)
       _PacketReadParamST7540 (ARG)
         _CheckCRCST7540
           i2_CRC16
       i2_CRC16 (ARG)
     i2_ReceiveNewDataST7540
     i2_SendUARTPacket
       i2_UART_Write
   _SPIISRHandlerST7540
   _Transmit_NULL_Packet
     i2_CreateMessageST7540
       _PacketReadParamST7540 (ARG)
         _CheckCRCST7540
           i2_CRC16
       i2_CRC16 (ARG)
   _UART_Read
   _UART_TX_ISRHandler
     i2_UART_Write
   i2_ReceiveNewDataST7540

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0     168      16       23.5%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      47      13       27.7%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      FB      11       98.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      F0       8       93.8%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      EA       6       91.4%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     34      96       4       93.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3D      5D       1       98.9%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     40F       9        0.0%
DATA                 0      0     577      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Wed Jul 19 10:35:37 2017

                       __end_of_Receive_ISC_Packet 0FAE                          _ISC_Transmit_Packet_Ready 00AE  
                                  ?_InitST7540Pins 0001                                   _CheckISCTimerUIG 0076  
                  ReadCableFault@cableFaultValueUS 00C5                           ??i2_CheckBroadcastPacket 0001  
                                               l61 1C6A                                                 l70 23D2  
                                               l80 163E                                                 l81 161A  
                                               l65 23A2                                                 l76 15FC  
                                               l68 23B8                                                 l69 23DC  
                          ?_TurnCableFaultDetectOn 0001                               __size_of_TurnRelayOn 0018  
                         ??i2_ReceiveNewDataST7540 0001                          __end_of_getKeySwitchState 289A  
                                     __CFG_CP0$OFF 000000                                       __CFG_CP1$OFF 000000  
                                     __CFG_CP2$OFF 000000                               _ISC_SN_ArrayIndexUCG 0046  
                                     __CFG_CP3$OFF 000000                                  ?_checkCableFaults 0001  
                                     ___ftadd@exp1 00D8                                       ___ftadd@exp2 00D7  
                                     ___ftadd@sign 00D6                                                l110 2CB2  
                                              l201 218C                                                l237 2DAE  
                                              l254 158A                                                l642 0A50  
                                              l900 2998                                                l901 2960  
                                              l902 2968                                                l903 2972  
                                              l639 09DE                                                l904 299A  
                                              l665 0BB4                                                l657 0B16  
                                              l674 0CCE                                                l659 0B34  
                                              l676 0CEC                                                l854 26B6  
                                              l951 2CA6                                                l880 2DD2  
                                              l947 2CD6                                                l899 295A  
                                     __CFG_CPB$OFF 000000                                     _LineIdleST7540 2DC6  
                                              _PR2 000FBB                                       __CFG_CPD$OFF 000000  
                                ?_ReadConfigST7540 00C2                                                _isr 0408  
                               ??_checkCableFaults 00CB                              EEPROMSetReset@address 00C6  
                             __size_of_Write_b_eep 003E                           ?_TurnCableFaultDetectOff 0001  
                            __size_of_TurnRelayOff 0018                                                prod 000FF3  
                                              wreg 000FE8                                         _TXSTA1bits 000FAC  
                         __end_of_EEPROMClearReset 2C52                            __size_of_EEPROMSetReset 0026  
                               ??_ReadConfigST7540 00C6                                  _CreateMessageUART 1D66  
                                _DeArmTimerEnabled 0043                                       __CFG_LVP$OFF 000000  
                                     ___ftdiv@cntr 00D3                                       ___ftdiv@sign 00D8  
                             _ISC_SN_Array_SizeUCG 00AD                                               l1014 2E18  
                                             l1008 2AFC                                               l1303 148E  
                               ?_CreateMessageUART 00CF                                               l1245 1A40  
                                  __end_ofi2_CRC16 1F20                                               l1272 1050  
                                             l1274 1078                                               l1283 114E  
                                             l1292 1178                                               l1268 1016  
                                             l4030 20C8                                               l4050 212C  
                                             l4042 210A                                               l4026 20B2  
                                             l5010 1B46                                               l4130 1996  
                                             l4052 2136                                               l5012 1B4C  
                                             l4140 1A24                                               l4132 19A4  
                                             l5100 082A                                               l4070 2824  
                                             l4038 2102                                               l4142 1A32  
                                             l4134 19D4                                               l4126 1982  
                                             l5110 0874                                               l5120 08BE  
                                             l5104 083A                                               l5032 0658  
                                             l4306 1358                                               l4402 243C  
                                             l4154 1A66                                               l4138 19F4  
                                             l4330 2196                                               l5130 0908  
                                             l5114 0884                                               l5042 06A2  
                                             l4242 2DCE                                               l4180 18CE  
                                             l4172 1890                                               l4068 281A  
                                             l4412 246A                                               l4404 244C  
                                             l4148 1A4A                                               l4324 2160  
                                             l5132 0914                                               l5124 08CE  
                                             l5052 06EC                                               l5036 0668  
                                             l5220 278A                                               l4190 1928  
                                             l4182 18D4                                               l4166 1872  
                                             l5302 231E                                               l4342 21D6  
                                             l5142 096A                                               l5070 074C  
                                             l5062 0736                                               l5046 06B2  
                                             l4088 28F2                                               l4416 247A  
                                             l4408 245A                                               l4520 105E  
                                             l4336 21C2                                               l5136 0938  
                                             l5080 0796                                               l5056 06FC  
                                             l4360 1D94                                               l5240 27C8  
                                             l5232 27AE                                               l5224 2796  
                                             l5330 26D2                                               l5322 26A0  
                                             l4178 18BE                                               l4194 193A  
                                             l4514 1024                                               l5090 07E0  
                                             l5066 073C                                               l5340 26FA  
                                             l5316 2688                                               l3820 1582  
                                             l3812 150C                                               l5084 07A6  
                                             l5148 0972                                               l4364 1DD6  
                                             l5244 27D4                                               l5236 27BC  
                                             l5228 27A2                                               l5326 26B8  
                                             l4198 1956                                               l4542 10DE  
                                             l4526 106E                                               l3806 14E8  
                                             l5094 07F0                                               l4472 25A2  
                                             l5336 26F2                                               l3840 297C  
                                             l4544 10EC                                               l4536 10B0  
                                             l4608 144C                                               l3824 1598  
                                             l3816 1516                                               l5176 2A8C  
                                             l5168 2A80                                               l4490 25EC  
                                             l3914 1610                                               l4562 11A2  
                                             l4554 1134                                               l4546 10FA  
                                             l5370 1F60                                               l5602 0A16  
                                             l4476 25AC                                               l4484 25D2  
                                             l4396 241C                                               l4572 11F0  
                                             l4556 1142                                               l4548 1106  
                                             l5292 22C8                                               l5380 1FE4  
                                             l5276 2ACE                                               l5268 2AC2  
                                             l5196 288A                                               l4494 2606  
                                             l4398 2420                                               l4582 13B2  
                                             l5374 1FA0                                               l5198 288E  
                                             l5622 0A80                                               l5296 230C  
                                             l5288 22B2                                               l3960 17DA  
                                             l5712 0BDC                                               l5624 0A84  
                                             l3794 2C7A                                               l5714 0BE8  
                                             l5706 0BCA                                               l5618 0A66  
                                             l3796 2C7E                                               l4588 13EC  
                                             l3956 1776                                               l5652 0AE8  
                                             l5654 0AF4                                               l5638 0AB6  
                                             l5656 0AFE                                               l3898 23AE  
                                             l5762 0CC8                                               l5770 0CF2  
                                             l5674 0B48                                               l5666 0B26  
                                             l5692 0B8C                                               l5684 0B76  
                                             ?_isr 0001                                               l5782 0D14  
                                             l5766 0CDE                                               l5784 0D1A  
                                             l5696 0B9C                                               STR_1 0637  
                                             STR_2 0637                                               STR_3 0637  
                                             STR_4 0637                                               STR_5 0637  
                                             STR_6 0637                                               STR_7 0637  
                                             STR_8 0637                                               STR_9 0637  
                                             _FIRE 2688                                               u3105 1228  
                                             u3115 1286                                               u3060 1C46  
                                             u3070 1C66                                               u3135 12CC  
                                             u3145 132A                                               u3331 0FC4  
                                             u2700 2502                                               u3341 0FE2  
                                             u4160 26E6                                               u2800 2148  
                                             u2810 214A                                               u2660 17D4  
                                             u3541 138E                                               u2840 2836  
                                             u3561 13C8                                               u2850 2838  
                                             u2667 17CA                                               u2860 28A6  
                                             u2868 28AA                                               u4670 0B58  
                                             u2895 2B0A                                               u2896 2B0C  
                                             i2l91 2770                                               u4867 20CA  
                                             u4877 27E2                                               i2l87 270C  
                                             i2l89 2742                                               _TMR2 000FBC  
                                   _ReadCableFault 27E0                i2CreateMessageST7540@packetSourceUS 001D  
                CreateMessageST7540@packetSourceUS 00DF                                               _main 09D0  
                                _getIBCDefaultData 2774                                       ___ftpack@arg 00C2  
                                     ___ftpack@exp 00C5                                               _temp 00A4  
                                 _LowSpeedTickBTCG 0048                                               _test 005C  
                                             fsr0h 000FEA                                               fsr1h 000FE2  
                                             indf0 000FEF                                               fsr0l 000FE9  
                                             fsr2h 000FDA                                               indf1 000FE7  
                                             fsr1l 000FE1                                               indf2 000FDF  
                                             fsr2l 000FD9                                               btemp 005E  
                                    __CFG_BORV$190 000000                       PacketReadParamUART@paramName 00DC  
                                             pclat 000FFA                                    ?_StopBlastTimer 0001  
                              ??_CreateMessageUART 00D5                                               prodh 000FF4  
                                             prodl 000FF3                                               start 0632  
                           ?i2_CreateMessageST7540 001D                                      __CFG_IESO$OFF 000000  
                               ?_getIBCDefaultData 0001                                    _ISC_SN_ArrayUIG 0200  
                              __size_of_EEPROMRead 004E                                      ??_ReadFireOut 00D9  
                            __size_of_CheckCRCUART 0084                                       ___param_bank 000010  
                                _KeySwitchStateUCG 00AF       getResetButtonState@ResetButtonStatussecondUC 00C5  
                   __end_of_TurnCableFaultDetectOn 2E36                                     _ResetStatusUCG 00B5  
                                            ??_isr 0030                                ??_getIBCDefaultData 00C2  
                                            FIRE@i 00C7                                              ?_FIRE 0001  
                                     _TurnRelayOff 2CC6                                  ReadEarthLeakage@i 00C9  
                           __end_of_LineIdleST7540 2DD2                                 _IBC_ComsCrashTimer 0082  
                                  __end_of___aldiv 1968                                              ?_main 0001  
                                            _ADRES 000FC3                                              _EEADR 000FA9  
                                  __end_of___ftadd 1216                                              STR_10 0637  
                                            STR_11 0637                                              STR_12 0637  
                                            STR_13 0637                                              STR_14 0637  
                                            _CRC16 14C4                                    __end_of___ftdiv 14C4  
              ReadEarthLeakage@earthLeakageValueUS 00C5                                              i2l127 225A  
                                            i2l128 2262                                              i2l237 2DE0  
                                            i2l254 1ECC                                              i2l621 0548  
                                            i2l630 05D0                                              i2l616 0504  
                                            i2l636 05F6                       __size_of_SPIISRHandlerST7540 0070  
                        __end_of_CreateMessageUART 1E4E                                      __CFG_WRT0$OFF 000000  
                                    __CFG_WRT1$OFF 000000                                      __CFG_WRT2$OFF 000000  
                                    __CFG_WRT3$OFF 000000                       ReadConfigST7540@configDataUS 00C4  
                         __size_of_StartBlastTimer 000A                                     __CFG_EBTR0$OFF 000000  
                                   __CFG_FCMEN$OFF 000000                                     __CFG_EBTR1$OFF 000000  
                                   __CFG_EBTR2$OFF 000000                                     __CFG_EBTR3$OFF 000000  
                                      ?_UART_Write 0001                                 __size_of_UART_Init 0162  
                               __size_of_UART_Read 0058                                      __CFG_WRTB$OFF 000000  
                                    __CFG_WRTC$OFF 000000                                      __CFG_WRTD$OFF 000000  
                          _ReceivedPiBufferIndexIG 0094                                     Read_b_eep@badd 00C2  
                                   __CFG_EBTRB$OFF 000000                   __end_of_Transmit_Pi_Default_Data 2BAC  
                           Write_b_eep@GIE_BIT_VAL 00C5                             __end_of_ReadCableFault 283E  
                           ??_Transmit_NULL_Packet 002C                                 __CFG_MCLRE$EXTMCLR 000000  
                                    ___ftpack@sign 00C6                                  _LowSpeedTickPATCG 004A  
                                _LowSpeedTickPBTCG 004B                          __end_of_getIBCDefaultData 27E0  
                                   __CFG_BOREN$OFF 000000                                              tablat 000FF5  
                            __end_of_WaitTickCount 2C96                                       _CheckCRCUART 2482  
                                      _ClearToFire 00A8                                         _InitST7540 1B7C  
                                            status 000FD8                        __end_of_PacketReadParamUART 21FE  
                                       _New_ISC_SN 004E                                       __end_of_FIRE 2704  
                                  __initialization 260C                                _CreateMessageST7540 1728  
                                     __end_of_main 0D20                        __size_of_TurnBuzzer_AlarmOn 0004  
                    PacketReadParamUART@retValueUS 00DD                                         _InitSystem 1A74  
                                       _Read_b_eep 2D54                                   __end_of_Busy_eep 2E1E  
                                           ??_FIRE 00C7                    __size_ofi2_CheckBroadcastPacket 000A  
                      __end_of_StartTransmitST7540 2CC6                                             CRC16@i 00CC  
                      __end_ofi2_CreateMessageUART 209E                                    ?_LineIdleST7540 0001  
                              __end_of_ReadFireOut 234E                         __size_of_getKeySwitchState 005C  
ReadMAINS_ZeroCrossing@mainsZero_CrossingValueUSG2 00C6                    __size_ofi2_ReceiveNewDataST7540 0012  
                               _KeySwitchStatusUCG 00B0                     i2CreateMessageST7540@dataLenUC 0022  
                                           ??_main 00F4                                             ?_CRC16 00C2  
                                    __activetblptr 000002                        __size_of_StartPreArmedTimer 0014  
                  PacketReadParamST7540@retValueUS 001B                                  _resetUARTPointers 2DEA  
                               _StartPostFireTimer 2D2E                                          ??i2_CRC16 0005  
                     __size_of_getResetButtonState 0042                               ?_CreateMessageST7540 00DF  
                               ?_resetUARTPointers 0001                                             _EEDATA 000FA8  
                                           _EECON2 000FA7                                    ?_ReadCableFault 0001  
                                 __end_of___ftpack 1A74                             __size_of_Check_ALL_ISC 0038  
                              ?_StartPostFireTimer 0001                      __size_of_CheckBroadcastPacket 000E  
                                        CRC16@data 00CA                                             i2l4270 221A  
                                           i2l4282 226A                                             i2l4266 220A  
                                           i2l4276 223A                                             i2l5500 04A6  
                                           i2l4288 2278                                             i2l5512 04E6  
                                           i2l5504 04BE                                             i2l3850 1E64  
                                           i2l4650 1D0A                                             i2l5530 054E  
                                           i2l3860 1E86                                             i2l4732 272A  
                                           i2l5540 0578                                             i2l5508 04CE  
                                           i2l4646 1CB8                                             i2l4806 2BBE  
                                           i2l5518 0512                                             i2l3864 1EC6  
                                           i2l3856 1E7E                                             i2l4832 0DAC  
                                           i2l5560 05C2                                             i2l5552 05A2  
                                           i2l5544 0590                                             i2l5536 056C  
                                           i2l5528 0542                                             i2l4826 0D7A  
                                           i2l4756 2D80                                             i2l3868 1ED6  
                                           i2l4684 2010                                             i2l4844 0E10  
                                           i2l4780 29DE                                             i2l5564 05D2  
                                           i2l5556 05B2                                             i2l4854 0E72  
                                           i2l4838 0DDE                                             i2l4782 29E4  
                                           i2l5494 048C                                             i2l4688 2040  
                                           i2l4864 0ED4                                             i2l4776 29D2  
                                           i2l5496 0490                                             i2l5568 05DC  
                                           i2l4874 0F20                                             i2l5578 05EC  
                                           i2l4886 0F6C                                             i2l4888 0FA8  
                                           _RCREG1 000FAE                                   __end_of___lwtoft 2C02  
                   i2CreateMessageST7540@commandUC 0021                                ??_resetUARTPointers 00C2  
                                           _SPBRG1 000FAF                      __size_of_ReceiveNewDataST7540 0012  
                                           _TXREG1 000FAD                                      ??_WaitNewTick 00C2  
                         ?_RXReadyISRHandlerST7540 0001                       __end_of_GenerateMissingPulse 260C  
                                           _ModeCG 004D                                     __CFG_XINST$OFF 000000  
                       __end_of_getFireButtonState 2AD2                                    _CFLEDFlashState 0041  
                                     ReadFireOut@i 00D9                                  __end_of_UART_Init 1378  
                                __end_of_UART_Read 2A00                                             ___ftge 1F20  
                               _CF_STAUTS_TimerUIG 0074                                __size_of_UART_Write 000E  
                                        ??___aldiv 00CA                                          ??___ftadd 00D3  
                                        ??___ftdiv 00D0                             __size_of_DataReadyUART 0004  
                       __end_of_TransmitBusyST7540 2E18                               ??_StartPostFireTimer 00C2  
                         __end_of_PacketDataST7540 2E12                                             clear_0 2614  
                                           clear_1 2626                                             clear_2 2632  
                                           clear_3 263E                                             clear_4 264A  
                                           clear_5 2656                                             clear_6 2662  
                        __size_ofi2_SendUARTPacket 0010                          __end_of_resetUARTPointers 2DF4  
                          ??_PacketReadParamST7540 0018                                       ??_EEPROMRead 00C4  
                                  _DataReadyST7540 2E24                         __size_of_CreateMessageUART 00E8  
                                     __pdataCOMRAM 005D                              ??_CreateMessageST7540 00E7  
                                   _EEPROMSetReset 2C52                                       __mediumconst 0000  
                                 _boosterCommsData 0447                                             tblptrh 000FF7  
                                           tblptrl 000FF6                                             tblptru 000FF8  
      getResetButtonState@ResetButtonStatusfirstUC 00C4                                   ??_ClearDataReady 00C2  
                        __size_of_ReadEarthLeakage 00B2                                    __CFG_HFOFST$OFF 000000  
                           i2_CheckBroadcastPacket 2DFE                         __size_of_getIBCDefaultData 006C  
                           i2_ReceiveNewDataST7540 2D66                                     _statusFlagsUSG 00A2  
                                ??_StartBlastTimer 00C2                                        ?_InitST7540 0001  
                                _Receive_Pi_Packet 063A                                         __accesstop 0060  
                          __end_of__initialization 267A                           _Transmit_Pi_Default_Data 2B80  
                                  __CFG_PBADEN$OFF 000000                                         ___ftadd@f1 00CD  
                                       ___ftadd@f2 00D0                                         ___ftge@ff1 00C2  
                                       ___ftge@ff2 00C5                                   ??_InitST7540Pins 00C2  
                          __size_of_CheckCRCST7540 0084                                      __end_of_CRC16 15F8  
                                       _TurnSSR1On 2E3A                                      ___rparam_used 000001  
                               ?_Receive_Pi_Packet 0001                                         ___ftdiv@f1 00CA  
                                       ___ftdiv@f2 00CD                                         ___ftdiv@f3 00D4  
                                      _ReadFireOut 22A8                                 __end_of_EEPROMRead 2A4E  
                                   __pcstackCOMRAM 0001                                __end_of_WaitNewTick 2DDE  
                              ??_Receive_Pi_Packet 00EE                                        ?_InitSystem 0001  
                      ReadConfigST7540@frameDataUS 00C2                                        ?_Read_b_eep 00C2  
                                    _Check_ALL_ISC 2B10                       __size_of_TurnBuzzer_AlarmOff 0004  
                    i2CheckBroadcastPacket@Command 0001                                   _DeArmHighTickUIG 0078  
                                _StopPreArmedTimer 2CDE                                 _ISC_Switch_TempUSG 008C  
                                       ___lwtoft@c 00CA                                            ??_CRC16 00C6  
                      __size_of_UART_TX_ISRHandler 002C                             __end_of_EEPROMSetReset 2C78  
                               ?_StopPreArmedTimer 0001                                 _Receive_ISC_Packet 0D20  
                        ReadAnalogVoltage@channelC 00C4                           ??_ReadMAINS_ZeroCrossing 00C4  
                                    ?i2_UART_Write 0001                                  _bufferRXST7540UCA 019F  
                    SPIISRHandlerST7540@dataReadUC 0001                                  ?_EEPROMClearReset 0001  
        getFireButtonState@FireButtonStatusfirstUC 00C4                                      _DataReadyUART 2E42  
                              ??_StopPreArmedTimer 00C2                          __end_of_Receive_Pi_Packet 09D0  
                                     _flagUARTRead 005B                            _ISC_SN_Array_MissingUCG 0047  
                               ??_EEPROMClearReset 00C6                                   ??_StopBlastTimer 00C2  
                              ?_Receive_ISC_Packet 0001                    __end_of_RXReadyISRHandlerST7540 2D8A  
                                       __pbssBANK0 0060                                         __pbssBANK1 0100  
                                       __pbssBANK2 0200                                         __pbssBANK3 0300  
                                       __pbssBANK4 0400                                      ??_TurnSSR1Off 00C2  
                        __size_of_checkCableFaults 0090                            ??i2_CreateMessageST7540 0025  
                                  __CFG_PLLCFG$OFF 000000                                          ?_Busy_eep 0001  
                        __size_of_ReadConfigST7540 0130                   __size_of_TurnCableFaultDetectOff 0004  
                     CreateMessageUART@packetCRCUS 00D7                                         _flagST7540 0059  
                                    i2CRC16@data_p 0001                                _SPIISRHandlerST7540 2704  
                                 i2UART_Write@data 0001                                      i2CRC16@length 0003  
                     StartTransmitST7540@discardUC 00C2                                 __CFG_CCP2MX$PORTC1 000000  
                          _ISC_SN_Array_ReverseUSG 023C                                  _bufferTXST7540UCA 0150  
                                    ??_TurnRelayOn 00C2                                            ?___ftge 00C2  
                                     _IdleTimerUIG 008E                                     ?_Check_ALL_ISC 0001  
                               __CFG_CCP3MX$PORTB5 000000                          __end_of_StopPreArmedTimer 2CF2  
                          __end_of_DataReadyST7540 2E2A                               ??_Receive_ISC_Packet 002C  
                                        ?___ftpack 00C2                                      ??_Write_b_eep 00C5  
                       __size_of_resetUARTPointers 000A                  i2CreateMessageST7540@packetDestUS 001F  
                  CreateMessageST7540@packetDestUS 00E1                                          ?___lwtoft 00CA  
                              __size_of_InitST7540 00F6                                            _EEPRead 0060  
                         WaitTickCount@tickCountUS 00C2                                    ?_EEPROMSetReset 0001  
                             ?_SPIISRHandlerST7540 0001                                    __CFG_WDTEN$SWON 000000  
                                          i2_CRC16 1E4E                                     ??i2_UART_Write 0001  
                             _GenerateMissingPulse 258A                                       ??_UART_Write 00C2  
                                  __CFG_WDTPS$2048 000000                                     ?_DataReadyUART 0001  
                                          _SSP1BUF 000FC9                                            _SSP2BUF 000F6F  
                                     _FireOutFloat 006A                                     _packetNumberUC 00B8  
                 i2CreateMessageST7540@packetCRCUS 0029                     CreateMessageST7540@packetCRCUS 00EB  
                              __size_of_InitSystem 0108                            __size_of_SendUARTPacket 0010  
                              __size_of_Read_b_eep 0012                               _cableFaultProblemUCG 00B6  
            __end_of_Transmit_BLAST_Command_Packet 2950             __size_of_Transmit_BLAST_Command_Packet 005A  
                    _Transmit_BLAST_Command_Packet 28F6                                         ??_Busy_eep 00C2  
                                      ?_TurnSSR1On 0001                                        _WaitNewTick 2DD2  
                                 _CFLEDFlashEnable 0040                                    __CFG_PWRTEN$OFF 000000  
                                          __Hparam 0000                                _getResetButtonState 2A4E  
                              __end_of_TurnSSR1Off 2E42                                            __Lparam 0000  
                                 ??_LineIdleST7540 00C2                                  _earthLeakageStart 009E  
                                          ___aldiv 184E                                    __size_of___ftge 00C8  
                                          ___ftadd 0FAE                                            ___ftdiv 1378  
                               __end_of_UART_Write 2DB8                                       __psmallconst 0636  
                                  __CFG_STVREN$OFF 000000                                   i2_SendUARTPacket 2D9A  
                                          __pcinit 260C                                         ??___ftpack 00C7  
                                          __ramtop 0600                                            __ptext0 09D0  
                                          __ptext1 2DEA                                            __ptext2 2A4E  
                                          __ptext3 283E                                            __ptext4 2774  
                                          __ptext5 2A90                                            __ptext6 1F20  
                                          __ptext7 2C96                                            __ptext8 2E2A  
                                          __ptext9 2E2E                                         ??___lwtoft 00CD  
                            ??_SPIISRHandlerST7540 0001                                __end_of_TurnRelayOn 2CAE  
                                        _T2CONbits 000FBA                                   ??_ReadCableFault 00C5  
                      CheckBroadcastPacket@Command 00C2                                       __size_of_isr 022A  
                             ?_getResetButtonState 0001                              ?_GenerateMissingPulse 0001  
                                 ___aldiv@dividend 00C2                                   _PiBufferTXLenUCA 00B2  
                              __end_of_Write_b_eep 2B10                    __size_of_ReadMAINS_ZeroCrossing 005C  
                          CheckCRCUART@packetCRCUS 00D1                        CheckCRCST7540@expectedCRCUS 0011  
                                 _ReadEarthLeakage 209E                         _mainsZero_CrossingValueUSG 00A0  
                       __size_of_Receive_Pi_Packet 0396                               end_of_initialization 267A  
                                        _BTEnabled 003E                            CheckCRCUART@packetLenUC 00D5  
                                      _ToggleRelay 0054                      __size_of_Transmit_NULL_Packet 002A  
                  Receive_ISC_Packet@tempIscSerial 002E                                      __Lmediumconst 0000  
                                   _CheckCRCST7540 2506                         __end_of_TurnBuzzer_AlarmOn 2E2E  
                                  _FiringStatusUCG 00AB                                    ??_Check_ALL_ISC 00EE  
                                 ___aldiv@quotient 00CC                                            postdec1 000FE5  
                                          postdec2 000FDD                                            postinc0 000FEE  
                                          postinc2 000FDE                         __size_of_StopPreArmedTimer 0014  
                     __end_of_CheckBroadcastPacket 2DC6                       __size_of_PacketReadParamUART 00AE  
                                 ?_DataReadyST7540 0001                                  ?_PacketDataST7540 0001  
                     __end_of_ReceiveNewDataST7540 2D54                                          _UART_Init 1216  
                                        _UART_Read 29A8                         __end_of_StartPreArmedTimer 2D1A  
                      CheckCRCST7540@receivedCRCUS 0013                                          _PORTAbits 000F80  
                                        _PORTBbits 000F81                                          _PORTCbits 000F82  
                 __size_of_RXReadyISRHandlerST7540 0012                             __size_of_WaitTickCount 001E  
                               _TransmitPiBufferCG 0100                                 _TransmitPiBufferIG 0098  
                               ??_PacketDataST7540 0003                                     UART_Write@data 00C2  
                   __size_of_PacketReadParamST7540 00AA                              ??_getResetButtonState 00C4  
                    __end_of_PacketReadParamST7540 22A8                                    _StartBlastTimer 2DF4  
                               _getFireButtonState 2A90                                   _Show_Missing_ISC 0053  
                              __size_of_TurnSSR1On 0004                                    ??_DataReadyUART 00C2  
                       ??_Transmit_Pi_Default_Data 00DA                       __size_of_StartTransmitST7540 0018  
                                        _TRISAbits 000F92                                          _TRISBbits 000F93  
                                        _TRISCbits 000F94                            ?i2_CheckBroadcastPacket 0001  
                     __size_ofi2_CreateMessageUART 00B6                                 _TransmitBusyST7540 2E12  
                          ?i2_ReceiveNewDataST7540 0001                                ?_getFireButtonState 0001  
                               _BTHighSpeedTickUIG 0070                                _TurnBuzzer_AlarmOff 2E2E  
                           __end_of_CheckCRCST7540 258A                                   _checkCableFaults 23F2  
                                      _TurnSSR1Off 2E3E                                       ??_InitST7540 00CF  
                          _TurnCableFaultDetectOff 2E36                                ?_TransmitBusyST7540 0001  
                                       _routerData 02B4                                        ___ftdiv@exp 00D7  
                                 _ReadConfigST7540 15F8                                   _ISC_Packet_Index 008A  
                         ??_TurnCableFaultDetectOn 00C2                     ?_Transmit_BLAST_Command_Packet 0001  
                                     ?_ReadFireOut 0001                             _ReadMAINS_ZeroCrossing 289A  
                              _CableFaultStatusUCG 00A7                               __end_ofi2_UART_Write 2DEA  
                                _cableFaultCounter 009A                                        _TurnRelayOn 2C96  
                                     ??_InitSystem 00DE                                       ??_Read_b_eep 00C4  
                             ??_getFireButtonState 00C4                               ?_TurnBuzzer_AlarmOff 0001  
                                   __end_of___ftge 1FE8                        __size_of_StartPostFireTimer 0014  
                                      _BAUDCONbits 000FB8                                         ?_UART_Init 00D0  
                                       ?_UART_Read 0001                        __end_of_CreateMessageST7540 184E  
                                    __pidataCOMRAM 2E46                                _FireButtonStatusUCG 00AA  
                             ??_TransmitBusyST7540 00C2                             ReadEarthLeakage@Failed 00C7  
                               UART_Read@charRS232 0001                                        _Write_b_eep 2AD2  
                           ??_GenerateMissingPulse 00C7                                 __end_of_InitST7540 1C72  
                   __end_ofi2_CheckBroadcastPacket 2E08                                start_initialization 260C  
                   __end_ofi2_ReceiveNewDataST7540 2D78                                 _ReceivedPiBufferCG 00B9  
                                      __end_of_isr 0632                                     _SendUARTPacket 2D8A  
                        CheckCRCUART@expectedCRCUS 00D3                                    ?_CheckCRCST7540 0001  
                                      i2CRC16@data 0009                                 __end_of_InitSystem 1B7C  
                               __end_of_Read_b_eep 2D66                                      _WaitTickCount 2C78  
                          InitST7540@frameDataRXUS 00D5                            InitST7540@frameDataTXUS 00CF  
                   __size_ofi2_CreateMessageST7540 00F4                                           CRC16@crc 00CD  
                    __end_ofi2_CreateMessageST7540 1D66                                       _ISC_CF_Index 0088  
                                __size_of_Busy_eep 0006                          __size_of_EEPROMClearReset 0026  
                                 _IBC_Default_Data 0084                                _earthLeakageCounter 009C  
                                         ??___ftge 00C8                              ??_TurnBuzzer_AlarmOff 00C2  
                                  _bufferRXNextUCA 0056                                   ??_EEPROMSetReset 00C6  
                                    ?_TurnRelayOff 0001                            __end_of_StartBlastTimer 2DFE  
                       __end_of_UART_TX_ISRHandler 2BD8                                    _bufferTXNextUCA 0058  
                   i2CreateMessageUART@packetCRCUS 0025                              _PacketForPiIdentifier 005D  
                       i2CreateMessageUART@dataBuf 0021                    RXReadyISRHandlerST7540@ReadIOCC 0001  
       getFireButtonState@FireButtonStatussecondUC 00C5                          CheckCRCUART@receivedCRCUS 00D6  
                                __size_of___ftpack 010C                                        __pbssBIGRAM 0447  
                                      __pbssCOMRAM 003E                                           ?i2_CRC16 0001  
                                __size_of___lwtoft 002A                                      __pcstackBANK0 00C2  
                           __end_of_SendUARTPacket 2D9A                          ??_TurnCableFaultDetectOff 00C2  
                               Receive_Pi_Packet@i 00F1                                      ?_CheckCRCUART 0001  
                             _CheckBroadcastPacket 2DB8                                     ?_WaitTickCount 00C2  
                         __end_ofi2_SendUARTPacket 2DAA                               _ReceiveNewDataST7540 2D42  
                                     ??_TurnSSR1On 00C2                                       ?_WaitNewTick 0001  
                                  _fireOutValueSLG 006D                          CheckCRCST7540@packetLenUC 0015  
                          __size_of_ClearDataReady 0006                    __size_of_TurnCableFaultDetectOn 0004  
                        ReadConfigST7540@discardUC 00C9                       i2CreateMessageUART@dataLenUC 0020  
                                 _Pi_Status_Update 00B3                                          __pintcode 0408  
                                _StopPostFireTimer 2CF2                                           ?___aldiv 00C2  
                                   ??_TurnRelayOff 00C2                                           ?___ftadd 00CD  
                         __end_of_ReadEarthLeakage 2150                                           ?___ftdiv 00CA  
                      __size_of_Receive_ISC_Packet 028E                                 ?_StopPostFireTimer 0001  
                          __size_of_InitST7540Pins 0038                            _RXReadyISRHandlerST7540 2D78  
                                      ??_UART_Init 00D4                                        ??_UART_Read 0001  
                                 __CFG_PRICLKEN$ON 000000                                _TransmitPLMBufferCG 0400  
                              _TransmitPLMBufferIG 0096                                     __size_of_CRC16 0134  
                                      __smallconst 0636                                ??_StopPostFireTimer 00C2  
                                         i2CRC16@i 000B                       i2CreateMessageUART@commandUC 001F  
                               __end_of_TurnSSR1On 2E3E                                    ?_SendUARTPacket 0001  
                                   _NewCFStatusUCG 00B1                                     ??_CheckCRCUART 00CF  
                                       UART_Init@x 00DC                                _PacketReadParamUART 2150  
                            ?_CheckBroadcastPacket 0001                                      _PiDefaultData 00C0  
                            ?_ReceiveNewDataST7540 0001                                           _EEPWrite 0065  
                                  ___aldiv@divisor 00C6                                    ___aldiv@counter 00CA  
                                      CRC16@data_p 00C2                                           _IOCBbits 000F62  
                            __size_ofi2_UART_Write 000C                                           _LATAbits 000F89  
                                         _LATBbits 000F8A                                           _LATCbits 000F8B  
                                         _IPR1bits 000F9F                                        CRC16@length 00C4  
                                         _PIE1bits 000F9D                                           _PIE3bits 000FA3  
                        __end_of_StopPostFireTimer 2D06                                           _PMD0bits 000F3F  
                    WriteConfigST7540@configDataUS 00C7                            _boosterCommsDataReverse 0278  
                   ReadConfigST7540@bitsReceivedUC 00CA                                _StartTransmitST7540 2CAE  
                                         _PIR1bits 000F9E                                           i2u434_40 0500  
                                         i2u435_40 0502                                           i2u268_40 2586  
                                         _PIR3bits 000FA4                                           i2u374_40 0D38  
                                         i2u359_40 1D06                                           i2u359_47 1CFC  
                                         i2u375_48 0D3A                                i2_CreateMessageUART 1FE8  
                          __size_of_StopBlastTimer 0014                    __end_of_TurnCableFaultDetectOff 2E3A  
                      __end_of_SPIISRHandlerST7540 2774                               ?_PacketReadParamUART 00D8  
                       CreateMessageUART@dataLenUC 00D2                               __size_of_ReadFireOut 00A6  
                                 _HighSpeedTickUIG 0080                       __end_of_Transmit_NULL_Packet 2C2C  
                                 ?_StartBlastTimer 0001                                  UART_Init@baudrate 00D0  
                         __end_of_checkCableFaults 2482                                  _WriteConfigST7540 234E  
                                       _ADCON0bits 000FC2                                         _ADCON1bits 000FC1  
                                       _ADCON2bits 000FC0                                 _TurnBuzzer_AlarmOn 2E2A  
                         __end_of_ReadConfigST7540 1728                                    Write_b_eep@badd 00C2  
                                  Write_b_eep@bdat 00C4                             _TurnCableFaultDetectOn 2E32  
                               ?_WriteConfigST7540 00C4                                     _LowSpeedTickCG 0049  
                             ?_StartTransmitST7540 0001                               ?i2_CreateMessageUART 001D  
                                 __size_ofi2_CRC16 00D2                     PacketReadParamST7540@paramName 001A  
                                     i2_UART_Write 2DDE                                ?_TurnBuzzer_AlarmOn 0001  
                       CreateMessageUART@commandUC 00D1                                        _ELT_Counter 007A  
                                  ??_WaitTickCount 00C4                                  _ReadAnalogVoltage 2950  
                               _StartPreArmedTimer 2D06                                ??_WriteConfigST7540 00CA  
                        __size_of_PacketDataST7540 000A                            EEPROMClearReset@address 00C6  
                                     ?_TurnSSR1Off 0001                                 ?_ReadAnalogVoltage 00C2  
                                         _Busy_eep 2E18                                  EEPROMRead@address 00C4  
                          ?_ReadMAINS_ZeroCrossing 0001                                ?_StartPreArmedTimer 0001  
                                       i2CRC16@crc 000C                                         _EECON1bits 000FA6  
                                         __Hrparam 0000                                  _CFLEDFlashTickUIG 0072  
                                 _EEPROMClearReset 2C2C                                ??_ReadAnalogVoltage 00C4  
                                   _AlarmStatusUCG 00A6                                     _bufferRXLenUCA 0055  
                                         __Lrparam 0000                                     _bufferTXLenUCA 0057  
                             ??_TurnBuzzer_AlarmOn 00C2                          ??_RXReadyISRHandlerST7540 0001  
                                     ?_TurnRelayOn 0001                              __end_of_Check_ALL_ISC 2B48  
                            ??_PacketReadParamUART 00DA                                  __CFG_P2BMX$PORTB5 000000  
                   getIBCDefaultData@returningData 00C2                                   __size_of___aldiv 011A  
                        __end_of_WriteConfigST7540 23F2                        __end_of_getResetButtonState 2A90  
                                 __size_of___ftadd 0268                                   __size_of___ftdiv 014C  
                                   _RelayStatusUCG 00B4                  i2CreateMessageUART@packetSourceUS 001D  
                  CreateMessageUART@packetSourceUS 00CF                                           ___ftpack 1968  
                             _Discover_ISC_ModeUCG 00A9                                       ?_Write_b_eep 00C2  
                                       _ANSELAbits 000F38                                           ___lwtoft 2BD8  
                                       _ANSELBbits 000F39                                         _ANSELCbits 000F3A  
                             ??_StartPreArmedTimer 00C2                    ??_Transmit_BLAST_Command_Packet 00EE  
                          __size_of_LineIdleST7540 000C                                         _EEPROMRead 2A00  
                            ??_StartTransmitST7540 00C2                              ??i2_CreateMessageUART 0023  
                         __size_of_DataReadyST7540 0006                                           _flagUART 005A  
                                 ??_CheckCRCST7540 000E                          __end_of_ReadAnalogVoltage 29A8  
                            _PacketReadParamST7540 21FE                                  _PiBufferRXNEXTUCA 0051  
                            __end_of_DataReadyUART 2E46                                           __ptext10 2B80  
                                         __ptext11 2D8A                                           __ptext20 2D06  
                                         __ptext12 2DAA                                           __ptext21 063A  
                                         __ptext13 1D66                                           __ptext30 1378  
                                         __ptext22 2150                                           __ptext14 28F6  
                                         __ptext31 0FAE                                           __ptext23 2482  
                                         __ptext15 2E12                                           __ptext40 1216  
                                         __ptext32 1968                                           __ptext24 2B10  
                                         __ptext16 2CAE                                           __ptext41 184E  
                                         __ptext33 1A74                                           __ptext25 1728  
                                         __ptext17 2DC6                                           __ptext50 2C2C  
                                         __ptext42 2CC6                                           __ptext34 23F2  
                                         __ptext26 14C4                                           __ptext18 2CDE  
                                         __ptext51 2688                                           __ptext43 2D42  
                                         __ptext35 2E32                                           __ptext27 2DB8  
                                         __ptext19 2CF2                                           __ptext60 2DD2  
                                         __ptext52 2D1A                                           __ptext44 1B7C  
                                         __ptext36 2E36                                           __ptext28 22A8  
                                         __ptext61 2C52                                           __ptext53 2D2E  
                                         __ptext45 234E                                           __ptext37 209E  
                                         __ptext29 2BD8                                           __ptext70 2704  
                                         __ptext62 2AD2                                           __ptext54 2DF4  
                                         __ptext46 15F8                                           __ptext38 27E0  
                                         __ptext71 0D20                                           __ptext63 2E18  
                                         __ptext55 258A                                           __ptext47 2B48  
                                         __ptext39 2950                                           __ptext80 1E4E  
                                         __ptext72 2D9A                                           __ptext64 2E42  
                                         __ptext56 2E3A                                           __ptext48 2A00  
                                         __ptext81 2E08                                           __ptext73 2DDE  
                                         __ptext65 2E1E                                           __ptext57 2E3E  
                                         __ptext49 2D54                                           __ptext82 2D78  
                                         __ptext74 2D66                                           __ptext58 289A  
                                         __ptext83 2E24                                           __ptext75 1FE8  
                                         __ptext67 2BAC                                           __ptext59 2C78  
                                         __ptext76 1C72                                           __ptext68 29A8  
                                         __ptext77 2DFE                                           __ptext69 2C02  
                                         __ptext78 21FE                                           __ptext79 2506  
                           ??_CheckBroadcastPacket 00C2                                _ReceivedPLMBufferCG 0300  
                                 _HighPulseCountCG 00AC                               __end_of_TurnRelayOff 2CDE  
                                     _SSP2CON1bits 000F6C                             ??_ReceiveNewDataST7540 00C2  
                                _PiBufferTXNEXTUCA 0052                                      __size_of_FIRE 007C  
                     i2CreateMessageST7540@dataBuf 0023                     __end_of_ReadMAINS_ZeroCrossing 28F6  
                          __size_of_ReadCableFault 005E                                      __size_of_main 0350  
                     CreateMessageST7540@dataLenUC 00E4                                     _ClearDataReady 2E1E  
                       __size_of_StopPostFireTimer 0014                  __size_of_Transmit_Pi_Default_Data 002C  
                        ?_Transmit_Pi_Default_Data 0001                               __size_of_WaitNewTick 000C  
                       __end_of_StartPostFireTimer 2D42                                           int$flags 005E  
                      __size_of_getFireButtonState 0042                                     _InitST7540Pins 2B48  
                             __end_of_CheckCRCUART 2506                    i2CreateMessageUART@dataBufLocUC 0027  
                    CreateMessageUART@dataBufLocUC 00D9                          _Production_ISC_SN_Counter 0090  
                                  _IBC_Faults_Data 0086                                       _SSP2STATbits 000F6D  
                      __size_of_TransmitBusyST7540 0006                            _ISC_SN_ArrayUIG_Missing 0383  
                     WriteConfigST7540@frameDataUS 00C4                       CreateMessageST7540@commandUC 00E3  
                            _MissingPulseCounterCG 004C                           CreateMessageUART@dataBuf 00D3  
                                      _OSCTUNEbits 000F9B                                         _INTCONbits 000FF2  
                    __size_of_GenerateMissingPulse 0082                           _ReceivedPLMBufferIndexIG 0092  
                     __size_of_CreateMessageST7540 0126                              _ISC_PARENT_SNArrayUIG 0347  
                               _UART_TX_ISRHandler 2BAC                             _earthLeakageProblemUCG 00B7  
                                         intlevel2 0000                             __end_of_ClearDataReady 2E24  
                             _Transmit_NULL_Packet 2C02                    _ISC_SN_Array_Missing_ReverseUSG 03BF  
                               _Discovered_New_ISC 0044                        WriteConfigST7540@bitsSentUC 00CE  
                                ?i2_SendUARTPacket 0001                         CreateMessageST7540@dataBuf 00E5  
                              ?_UART_TX_ISRHandler 0001                                         _PATEnabled 004F  
                                       _RCSTA1bits 000FAB                        __end_of_TurnBuzzer_AlarmOff 2E32  
                                       _PBTEnabled 0050                                 ??i2_SendUARTPacket 0002  
                                       _OSCCONbits 000FD3                                     _StopBlastTimer 2D1A  
                            i2_CreateMessageST7540 1C72                             __end_of_InitST7540Pins 2B80  
                                 _BroadcastCheckUC 003F                         __size_of_WriteConfigST7540 00A4  
                                ?_ReadEarthLeakage 0001                       Receive_Pi_Packet@BroadcastUC 00F3  
                                      _DeArmTickCG 0042                                 ??_ReadEarthLeakage 00C5  
                              _HighSpeedTickPBTUIG 007E                               ??_UART_TX_ISRHandler 0002  
                               _HalfCycleCounterCG 0045                                   ??_SendUARTPacket 00C3  
                                _getKeySwitchState 283E                                        ?_EEPROMRead 0001  
                       WriteConfigST7540@discardUC 00CD                             ?_PacketReadParamST7540 0016  
                               ?_getKeySwitchState 0001                                       ___aldiv@sign 00CB  
                       __size_of_ReadAnalogVoltage 0058                                  __CFG_T3CMX$PORTC0 000000  
                                       _UART_Write 2DAA                                         _WDTCONbits 000FD1  
                                 _PacketDataST7540 2E08                                 _HighSpeedTickPAUIG 007C  
                            ?_Transmit_NULL_Packet 0001                                  ??_DataReadyST7540 0001  
                              ??_getKeySwitchState 00C7                                    ?_ClearDataReady 0001  
                i2CreateMessageST7540@dataBufLocUC 002B                    CreateMessageST7540@dataBufLocUC 00ED  
                                __CFG_FOSC$INTIO67 000000                             __end_of_StopBlastTimer 2D2E  
                             __size_of_TurnSSR1Off 0004                    i2ReceiveNewDataST7540@discardUC 0001  
                    ReceiveNewDataST7540@discardUC 00C2                           InitST7540@configDataRXUS 00D8  
                         InitST7540@configDataTXUS 00D2  
